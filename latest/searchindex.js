Search.setIndex({"alltitles": {"Acquisition function": [[377, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[418, null]], "Added": [[414, "added"], [414, "id4"], [414, "id8"], [414, "id14"], [414, "id21"], [414, "id30"], [414, "id36"], [414, "id40"], [414, "id47"], [414, "id52"], [414, "id58"], [414, "id64"], [414, "id68"], [414, "id72"], [414, "id76"], [414, "id81"], [414, "id85"], [414, "id88"], [414, "id92"], [414, "id96"], [414, "id100"], [414, "id103"], [414, "id107"], [414, "id111"], [414, "id115"], [414, "id119"], [414, "id125"], [414, "id128"]], "Addendum: Description of transformation functions": [[399, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[434, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[432, null]], "Adding Partial Results": [[419, "adding-partial-results"]], "Adding measurements": [[420, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[426, null]], "AdditiveKernel": [[102, null]], "Advanced Example: Chemical Substances": [[412, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[397, "an-imaginary-use-case"]], "Array-Based Callables": [[429, null]], "Asynchronous Workflows": [[419, null]], "Automatic field conversion": [[428, "automatic-field-conversion"]], "Available Models": [[430, "available-models"]], "Available recommenders suitable for initial recommendation": [[377, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[377, "available-surrogate-models"]], "Backtesting": [[370, null], [409, null]], "BaseSequentialMetaRecommender": [[166, null]], "Basic Instructions": [[422, "basic-instructions"]], "Basic Usage": [[423, "basic-usage"]], "Basic creation": [[420, "basic-creation"]], "Basic example for using BayBE": [[376, null]], "Basic string assembly": [[428, "basic-string-assembly"]], "BasicKernel": [[89, null]], "Basics": [[375, null], [420, "basics"]], "Batch optimization": [[420, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[412, null]], "Bayesian Recommenders": [[426, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[259, null]], "BayesianRecommender": [[177, null]], "Bernoulli Multi Armed Bandit": [[397, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[235, null]], "BetaPrior": [[152, null]], "BinaryTarget": [[277, null]], "BotorchRecommender": [[179, null]], "Bound methods": [[387, "bound-methods"]], "Breaking Changes": [[414, "breaking-changes"], [414, "id13"], [414, "id20"]], "Building from the Product of Parameter Values": [[427, "building-from-the-product-of-parameter-values"], [427, "id2"]], "Building the Model": [[397, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[413, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[420, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[388, null]], "Campaigns": [[420, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[131, null]], "CategoricalParameter": [[126, null], [425, "categoricalparameter"]], "Changed": [[414, "changed"], [414, "id5"], [414, "id9"], [414, "id15"], [414, "id22"], [414, "id27"], [414, "id31"], [414, "id37"], [414, "id41"], [414, "id44"], [414, "id48"], [414, "id53"], [414, "id59"], [414, "id65"], [414, "id69"], [414, "id73"], [414, "id77"], [414, "id82"], [414, "id86"], [414, "id89"], [414, "id93"], [414, "id97"], [414, "id101"], [414, "id104"], [414, "id108"], [414, "id112"], [414, "id116"], [414, "id120"]], "Changelog": [[414, null]], "Clustering Recommenders": [[426, "clustering-recommenders"]], "Code Design": [[415, "code-design"]], "ColumnTransformer": [[361, null]], "Comparing recommendations in both objects": [[405, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[90, null]], "Condition": [[36, null]], "Conditions": [[421, "conditions"]], "Constraint": [[31, null]], "Constraint Setup": [[394, "constraint-setup"]], "Constraints": [[421, null]], "Constraints Continuous": [[378, null]], "Constraints Discrete": [[381, null]], "Constraints Setup": [[395, "constraints-setup"]], "Construct the campaign and run some iterations": [[379, "construct-the-campaign-and-run-some-iterations"], [380, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[427, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[372, "constructing-campaigns-for-the-simulation-loop"], [373, "constructing-campaigns-for-the-simulation-loop"], [374, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[427, "constructing-from-a-dataframe"], [427, "id1"], [427, "id3"]], "Constructing hybrid recommenders": [[403, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[402, "constructing-the-campaign-and-performing-a-recommendation"], [403, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[403, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[421, "continuous-constraints"]], "Continuous Parameters": [[425, "continuous-parameters"]], "Continuous Subspaces": [[427, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [421, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[122, null]], "Contributing to BayBE": [[415, null]], "Contributors": [[416, null], [416, "id1"]], "Convenience construction and implicit conversion": [[424, null]], "Conventions for attrs classes": [[415, "conventions-for-attrs-classes"]], "Convert model to onnx": [[391, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[391, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[392, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[391, "create-campaign"]], "Creating Continuous Search Spaces": [[401, null]], "Creating a Simplex-Bound Discrete Subspace": [[427, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[420, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[406, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[382, "creating-and-printing-the-campaign"], [383, "creating-and-printing-the-campaign"], [385, "creating-and-printing-the-campaign"], [399, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[371, "creating-the-campaigns"]], "Creating the Objective": [[373, "creating-the-objective"]], "Creating the Optimization Objective": [[409, "creating-the-optimization-objective"], [410, "creating-the-optimization-objective"]], "Creating the Search Space": [[409, "creating-the-search-space"]], "Creating the Searchspace": [[410, "creating-the-searchspace"]], "Creating the campaign": [[377, "creating-the-campaign"], [392, "creating-the-campaign"], [405, "creating-the-campaign"]], "Creating the constraint": [[382, "creating-the-constraint"], [384, "creating-the-constraint"]], "Creating the constraints": [[383, "creating-the-constraints"], [385, "creating-the-constraints"]], "Creating the objective": [[399, "creating-the-objective"]], "Creating the recommender object": [[377, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[372, "creating-the-searchspace-and-the-objective"], [374, "creating-the-searchspace-and-the-objective"], [379, "creating-the-searchspace-and-the-objective"], [380, "creating-the-searchspace-and-the-objective"], [382, "creating-the-searchspace-and-the-objective"], [383, "creating-the-searchspace-and-the-objective"], [384, "creating-the-searchspace-and-the-objective"], [385, "creating-the-searchspace-and-the-objective"], [402, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[420, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[430, null]], "Custom Hooks": [[386, null]], "Custom Surrogates": [[390, null]], "CustomDiscreteParameter": [[129, null], [425, "customdiscreteparameter"]], "CustomEncoding": [[132, null]], "CustomONNXSurrogate": [[241, null]], "Dataframe deserialization": [[428, "dataframe-deserialization"]], "DefaultKernelFactory": [[255, null]], "Defining config dictionaries": [[407, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[388, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[389, "defining-the-hook"]], "Defining the Hooks": [[387, "defining-the-hooks"]], "Defining the Optimization Objective": [[412, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[371, "defining-the-optimization-problem"]], "Defining the Search Space": [[412, "defining-the-search-space"]], "Defining the Tasks": [[409, "defining-the-tasks"], [410, "defining-the-tasks"]], "Defining the targets": [[399, "defining-the-targets"]], "Defining the test function": [[379, "defining-the-test-function"], [380, "defining-the-test-function"], [402, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[403, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[414, "deprecations"], [414, "id11"], [414, "id18"], [414, "id25"], [414, "id34"], [414, "id50"], [414, "id56"], [414, "id62"], [414, "id79"]], "Deserialization from configuration strings": [[428, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[114, null], [424, "desirabilityobjective"]], "Developer Tools": [[415, "developer-tools"]], "Discrete Constraints": [[421, "discrete-constraints"]], "Discrete Parameters": [[425, "discrete-parameters"]], "Discrete Subspaces": [[427, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[394, null]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [421, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [421, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [421, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [421, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [421, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[123, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [421, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[357, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[421, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[397, "discussion"]], "Disk Caching": [[422, "disk-caching"]], "Dummy": [[298, null]], "Duplicate Substances": [[394, "duplicate-substances"]], "EDBOKernelFactory": [[257, null]], "EXPERIMENTAL: Floating Point Precision": [[422, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[434, null]], "Environment Variables": [[422, null]], "Equivalent copies": [[428, null]], "Estimation with Constraints": [[434, null]], "Example Searchspace and objective parameters": [[377, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[379, null]], "Example for creating campaigns from configs": [[406, null]], "Example for custom parameter passing in surrogate models": [[392, null]], "Example for full simulation loop using a table-based lookup mechanism": [[373, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[374, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[372, null]], "Example for linear constraints in a continuous searchspace": [[380, null]], "Example for surrogate model with a custom pretrained model": [[391, null]], "Example for the serialization of a campaign": [[405, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[402, null]], "Example for using custom constraints in discrete searchspaces": [[382, null]], "Example for using dependency constraints in discrete searchspaces": [[383, null]], "Example for using different strategies": [[377, null]], "Example for using exclusion constraints in discrete searchspaces": [[384, null]], "Example for using exclusion constraints incorporating sums and products": [[385, null]], "Example for using synthetic test functions in hybrid spaces": [[403, null]], "Example for using the multi target mode for the objective": [[399, null]], "Example for validation of a config file": [[407, null]], "Examples": [[411, null]], "Examples On This Page": [[423, null]], "Expectations": [[432, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[391, "experiment-setup"], [392, "experiment-setup"]], "Experiment setup": [[382, "experiment-setup"], [383, "experiment-setup"], [384, "experiment-setup"], [385, "experiment-setup"], [405, "experiment-setup"]], "Experiment setup and creating the searchspace": [[399, "experiment-setup-and-creating-the-searchspace"]], "Experimental Representation Limits": [[423, null]], "Experimental and Computational Representations": [[423, "experimental-and-computational-representations"]], "Experimental feature only!": [[422, null]], "Expired Deprecations (from 0.6.*)": [[414, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[414, "expired-deprecations-from-0-7"]], "Explainers": [[423, "explainers"]], "Extending BayBE\u2019s Functionality": [[415, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[430, "extracting-the-model-for-advanced-study"]], "FPSRecommender": [[191, null]], "Fixed": [[414, "fixed"], [414, "id2"], [414, "id6"], [414, "id10"], [414, "id16"], [414, "id24"], [414, "id28"], [414, "id33"], [414, "id38"], [414, "id42"], [414, "id49"], [414, "id54"], [414, "id60"], [414, "id66"], [414, "id74"], [414, "id78"], [414, "id83"], [414, "id90"], [414, "id94"], [414, "id98"], [414, "id105"], [414, "id109"], [414, "id113"], [414, "id117"], [414, "id121"], [414, "id123"], [414, "id126"]], "From GitHub": [[412, "from-github"]], "From Local Clone": [[412, "from-local-clone"]], "From Package Index": [[412, "from-package-index"]], "From the Default Constructor": [[427, "from-the-default-constructor"]], "Further information": [[420, "further-information"]], "GammaPrior": [[153, null]], "GaussianMixtureClusteringRecommender": [[186, null]], "GaussianProcessPreset": [[252, null]], "GaussianProcessSurrogate": [[245, null]], "General Information": [[426, "general-information"]], "General Workflow": [[415, "general-workflow"]], "Generating Lookup Tables": [[409, "generating-lookup-tables"], [410, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[376, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[420, "getting-recommendations"]], "Global Uncertainty Reduction": [[418, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[154, null]], "HalfNormalPrior": [[155, null]], "Hook instance vs. target instance": [[387, null]], "Hybrid constraints": [[421, null]], "Imports": [[371, "imports"], [387, "imports"], [389, "imports"], [394, "imports"], [395, "imports"], [397, "imports"], [401, "imports"], [409, "imports"], [410, "imports"]], "Inclusion of initial data": [[372, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[237, null]], "Indices and Tables": [[412, "indices-and-tables"]], "Influence of Continuous Parameters": [[434, null]], "Insights": [[423, null]], "Installation Related Issues": [[413, "installation-related-issues"]], "Interval": [[337, null]], "Invoking alternative constructors": [[428, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[391, "iterate-with-recommendations-and-measurements"], [392, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[428, "json-de-serialization"]], "KMeansClusteringRecommender": [[187, null]], "Kernel": [[91, null]], "KernelFactory": [[247, null]], "Known Issues": [[413, null]], "License": [[417, null]], "Limitations": [[431, "limitations"]], "LinearKernel": [[93, null]], "Links for documentation": [[392, "links-for-documentation"]], "Local Uncertainty Reduction": [[418, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[156, null]], "Lookup functionality and data creation": [[372, "lookup-functionality-and-data-creation"], [373, "lookup-functionality-and-data-creation"], [374, "lookup-functionality-and-data-creation"]], "MATCH mode": [[431, "match-mode"]], "MIN and MAX mode": [[431, "min-and-max-mode"]], "Maintainers": [[416, "maintainers"]], "Mandatory target bounds": [[424, null]], "Manual verification of the constraint": [[382, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[383, "manual-verification-of-the-constraints"], [384, "manual-verification-of-the-constraints"], [385, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[419, "marking-experiments-as-pending"]], "MaternKernel": [[94, null]], "MeanPredictionSurrogate": [[261, null]], "Memory During Optimization": [[434, null]], "MemorySize": [[202, null]], "Meta Recommenders": [[426, "meta-recommenders"]], "MetaRecommender": [[164, null]], "Method overrides": [[415, "method-overrides"]], "Missing Lookup Values": [[429, null]], "Mixtures": [[393, null]], "Model Interpretation in BO": [[423, null]], "Model Outputs": [[391, "model-outputs"], [392, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[394, null]], "Modeling a Mixture in Traditional Representation": [[395, null]], "Monitoring the Probability of Improvement": [[389, null]], "Monkeypatching": [[387, "monkeypatching"], [388, null], [389, "monkeypatching"]], "Multi Target": [[398, null]], "Multi-Armed Bandit": [[396, null]], "NGBoostSurrogate": [[263, null]], "NaiveHybridSpaceRecommender": [[171, null]], "Necessary imports": [[391, "necessary-imports"], [392, "necessary-imports"], [405, "necessary-imports"], [406, "necessary-imports"], [407, "necessary-imports"]], "Necessary imports for this example": [[372, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [374, "necessary-imports-for-this-example"], [376, "necessary-imports-for-this-example"], [377, "necessary-imports-for-this-example"], [379, "necessary-imports-for-this-example"], [380, "necessary-imports-for-this-example"], [382, "necessary-imports-for-this-example"], [383, "necessary-imports-for-this-example"], [384, "necessary-imports-for-this-example"], [385, "necessary-imports-for-this-example"], [399, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"]], "Nesting objects": [[428, "nesting-objects"]], "NonPredictiveRecommender": [[184, null]], "NormalPrior": [[157, null]], "NumericalContinuousParameter": [[136, null], [425, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[137, null], [425, "numericaldiscreteparameter"]], "NumericalTarget": [[283, null], [431, "numericaltarget"]], "Objective": [[109, null], [424, null]], "Optimizing a Custom Black-Box Function": [[371, null]], "Optional Dependencies": [[412, "optional-dependencies"]], "Optional dependency": [[425, null]], "Optional: Defining the Optimization Strategy": [[412, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[394, null]], "Other parameters": [[377, "other-parameters"]], "PAMClusteringRecommender": [[188, null]], "Parameter": [[124, null]], "Parameter Importance via SHAP": [[423, "parameter-importance-via-shap"]], "Parameter Setup": [[394, "parameter-setup"], [395, "parameter-setup"]], "Parameter encoding": [[425, null]], "Parameter names": [[425, null]], "Parameter tolerances": [[420, null]], "ParameterEncoding": [[133, null]], "Parameters": [[425, null]], "Parameters for a full simulation loop": [[372, "parameters-for-a-full-simulation-loop"], [373, "parameters-for-a-full-simulation-loop"], [374, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[399, "performing-some-iterations"]], "Performing the simulation loop": [[372, "performing-the-simulation-loop"]], "PeriodicKernel": [[95, null]], "Permutation Invariance": [[394, "permutation-invariance"]], "PiecewisePolynomialKernel": [[96, null]], "PlainKernelFactory": [[248, null]], "Plots": [[423, "plots"]], "Plotting the Results": [[371, "plotting-the-results"], [388, "plotting-the-results"], [389, "plotting-the-results"]], "Polars": [[422, "polars"]], "PolynomialKernel": [[97, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[150, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[388, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[103, null]], "Pure Recommenders": [[426, "pure-recommenders"]], "PureRecommender": [[174, null]], "Purely Continuous Search Spaces": [[418, null]], "PyCharm vs. exceptiongroup": [[413, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[98, null]], "RFFKernel": [[99, null]], "RQKernel": [[100, null]], "RandomForestSurrogate": [[265, null]], "RandomRecommender": [[192, null]], "RecommenderProtocol": [[161, null]], "Recommenders": [[426, null]], "Registering Custom Hooks": [[387, null]], "Removed": [[414, "removed"], [414, "id17"], [414, "id23"], [414, "id32"], [414, "id45"], [414, "id55"], [414, "id61"], [414, "id70"]], "Representation of Data within Discrete Subspaces": [[427, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[434, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[427, "restricting-search-spaces-using-constraints"]], "Row Order": [[422, null]], "Running the Simulation": [[397, "running-the-simulation"]], "Running the Simulation Loop": [[371, "running-the-simulation-loop"]], "SHAPInsight": [[82, null]], "SKLearnClusteringRecommender": [[189, null]], "Sampling Recommenders": [[426, "sampling-recommenders"]], "Scalarizer": [[117, null]], "ScaleKernel": [[104, null]], "Search Space Creation": [[394, "search-space-creation"], [395, "search-space-creation"]], "Search Space Memory Estimation": [[434, "search-space-memory-estimation"]], "Search Spaces": [[427, null]], "SearchSpace": [[197, null]], "SearchSpaceType": [[198, null]], "Searchspaces": [[400, null]], "Seeing Transfer Learning in Action": [[432, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[420, null]], "SequentialMetaRecommender": [[167, null]], "SerialMixin": [[220, null]], "Serialization": [[404, null], [420, "serialization"], [428, null]], "Serialization and de-serialization": [[405, "serialization-and-de-serialization"]], "Settings": [[371, "settings"], [388, "settings"], [389, "settings"], [401, "settings"], [409, "settings"], [410, "settings"]], "Setup": [[376, "setup"], [397, "setup"]], "Signature components": [[387, null]], "Simplex Construction": [[394, null]], "Simulating Multiple Scenarios": [[429, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[429, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[429, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[388, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[388, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[429, null]], "Simulation Loop": [[409, "simulation-loop"], [410, "simulation-loop"]], "SingleTargetObjective": [[119, null], [424, "singletargetobjective"]], "Slot-based Representation": [[395, null]], "SmoothedBoxPrior": [[158, null]], "StreamingSequentialMetaRecommender": [[168, null]], "Sub-Sampling Method": [[418, null]], "SubSelectionCondition": [[37, null], [421, "subselectioncondition"]], "SubspaceContinuous": [[195, null]], "SubspaceDiscrete": [[203, null]], "Substance Amounts": [[394, "substance-amounts"]], "SubstanceEncoding": [[134, null]], "SubstanceParameter": [[140, null], [425, "substanceparameter"]], "Suggested Fix": [[413, null], [413, null], [413, null], [413, null]], "Supported Acquisition Functions": [[419, null]], "Supported Recommenders": [[419, null]], "Surrogate": [[238, null]], "SurrogateProtocol": [[239, null]], "Surrogates": [[430, null]], "Synchronizing Pull Requests": [[415, "synchronizing-pull-requests"]], "Target": [[275, null]], "TargetMode": [[280, null]], "TargetTransformation": [[281, null]], "Targets": [[431, null]], "TaskParameter": [[127, null], [425, "taskparameter"]], "Technology": [[432, null]], "Telemetry": [[422, "telemetry"]], "Telemetry Scope": [[422, null]], "Terminology": [[394, "terminology"], [428, null], [432, null]], "Terminology Continued": [[432, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[429, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[397, "the-black-box-model"]], "The Lookup Mechanism": [[429, "the-lookup-mechanism"]], "The Optimization Loop": [[412, "the-optimization-loop"]], "The Role of the TaskParameter": [[432, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[406, "the-configuration-dictionary-as-a-string"]], "The type field": [[428, "the-type-field"]], "Theoretical Span": [[394, null]], "ThresholdCondition": [[38, null], [421, "thresholdcondition"]], "Transfer Learning": [[408, null], [410, null], [432, null]], "Triggering the Hook": [[389, "triggering-the-hook"]], "Triggering the Hooks": [[387, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[169, null]], "Uninstalling Internet Packages": [[422, null]], "Unlocking Data Treasures Through Transfer Learning": [[432, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[433, null]], "Using Custom Models": [[430, "using-custom-models"]], "Using Explicit Bounds": [[427, "using-explicit-bounds"]], "Using None": [[429, "using-none"]], "Using a Callable": [[429, "using-a-callable"]], "Using a Dataframe": [[429, "using-a-dataframe"]], "Using abbreviations": [[428, "using-abbreviations"]], "Using configuration instead": [[391, "using-configuration-instead"], [392, "using-configuration-instead"]], "Using default values": [[428, "using-default-values"]], "Utilities": [[434, null]], "Validation of model parameters": [[392, "validation-of-model-parameters"]], "Verification of Constraints": [[394, "verification-of-constraints"], [395, "verification-of-constraints"]], "Verification of Span": [[394, "verification-of-span"]], "Verification of the two dictionaries": [[407, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[380, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[413, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[379, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [380, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [403, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[415, "writing-docstrings"]], "Writing classes": [[415, "writing-classes"]], "[0.1.0] - 2022-10-01": [[414, "id127"]], "[0.10.0] - 2024-08-02": [[414, "id19"]], "[0.11.0] - 2024-09-09": [[414, "id12"]], "[0.11.1] - 2024-10-01": [[414, "id7"]], "[0.11.2] - 2024-10-11": [[414, "id3"]], "[0.11.3] - 2024-11-06": [[414, "id1"]], "[0.2.0] - 2022-11-10": [[414, "id124"]], "[0.2.1] - 2022-12-01": [[414, "id122"]], "[0.2.2] - 2023-01-13": [[414, "id118"]], "[0.2.3] - 2023-03-14": [[414, "id114"]], "[0.2.4] - 2023-03-24": [[414, "id110"]], "[0.3.0] - 2023-06-27": [[414, "id106"]], "[0.3.1] - 2023-07-17": [[414, "id102"]], "[0.3.2] - 2023-07-24": [[414, "id99"]], "[0.4.0] - 2023-08-16": [[414, "id95"]], "[0.4.1] - 2023-08-23": [[414, "id91"]], "[0.4.2] - 2023-08-29": [[414, "id87"]], "[0.5.0] - 2023-09-15": [[414, "id84"]], "[0.5.1] - 2023-10-19": [[414, "id80"]], "[0.6.0] - 2023-11-17": [[414, "id75"]], "[0.6.1] - 2023-11-27": [[414, "id71"]], "[0.7.0] - 2023-12-04": [[414, "id67"]], "[0.7.1] - 2023-12-07": [[414, "id63"]], "[0.7.2] - 2024-01-24": [[414, "id57"]], "[0.7.3] - 2024-02-09": [[414, "id51"]], "[0.7.4] - 2024-02-28": [[414, "id46"]], "[0.8.0] - 2024-02-29": [[414, "id43"]], "[0.8.1] - 2024-03-11": [[414, "id39"]], "[0.8.2] - 2024-03-27": [[414, "id35"]], "[0.9.0] - 2024-05-21": [[414, "id29"]], "[0.9.1] - 2024-06-04": [[414, "id26"]], "[Unreleased]": [[414, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleExplainerError": [[64, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, null]], "baybe.exceptions.InvalidSurrogateModelError": [[66, null]], "baybe.exceptions.InvalidTargetValueError": [[67, null]], "baybe.exceptions.ModelNotTrainedError": [[68, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, null]], "baybe.exceptions.NoRecommendersLeftError": [[70, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, null]], "baybe.exceptions.NothingToSimulateError": [[72, null]], "baybe.exceptions.NumericalUnderflowError": [[73, null]], "baybe.exceptions.OptionalImportError": [[74, null]], "baybe.exceptions.UnidentifiedSubclassError": [[75, null]], "baybe.exceptions.UnmatchedAttributeError": [[76, null]], "baybe.exceptions.UnusedObjectWarning": [[77, null]], "baybe.insights": [[78, null]], "baybe.insights.shap": [[79, null]], "baybe.insights.shap.EXPLAINERS": [[80, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[81, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[83, null]], "baybe.insights.shap.SHAP_PLOTS": [[84, null]], "baybe.insights.shap.is_shap_explainer": [[85, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[86, null]], "baybe.kernels": [[87, null]], "baybe.kernels.base": [[88, null]], "baybe.kernels.basic": [[92, null]], "baybe.kernels.composite": [[101, null]], "baybe.objective": [[105, null]], "baybe.objective.Objective": [[106, null]], "baybe.objectives": [[107, null]], "baybe.objectives.base": [[108, null]], "baybe.objectives.base.to_objective": [[110, null]], "baybe.objectives.deprecation": [[111, null]], "baybe.objectives.deprecation.structure_objective": [[112, null]], "baybe.objectives.desirability": [[113, null]], "baybe.objectives.desirability.scalarize": [[115, null]], "baybe.objectives.enum": [[116, null]], "baybe.objectives.single": [[118, null]], "baybe.parameters": [[120, null]], "baybe.parameters.base": [[121, null]], "baybe.parameters.categorical": [[125, null]], "baybe.parameters.custom": [[128, null]], "baybe.parameters.enum": [[130, null]], "baybe.parameters.numerical": [[135, null]], "baybe.parameters.substance": [[138, null]], "baybe.parameters.substance.Smiles": [[139, null]], "baybe.parameters.utils": [[141, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[142, null]], "baybe.parameters.utils.sort_parameters": [[143, null]], "baybe.parameters.validation": [[144, null]], "baybe.parameters.validation.validate_decorrelation": [[145, null]], "baybe.parameters.validation.validate_is_finite": [[146, null]], "baybe.parameters.validation.validate_unique_values": [[147, null]], "baybe.priors": [[148, null]], "baybe.priors.base": [[149, null]], "baybe.priors.basic": [[151, null]], "baybe.recommenders": [[159, null]], "baybe.recommenders.base": [[160, null]], "baybe.recommenders.meta": [[162, null]], "baybe.recommenders.meta.base": [[163, null]], "baybe.recommenders.meta.sequential": [[165, null]], "baybe.recommenders.naive": [[170, null]], "baybe.recommenders.pure": [[172, null]], "baybe.recommenders.pure.base": [[173, null]], "baybe.recommenders.pure.bayesian": [[175, null]], "baybe.recommenders.pure.bayesian.base": [[176, null]], "baybe.recommenders.pure.bayesian.botorch": [[178, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[180, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[181, null]], "baybe.recommenders.pure.nonpredictive": [[182, null]], "baybe.recommenders.pure.nonpredictive.base": [[183, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[185, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[190, null]], "baybe.searchspace": [[193, null]], "baybe.searchspace.continuous": [[194, null]], "baybe.searchspace.core": [[196, null]], "baybe.searchspace.core.to_searchspace": [[199, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[200, null]], "baybe.searchspace.discrete": [[201, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[204, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[205, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[206, null]], "baybe.searchspace.validation": [[207, null]], "baybe.searchspace.validation.get_transform_parameters": [[208, null]], "baybe.searchspace.validation.validate_parameter_names": [[209, null]], "baybe.searchspace.validation.validate_parameters": [[210, null]], "baybe.serialization": [[211, null]], "baybe.serialization.core": [[212, null]], "baybe.serialization.core.block_deserialization_hook": [[213, null]], "baybe.serialization.core.block_serialization_hook": [[214, null]], "baybe.serialization.core.converter": [[215, null]], "baybe.serialization.core.get_base_structure_hook": [[216, null]], "baybe.serialization.core.select_constructor_hook": [[217, null]], "baybe.serialization.core.unstructure_base": [[218, null]], "baybe.serialization.mixin": [[219, null]], "baybe.serialization.utils": [[221, null]], "baybe.serialization.utils.deserialize_dataframe": [[222, null]], "baybe.serialization.utils.serialize_dataframe": [[223, null]], "baybe.simulation": [[224, null]], "baybe.simulation.core": [[225, null]], "baybe.simulation.core.simulate_experiment": [[226, null]], "baybe.simulation.lookup": [[227, null]], "baybe.simulation.lookup.look_up_targets": [[228, null]], "baybe.simulation.scenarios": [[229, null]], "baybe.simulation.scenarios.simulate_scenarios": [[230, null]], "baybe.simulation.transfer_learning": [[231, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[232, null]], "baybe.surrogates": [[233, null]], "baybe.surrogates.bandit": [[234, null]], "baybe.surrogates.base": [[236, null]], "baybe.surrogates.custom": [[240, null]], "baybe.surrogates.custom.register_custom_architecture": [[242, null]], "baybe.surrogates.gaussian_process": [[243, null]], "baybe.surrogates.gaussian_process.core": [[244, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[246, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[249, null]], "baybe.surrogates.gaussian_process.presets": [[250, null]], "baybe.surrogates.gaussian_process.presets.core": [[251, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[253, null]], "baybe.surrogates.gaussian_process.presets.default": [[254, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[256, null]], "baybe.surrogates.linear": [[258, null]], "baybe.surrogates.naive": [[260, null]], "baybe.surrogates.ngboost": [[262, null]], "baybe.surrogates.random_forest": [[264, null]], "baybe.surrogates.utils": [[266, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[267, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[268, null]], "baybe.surrogates.utils.catch_constant_targets": [[269, null]], "baybe.surrogates.validation": [[270, null]], "baybe.surrogates.validation.get_model_params_validator": [[271, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[272, null]], "baybe.targets": [[273, null]], "baybe.targets.base": [[274, null]], "baybe.targets.binary": [[276, null]], "baybe.targets.binary.ChoiceValue": [[278, null]], "baybe.targets.enum": [[279, null]], "baybe.targets.numerical": [[282, null]], "baybe.targets.transforms": [[284, null]], "baybe.targets.transforms.bell_transform": [[285, null]], "baybe.targets.transforms.linear_transform": [[286, null]], "baybe.targets.transforms.triangular_transform": [[287, null]], "baybe.telemetry": [[288, null]], "baybe.telemetry.get_user_details": [[289, null]], "baybe.telemetry.is_enabled": [[290, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[291, null]], "baybe.telemetry.telemetry_record_value": [[292, null]], "baybe.utils": [[293, null]], "baybe.utils.augmentation": [[294, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[295, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[296, null]], "baybe.utils.basic": [[297, null]], "baybe.utils.basic.find_subclass": [[300, null]], "baybe.utils.basic.get_baseclasses": [[301, null]], "baybe.utils.basic.get_subclasses": [[302, null]], "baybe.utils.basic.group_duplicate_values": [[303, null]], "baybe.utils.basic.hilberts_factory": [[304, null]], "baybe.utils.basic.is_all_instance": [[305, null]], "baybe.utils.basic.match_attributes": [[306, null]], "baybe.utils.basic.refers_to": [[307, null]], "baybe.utils.basic.register_hooks": [[308, null]], "baybe.utils.basic.to_tuple": [[309, null]], "baybe.utils.boolean": [[310, null]], "baybe.utils.boolean.check_if_in": [[311, null]], "baybe.utils.boolean.is_abstract": [[312, null]], "baybe.utils.boolean.strtobool": [[313, null]], "baybe.utils.chemistry": [[314, null]], "baybe.utils.chemistry.get_canonical_smiles": [[315, null]], "baybe.utils.chemistry.get_fingerprint_class": [[316, null]], "baybe.utils.chemistry.name_to_smiles": [[317, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[318, null]], "baybe.utils.conversion": [[319, null]], "baybe.utils.conversion.fraction_to_float": [[320, null]], "baybe.utils.conversion.nonstring_to_tuple": [[321, null]], "baybe.utils.dataframe": [[322, null]], "baybe.utils.dataframe.add_fake_measurements": [[323, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[324, null]], "baybe.utils.dataframe.add_parameter_noise": [[325, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[326, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[327, null]], "baybe.utils.dataframe.df_drop_string_columns": [[328, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[329, null]], "baybe.utils.dataframe.filter_df": [[330, null]], "baybe.utils.dataframe.fuzzy_row_match": [[331, null]], "baybe.utils.dataframe.get_transform_objects": [[332, null]], "baybe.utils.dataframe.pretty_print_df": [[333, null]], "baybe.utils.dataframe.to_tensor": [[334, null]], "baybe.utils.interval": [[335, null]], "baybe.utils.interval.InfiniteIntervalError": [[336, null]], "baybe.utils.interval.convert_bounds": [[338, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[339, null]], "baybe.utils.memory": [[340, null]], "baybe.utils.memory.bytes_to_human_readable": [[341, null]], "baybe.utils.numerical": [[342, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[343, null]], "baybe.utils.numerical.DTypeFloatONNX": [[344, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[345, null]], "baybe.utils.numerical.closer_element": [[346, null]], "baybe.utils.numerical.closest_element": [[347, null]], "baybe.utils.numerical.geom_mean": [[348, null]], "baybe.utils.plotting": [[349, null]], "baybe.utils.plotting.create_example_plots": [[350, null]], "baybe.utils.plotting.indent": [[351, null]], "baybe.utils.plotting.to_string": [[352, null]], "baybe.utils.random": [[353, null]], "baybe.utils.random.set_random_seed": [[354, null]], "baybe.utils.random.temporary_seed": [[355, null]], "baybe.utils.sampling_algorithms": [[356, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[358, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[359, null]], "baybe.utils.scaling": [[360, null]], "baybe.utils.torch": [[362, null]], "baybe.utils.torch.DTypeFloatTorch": [[363, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[364, null]], "baybe.utils.validation": [[365, null]], "baybe.utils.validation.finite_float": [[366, null]], "baybe.utils.validation.non_inf_float": [[367, null]], "baybe.utils.validation.non_nan_float": [[368, null]], "baybe.utils.validation.validate_not_nan": [[369, null]], "classproperty": [[299, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[413, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[391, "pre-training-stage"]], "\u26a1 Quick Start": [[412, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[412, "maintainers"]], "\ud83d\udcbb Installation": [[412, "installation"]], "\ud83d\udcc4 License": [[412, "license"]], "\ud83d\udce1 Telemetry": [[412, "telemetry"]], "\ud83d\udd0b Batteries Included": [[412, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[412, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[82, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[161, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[174, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[197, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[202, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[238, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[239, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[255, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[257, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[275, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[277, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[283, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[299, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[298, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[336, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[361, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[131, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[132, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[134, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[336, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[158, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[323, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[324, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[325, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[102, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[174, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[174, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[174, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[152, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[326, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[158, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[82, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[104, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[102, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[103, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[89, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[267, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[268, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[252, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.insights": [[78, "module-baybe.insights", false]], "baybe.insights.shap": [[79, "module-baybe.insights.shap", false]], "baybe.kernels": [[87, "module-baybe.kernels", false]], "baybe.kernels.base": [[88, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[92, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[101, "module-baybe.kernels.composite", false]], "baybe.objective": [[105, "module-baybe.objective", false]], "baybe.objectives": [[107, "module-baybe.objectives", false]], "baybe.objectives.base": [[108, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[111, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[113, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[116, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[118, "module-baybe.objectives.single", false]], "baybe.parameters": [[120, "module-baybe.parameters", false]], "baybe.parameters.base": [[121, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[125, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[128, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[130, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[135, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[138, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[141, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[144, "module-baybe.parameters.validation", false]], "baybe.priors": [[148, "module-baybe.priors", false]], "baybe.priors.base": [[149, "module-baybe.priors.base", false]], "baybe.priors.basic": [[151, "module-baybe.priors.basic", false]], "baybe.recommenders": [[159, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[160, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[162, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[163, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[165, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[170, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[172, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[173, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[175, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[176, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[178, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[180, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[182, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[183, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[185, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[190, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[193, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[194, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[196, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[201, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[207, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[211, "module-baybe.serialization", false]], "baybe.serialization.core": [[212, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[219, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[221, "module-baybe.serialization.utils", false]], "baybe.simulation": [[224, "module-baybe.simulation", false]], "baybe.simulation.core": [[225, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[227, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[229, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[231, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[233, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[234, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[236, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[240, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[243, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[244, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[246, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[250, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[251, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[254, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[256, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[258, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[260, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[262, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[264, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[266, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[270, "module-baybe.surrogates.validation", false]], "baybe.targets": [[273, "module-baybe.targets", false]], "baybe.targets.base": [[274, "module-baybe.targets.base", false]], "baybe.targets.binary": [[276, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[279, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[282, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[284, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[288, "module-baybe.telemetry", false]], "baybe.utils": [[293, "module-baybe.utils", false]], "baybe.utils.augmentation": [[294, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[297, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[310, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[314, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[319, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[322, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[335, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[340, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[342, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[349, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[353, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[356, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[360, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[362, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[365, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[281, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[285, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[152, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[152, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[277, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[213, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[214, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[283, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[341, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[269, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[131, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[126, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[311, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[278, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[299, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[346, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[347, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[361, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[202, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[122, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[124, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[202, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[202, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[174, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[90, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[153, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[197, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[198, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[122, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[338, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[215, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[337, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[350, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[132, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[129, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[132, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[255, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[222, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[114, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[295, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[296, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[197, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[198, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[123, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[357, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[343, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[344, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[363, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[298, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[257, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[198, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[123, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[126, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[197, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[202, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[202, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[202, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[82, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[82, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[80, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[277, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[358, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[300, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[366, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[238, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[239, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[361, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[357, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[320, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[82, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[197, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[89, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[90, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[91, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[93, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[94, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[95, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[97, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[98, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[99, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[100, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[102, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[103, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[104, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[109, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[119, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[122, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[123, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[124, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[126, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[127, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[140, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[150, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[152, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[153, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[154, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[155, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[156, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[157, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[197, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[220, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[238, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[275, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[277, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[283, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[337, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[89, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[90, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[91, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[93, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[94, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[95, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[97, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[98, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[99, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[100, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[102, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[103, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[104, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[109, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[119, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[122, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[123, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[124, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[126, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[127, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[140, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[150, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[152, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[153, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[154, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[155, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[156, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[157, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[197, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[220, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[238, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[275, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[277, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[283, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[337, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[197, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[197, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[82, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[82, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[331, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[153, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[252, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[117, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[348, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[216, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[301, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[315, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[197, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[316, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[271, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[197, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[142, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[302, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[332, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[208, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[289, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[303, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[155, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[198, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleexplainererror": [[64, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[65, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[351, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[336, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[131, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[337, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[66, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[67, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[312, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[122, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[124, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[122, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[124, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[290, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[122, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[123, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[124, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[337, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[85, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[164, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[91, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[94, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[98, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[99, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[100, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[94, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[98, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[99, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[100, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[281, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[286, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[93, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[156, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[157, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[156, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[228, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[337, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[86, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[253, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[361, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[280, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[306, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[94, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[280, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[117, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[202, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[164, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[280, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[283, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[68, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [78, "module-baybe.insights", false], [79, "module-baybe.insights.shap", false], [87, "module-baybe.kernels", false], [88, "module-baybe.kernels.base", false], [92, "module-baybe.kernels.basic", false], [101, "module-baybe.kernels.composite", false], [105, "module-baybe.objective", false], [107, "module-baybe.objectives", false], [108, "module-baybe.objectives.base", false], [111, "module-baybe.objectives.deprecation", false], [113, "module-baybe.objectives.desirability", false], [116, "module-baybe.objectives.enum", false], [118, "module-baybe.objectives.single", false], [120, "module-baybe.parameters", false], [121, "module-baybe.parameters.base", false], [125, "module-baybe.parameters.categorical", false], [128, "module-baybe.parameters.custom", false], [130, "module-baybe.parameters.enum", false], [135, "module-baybe.parameters.numerical", false], [138, "module-baybe.parameters.substance", false], [141, "module-baybe.parameters.utils", false], [144, "module-baybe.parameters.validation", false], [148, "module-baybe.priors", false], [149, "module-baybe.priors.base", false], [151, "module-baybe.priors.basic", false], [159, "module-baybe.recommenders", false], [160, "module-baybe.recommenders.base", false], [162, "module-baybe.recommenders.meta", false], [163, "module-baybe.recommenders.meta.base", false], [165, "module-baybe.recommenders.meta.sequential", false], [170, "module-baybe.recommenders.naive", false], [172, "module-baybe.recommenders.pure", false], [173, "module-baybe.recommenders.pure.base", false], [175, "module-baybe.recommenders.pure.bayesian", false], [176, "module-baybe.recommenders.pure.bayesian.base", false], [178, "module-baybe.recommenders.pure.bayesian.botorch", false], [180, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [182, "module-baybe.recommenders.pure.nonpredictive", false], [183, "module-baybe.recommenders.pure.nonpredictive.base", false], [185, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [190, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [193, "module-baybe.searchspace", false], [194, "module-baybe.searchspace.continuous", false], [196, "module-baybe.searchspace.core", false], [201, "module-baybe.searchspace.discrete", false], [207, "module-baybe.searchspace.validation", false], [211, "module-baybe.serialization", false], [212, "module-baybe.serialization.core", false], [219, "module-baybe.serialization.mixin", false], [221, "module-baybe.serialization.utils", false], [224, "module-baybe.simulation", false], [225, "module-baybe.simulation.core", false], [227, "module-baybe.simulation.lookup", false], [229, "module-baybe.simulation.scenarios", false], [231, "module-baybe.simulation.transfer_learning", false], [233, "module-baybe.surrogates", false], [234, "module-baybe.surrogates.bandit", false], [236, "module-baybe.surrogates.base", false], [240, "module-baybe.surrogates.custom", false], [243, "module-baybe.surrogates.gaussian_process", false], [244, "module-baybe.surrogates.gaussian_process.core", false], [246, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [250, "module-baybe.surrogates.gaussian_process.presets", false], [251, "module-baybe.surrogates.gaussian_process.presets.core", false], [254, "module-baybe.surrogates.gaussian_process.presets.default", false], [256, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [258, "module-baybe.surrogates.linear", false], [260, "module-baybe.surrogates.naive", false], [262, "module-baybe.surrogates.ngboost", false], [264, "module-baybe.surrogates.random_forest", false], [266, "module-baybe.surrogates.utils", false], [270, "module-baybe.surrogates.validation", false], [273, "module-baybe.targets", false], [274, "module-baybe.targets.base", false], [276, "module-baybe.targets.binary", false], [279, "module-baybe.targets.enum", false], [282, "module-baybe.targets.numerical", false], [284, "module-baybe.targets.transforms", false], [288, "module-baybe.telemetry", false], [293, "module-baybe.utils", false], [294, "module-baybe.utils.augmentation", false], [297, "module-baybe.utils.basic", false], [310, "module-baybe.utils.boolean", false], [314, "module-baybe.utils.chemistry", false], [319, "module-baybe.utils.conversion", false], [322, "module-baybe.utils.dataframe", false], [335, "module-baybe.utils.interval", false], [340, "module-baybe.utils.memory", false], [342, "module-baybe.utils.numerical", false], [349, "module-baybe.utils.plotting", false], [353, "module-baybe.utils.random", false], [356, "module-baybe.utils.sampling_algorithms", false], [360, "module-baybe.utils.scaling", false], [362, "module-baybe.utils.torch", false], [365, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[122, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[123, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[124, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[126, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[275, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[277, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[283, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[317, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[367, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[368, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[81, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[321, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[70, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[157, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[71, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[72, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[94, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[99, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[283, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[73, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[109, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[106, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[97, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[97, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[131, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[74, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[104, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[104, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[124, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[204, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[205, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[133, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[82, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[97, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[238, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[97, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[333, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[150, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[103, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[174, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[357, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[153, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[161, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[171, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[174, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[184, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[161, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[307, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[242, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[308, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "rffkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[359, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[115, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[114, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[117, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[154, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[155, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[156, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[157, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[104, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[197, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[198, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[217, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[181, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[223, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[220, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[354, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[83, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[84, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[82, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[158, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[226, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[230, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[232, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[119, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[139, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[318, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[158, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[143, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[313, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[112, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[195, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[134, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[140, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[277, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[275, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[277, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[283, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[238, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[238, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[177, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[179, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[239, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[275, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[280, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[109, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[114, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[119, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[281, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[127, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[291, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[292, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[355, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[238, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[239, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[197, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[220, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[238, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[275, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[277, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[283, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[197, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[220, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[235, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[237, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[238, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[245, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[259, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[261, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[263, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[265, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[275, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[277, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[283, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[275, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[277, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[283, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[110, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[199, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[352, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[334, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[337, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[309, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[195, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[197, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[203, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[275, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[277, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[283, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[361, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[283, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[281, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[287, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[169, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[197, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[75, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[76, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[218, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[77, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[337, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[339, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[82, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[241, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[272, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[145, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[146, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[369, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[209, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[210, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[200, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[206, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[147, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[93, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[93, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[345, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[364, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[114, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [78, 0, 0, "-", "insights"], [87, 0, 0, "-", "kernels"], [105, 0, 0, "-", "objective"], [107, 0, 0, "-", "objectives"], [120, 0, 0, "-", "parameters"], [148, 0, 0, "-", "priors"], [159, 0, 0, "-", "recommenders"], [193, 0, 0, "-", "searchspace"], [211, 0, 0, "-", "serialization"], [224, 0, 0, "-", "simulation"], [233, 0, 0, "-", "surrogates"], [273, 0, 0, "-", "targets"], [288, 0, 0, "-", "telemetry"], [293, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[22, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[24, 5, 1, "", "convert_acqf"], [25, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 6, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 6, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 6, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "toggle_discrete_candidates"], [27, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[27, 4, 1, "", "data"], [27, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[27, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[27, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[27, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[27, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[27, 4, 1, "", "complement"], [27, 4, 1, "", "constraints"], [27, 4, 1, "", "dry_run"], [27, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[27, 4, 1, "", "config_json"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 6, 1, "", "is_continuous"], [30, 6, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[30, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 2, 1, "", "get_valid"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[34, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[34, 4, 1, "", "df"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[36, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[36, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[40, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 6, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[41, 4, 1, "", "idx_offset"], [41, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[43, 5, 1, "", "ContinuousLinearEqualityConstraint"], [44, 5, 1, "", "ContinuousLinearInequalityConstraint"], [45, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 2, 1, "", "get_valid"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[47, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[47, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.validation": [[57, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[57, 4, 1, "", "constraints"]], "baybe.exceptions": [[60, 7, 1, "", "DeprecationError"], [61, 7, 1, "", "EmptySearchSpaceError"], [62, 7, 1, "", "IncompatibilityError"], [63, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 7, 1, "", "IncompatibleExplainerError"], [65, 7, 1, "", "IncompatibleSearchSpaceError"], [66, 7, 1, "", "InvalidSurrogateModelError"], [67, 7, 1, "", "InvalidTargetValueError"], [68, 7, 1, "", "ModelNotTrainedError"], [69, 7, 1, "", "NoMCAcquisitionFunctionError"], [70, 7, 1, "", "NoRecommendersLeftError"], [71, 7, 1, "", "NotEnoughPointsLeftError"], [72, 7, 1, "", "NothingToSimulateError"], [73, 7, 1, "", "NumericalUnderflowError"], [74, 7, 1, "", "OptionalImportError"], [75, 7, 1, "", "UnidentifiedSubclassError"], [76, 7, 1, "", "UnmatchedAttributeError"], [77, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.insights": [[79, 0, 0, "-", "shap"]], "baybe.insights.shap": [[80, 8, 1, "", "EXPLAINERS"], [81, 8, 1, "", "NON_SHAP_EXPLAINERS"], [82, 1, 1, "", "SHAPInsight"], [83, 8, 1, "", "SHAP_EXPLAINERS"], [84, 8, 1, "", "SHAP_PLOTS"], [85, 5, 1, "", "is_shap_explainer"], [86, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "background_data"], [82, 2, 1, "", "explain"], [82, 3, 1, "", "explainer"], [82, 2, 1, "", "from_campaign"], [82, 2, 1, "", "from_recommender"], [82, 2, 1, "", "from_surrogate"], [82, 2, 1, "", "plot"], [82, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[82, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[82, 4, 1, "", "campaign"], [82, 4, 1, "", "explainer_cls"], [82, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[82, 4, 1, "", "explainer_cls"], [82, 4, 1, "", "measurements"], [82, 4, 1, "", "objective"], [82, 4, 1, "", "recommender"], [82, 4, 1, "", "searchspace"], [82, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[82, 4, 1, "", "**kwargs"], [82, 4, 1, "", "data"], [82, 4, 1, "", "explanation_index"], [82, 4, 1, "", "plot_type"], [82, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[86, 4, 1, "", "data"], [86, 4, 1, "", "explainer_cls"], [86, 4, 1, "", "surrogate"], [86, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[88, 0, 0, "-", "base"], [92, 0, 0, "-", "basic"], [101, 0, 0, "-", "composite"]], "baybe.kernels.base": [[89, 1, 1, "", "BasicKernel"], [90, 1, 1, "", "CompositeKernel"], [91, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_dict"], [89, 2, 1, "", "from_json"], [89, 2, 1, "", "to_dict"], [89, 2, 1, "", "to_factory"], [89, 2, 1, "", "to_gpytorch"], [89, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[89, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[89, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[90, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[90, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.basic": [[93, 1, 1, "", "LinearKernel"], [94, 1, 1, "", "MaternKernel"], [95, 1, 1, "", "PeriodicKernel"], [96, 1, 1, "", "PiecewisePolynomialKernel"], [97, 1, 1, "", "PolynomialKernel"], [98, 1, 1, "", "RBFKernel"], [99, 1, 1, "", "RFFKernel"], [100, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"], [93, 3, 1, "", "variance_initial_value"], [93, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 3, 1, "", "lengthscale_initial_value"], [94, 3, 1, "", "lengthscale_prior"], [94, 3, 1, "", "nu"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 3, 1, "", "lengthscale_initial_value"], [95, 3, 1, "", "lengthscale_prior"], [95, 3, 1, "", "period_length_initial_value"], [95, 3, 1, "", "period_length_prior"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 3, 1, "", "q"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 3, 1, "", "offset_initial_value"], [97, 3, 1, "", "offset_prior"], [97, 3, 1, "", "power"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_factory"], [97, 2, 1, "", "to_gpytorch"], [97, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[97, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[97, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 3, 1, "", "lengthscale_initial_value"], [98, 3, 1, "", "lengthscale_prior"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "lengthscale_initial_value"], [99, 3, 1, "", "lengthscale_prior"], [99, 3, 1, "", "num_samples"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "lengthscale_initial_value"], [100, 3, 1, "", "lengthscale_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.composite": [[102, 1, 1, "", "AdditiveKernel"], [103, 1, 1, "", "ProductKernel"], [104, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[102, 2, 1, "", "__init__"], [102, 3, 1, "", "base_kernels"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[103, 2, 1, "", "__init__"], [103, 3, 1, "", "base_kernels"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[104, 2, 1, "", "__init__"], [104, 3, 1, "", "base_kernel"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 3, 1, "", "outputscale_initial_value"], [104, 3, 1, "", "outputscale_prior"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.objective": [[106, 5, 1, "", "Objective"]], "baybe.objectives": [[108, 0, 0, "-", "base"], [111, 0, 0, "-", "deprecation"], [113, 0, 0, "-", "desirability"], [116, 0, 0, "-", "enum"], [118, 0, 0, "-", "single"]], "baybe.objectives.base": [[109, 1, 1, "", "Objective"], [110, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 6, 1, "", "targets"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_json"], [109, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[109, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[109, 4, 1, "", "allow_extra"], [109, 4, 1, "", "allow_missing"], [109, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[112, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[114, 1, 1, "", "DesirabilityObjective"], [115, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "scalarizer"], [114, 6, 1, "", "targets"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_json"], [114, 2, 1, "", "transform"], [114, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[114, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[114, 4, 1, "", "allow_extra"], [114, 4, 1, "", "allow_missing"], [114, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[115, 4, 1, "", "scalarizer"], [115, 4, 1, "", "values"], [115, 4, 1, "", "weights"]], "baybe.objectives.enum": [[117, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[117, 3, 1, "", "GEOM_MEAN"], [117, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[119, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 6, 1, "", "targets"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[119, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[119, 4, 1, "", "allow_extra"], [119, 4, 1, "", "allow_missing"], [119, 4, 1, "", "df"]], "baybe.parameters": [[121, 0, 0, "-", "base"], [125, 0, 0, "-", "categorical"], [128, 0, 0, "-", "custom"], [130, 0, 0, "-", "enum"], [135, 0, 0, "-", "numerical"], [138, 0, 0, "-", "substance"], [141, 0, 0, "-", "utils"], [144, 0, 0, "-", "validation"]], "baybe.parameters.base": [[122, 1, 1, "", "ContinuousParameter"], [123, 1, 1, "", "DiscreteParameter"], [124, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[122, 2, 1, "", "__init__"], [122, 6, 1, "", "comp_rep_columns"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 6, 1, "", "is_continuous"], [122, 6, 1, "", "is_discrete"], [122, 2, 1, "", "is_in_range"], [122, 3, 1, "", "is_numerical"], [122, 3, 1, "", "name"], [122, 2, 1, "", "summary"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "to_searchspace"], [122, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[122, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[122, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[123, 2, 1, "", "__init__"], [123, 6, 1, "", "comp_df"], [123, 6, 1, "", "comp_rep_columns"], [123, 3, 1, "", "encoding"], [123, 2, 1, "", "from_dict"], [123, 2, 1, "", "from_json"], [123, 6, 1, "", "is_continuous"], [123, 6, 1, "", "is_discrete"], [123, 2, 1, "", "is_in_range"], [123, 3, 1, "", "is_numerical"], [123, 3, 1, "", "name"], [123, 2, 1, "", "summary"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "to_json"], [123, 2, 1, "", "to_searchspace"], [123, 2, 1, "", "to_subspace"], [123, 2, 1, "", "transform"], [123, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[123, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[123, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[123, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[123, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "comp_rep_columns"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 6, 1, "", "is_continuous"], [124, 6, 1, "", "is_discrete"], [124, 2, 1, "", "is_in_range"], [124, 3, 1, "", "is_numerical"], [124, 3, 1, "", "name"], [124, 2, 1, "", "summary"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[124, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[124, 4, 1, "", "item"]], "baybe.parameters.categorical": [[126, 1, 1, "", "CategoricalParameter"], [127, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[126, 2, 1, "", "__init__"], [126, 6, 1, "", "comp_df"], [126, 6, 1, "", "comp_rep_columns"], [126, 3, 1, "", "encoding"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 6, 1, "", "is_continuous"], [126, 6, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"], [126, 2, 1, "", "to_subspace"], [126, 2, 1, "", "transform"], [126, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[126, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[126, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[126, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[127, 2, 1, "", "__init__"], [127, 3, 1, "", "active_values"], [127, 6, 1, "", "comp_df"], [127, 6, 1, "", "comp_rep_columns"], [127, 3, 1, "", "encoding"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 6, 1, "", "is_continuous"], [127, 6, 1, "", "is_discrete"], [127, 2, 1, "", "is_in_range"], [127, 3, 1, "", "is_numerical"], [127, 3, 1, "", "name"], [127, 2, 1, "", "summary"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "to_searchspace"], [127, 2, 1, "", "to_subspace"], [127, 2, 1, "", "transform"], [127, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[127, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[127, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[127, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[127, 4, 1, "", "series"]], "baybe.parameters.custom": [[129, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[129, 2, 1, "", "__init__"], [129, 6, 1, "", "comp_df"], [129, 6, 1, "", "comp_rep_columns"], [129, 3, 1, "", "data"], [129, 3, 1, "", "decorrelate"], [129, 3, 1, "", "encoding"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 6, 1, "", "is_continuous"], [129, 6, 1, "", "is_discrete"], [129, 2, 1, "", "is_in_range"], [129, 3, 1, "", "is_numerical"], [129, 3, 1, "", "name"], [129, 2, 1, "", "summary"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "to_searchspace"], [129, 2, 1, "", "to_subspace"], [129, 2, 1, "", "transform"], [129, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[129, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[129, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[129, 4, 1, "", "series"]], "baybe.parameters.enum": [[131, 1, 1, "", "CategoricalEncoding"], [132, 1, 1, "", "CustomEncoding"], [133, 1, 1, "", "ParameterEncoding"], [134, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[131, 3, 1, "", "INT"], [131, 3, 1, "", "OHE"], [131, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[132, 3, 1, "", "CUSTOM"], [132, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[134, 3, 1, "", "ATOMPAIR"], [134, 3, 1, "", "AUTOCORR"], [134, 3, 1, "", "AVALON"], [134, 3, 1, "", "E3FP"], [134, 3, 1, "", "ECFP"], [134, 3, 1, "", "ELECTROSHAPE"], [134, 3, 1, "", "ERG"], [134, 3, 1, "", "ESTATE"], [134, 3, 1, "", "FUNCTIONALGROUPS"], [134, 3, 1, "", "GETAWAY"], [134, 3, 1, "", "GHOSECRIPPEN"], [134, 3, 1, "", "KLEKOTAROTH"], [134, 3, 1, "", "LAGGNER"], [134, 3, 1, "", "LAYERED"], [134, 3, 1, "", "LINGO"], [134, 3, 1, "", "MACCS"], [134, 3, 1, "", "MAP"], [134, 3, 1, "", "MHFP"], [134, 3, 1, "", "MORDRED"], [134, 3, 1, "", "MORGAN_FP"], [134, 3, 1, "", "MORSE"], [134, 3, 1, "", "MQNS"], [134, 3, 1, "", "PATTERN"], [134, 3, 1, "", "PHARMACOPHORE"], [134, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [134, 3, 1, "", "PUBCHEM"], [134, 3, 1, "", "RDF"], [134, 3, 1, "", "RDKIT"], [134, 3, 1, "", "RDKIT2DDESCRIPTORS"], [134, 3, 1, "", "RDKITFINGERPRINT"], [134, 3, 1, "", "SECFP"], [134, 3, 1, "", "TOPOLOGICALTORSION"], [134, 3, 1, "", "USR"], [134, 3, 1, "", "USRCAT"], [134, 3, 1, "", "VSA"], [134, 3, 1, "", "WHIM"], [134, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[136, 1, 1, "", "NumericalContinuousParameter"], [137, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "bounds"], [136, 6, 1, "", "comp_rep_columns"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_df"], [137, 6, 1, "", "comp_rep_columns"], [137, 3, 1, "", "encoding"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"], [137, 3, 1, "", "tolerance"], [137, 2, 1, "", "transform"], [137, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[137, 4, 1, "", "series"]], "baybe.parameters.substance": [[139, 3, 1, "", "Smiles"], [140, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 3, 1, "", "data"], [140, 3, 1, "", "decorrelate"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "kwargs_conformer"], [140, 3, 1, "", "kwargs_fingerprint"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.utils": [[142, 5, 1, "", "get_parameters_from_dataframe"], [143, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[142, 4, 1, "", "df"], [142, 4, 1, "", "factory"], [142, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[145, 5, 1, "", "validate_decorrelation"], [146, 5, 1, "", "validate_is_finite"], [147, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[149, 0, 0, "-", "base"], [151, 0, 0, "-", "basic"]], "baybe.priors.base": [[150, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_gpytorch"], [150, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[150, 4, 1, "", "string"]], "baybe.priors.basic": [[152, 1, 1, "", "BetaPrior"], [153, 1, 1, "", "GammaPrior"], [154, 1, 1, "", "HalfCauchyPrior"], [155, 1, 1, "", "HalfNormalPrior"], [156, 1, 1, "", "LogNormalPrior"], [157, 1, 1, "", "NormalPrior"], [158, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "alpha"], [152, 3, 1, "", "beta"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_gpytorch"], [152, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[152, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "concentration"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 3, 1, "", "rate"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_gpytorch"], [153, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[153, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 3, 1, "", "scale"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 3, 1, "", "scale"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_gpytorch"], [155, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[155, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 3, 1, "", "loc"], [156, 3, 1, "", "scale"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_gpytorch"], [156, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[156, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 3, 1, "", "loc"], [157, 3, 1, "", "scale"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_gpytorch"], [157, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[157, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[158, 2, 1, "", "__init__"], [158, 3, 1, "", "a"], [158, 3, 1, "", "b"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 3, 1, "", "sigma"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_gpytorch"], [158, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[158, 4, 1, "", "string"]], "baybe.recommenders": [[160, 0, 0, "-", "base"], [162, 0, 0, "-", "meta"], [170, 0, 0, "-", "naive"], [172, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[161, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[161, 4, 1, "", "batch_size"], [161, 4, 1, "", "measurements"], [161, 4, 1, "", "objective"], [161, 4, 1, "", "pending_experiments"], [161, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[163, 0, 0, "-", "base"], [165, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[164, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "from_json"], [164, 2, 1, "", "get_current_recommender"], [164, 2, 1, "", "get_next_recommender"], [164, 2, 1, "", "get_non_meta_recommender"], [164, 6, 1, "", "is_stateful"], [164, 2, 1, "", "recommend"], [164, 2, 1, "", "select_recommender"], [164, 2, 1, "", "to_dict"], [164, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[164, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[164, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[166, 1, 1, "", "BaseSequentialMetaRecommender"], [167, 1, 1, "", "SequentialMetaRecommender"], [168, 1, 1, "", "StreamingSequentialMetaRecommender"], [169, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 2, 1, "", "get_current_recommender"], [166, 2, 1, "", "get_next_recommender"], [166, 2, 1, "", "get_non_meta_recommender"], [166, 6, 1, "", "is_stateful"], [166, 2, 1, "", "recommend"], [166, 2, 1, "", "select_recommender"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[166, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "get_current_recommender"], [167, 2, 1, "", "get_next_recommender"], [167, 2, 1, "", "get_non_meta_recommender"], [167, 6, 1, "", "is_stateful"], [167, 3, 1, "", "mode"], [167, 2, 1, "", "recommend"], [167, 3, 1, "", "recommenders"], [167, 2, 1, "", "select_recommender"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[167, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "get_current_recommender"], [168, 2, 1, "", "get_next_recommender"], [168, 2, 1, "", "get_non_meta_recommender"], [168, 6, 1, "", "is_stateful"], [168, 2, 1, "", "recommend"], [168, 3, 1, "", "recommenders"], [168, 2, 1, "", "select_recommender"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[168, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "get_current_recommender"], [169, 2, 1, "", "get_next_recommender"], [169, 2, 1, "", "get_non_meta_recommender"], [169, 3, 1, "", "initial_recommender"], [169, 6, 1, "", "is_stateful"], [169, 2, 1, "", "recommend"], [169, 3, 1, "", "recommender"], [169, 3, 1, "", "remain_switched"], [169, 2, 1, "", "select_recommender"], [169, 3, 1, "", "switch_after"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[169, 4, 1, "", "string"]], "baybe.recommenders.naive": [[171, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "allow_recommending_already_measured"], [171, 3, 1, "", "allow_recommending_pending_experiments"], [171, 3, 1, "", "allow_repeated_recommendations"], [171, 3, 1, "", "compatibility"], [171, 3, 1, "", "cont_recommender"], [171, 3, 1, "", "disc_recommender"], [171, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[171, 4, 1, "", "batch_size"], [171, 4, 1, "", "measurements"], [171, 4, 1, "", "objective"], [171, 4, 1, "", "pending_experiments"], [171, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[173, 0, 0, "-", "base"], [175, 0, 0, "-", "bayesian"], [182, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[174, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "allow_recommending_already_measured"], [174, 3, 1, "", "allow_recommending_pending_experiments"], [174, 3, 1, "", "allow_repeated_recommendations"], [174, 3, 1, "", "compatibility"], [174, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[174, 4, 1, "", "batch_size"], [174, 4, 1, "", "measurements"], [174, 4, 1, "", "objective"], [174, 4, 1, "", "pending_experiments"], [174, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[176, 0, 0, "-", "base"], [178, 0, 0, "-", "botorch"], [180, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[177, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "acquisition_function"], [177, 3, 1, "", "acquisition_function_cls"], [177, 3, 1, "", "allow_recommending_already_measured"], [177, 3, 1, "", "allow_recommending_pending_experiments"], [177, 3, 1, "", "allow_repeated_recommendations"], [177, 3, 1, "", "compatibility"], [177, 2, 1, "", "get_surrogate"], [177, 2, 1, "", "recommend"], [177, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[177, 4, 1, "", "batch_size"], [177, 4, 1, "", "measurements"], [177, 4, 1, "", "objective"], [177, 4, 1, "", "pending_experiments"], [177, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[179, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "acquisition_function"], [179, 3, 1, "", "acquisition_function_cls"], [179, 3, 1, "", "allow_recommending_already_measured"], [179, 3, 1, "", "allow_recommending_pending_experiments"], [179, 3, 1, "", "allow_repeated_recommendations"], [179, 3, 1, "", "compatibility"], [179, 2, 1, "", "get_surrogate"], [179, 3, 1, "", "hybrid_sampler"], [179, 3, 1, "", "n_raw_samples"], [179, 3, 1, "", "n_restarts"], [179, 2, 1, "", "recommend"], [179, 3, 1, "", "sampling_percentage"], [179, 3, 1, "", "sequential_continuous"], [179, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[179, 4, 1, "", "batch_size"], [179, 4, 1, "", "measurements"], [179, 4, 1, "", "objective"], [179, 4, 1, "", "pending_experiments"], [179, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[181, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[183, 0, 0, "-", "base"], [185, 0, 0, "-", "clustering"], [190, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[184, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[184, 2, 1, "", "__init__"], [184, 3, 1, "", "allow_recommending_already_measured"], [184, 3, 1, "", "allow_recommending_pending_experiments"], [184, 3, 1, "", "allow_repeated_recommendations"], [184, 3, 1, "", "compatibility"], [184, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[184, 4, 1, "", "batch_size"], [184, 4, 1, "", "measurements"], [184, 4, 1, "", "objective"], [184, 4, 1, "", "pending_experiments"], [184, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[186, 1, 1, "", "GaussianMixtureClusteringRecommender"], [187, 1, 1, "", "KMeansClusteringRecommender"], [188, 1, 1, "", "PAMClusteringRecommender"], [189, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[186, 2, 1, "", "__init__"], [186, 3, 1, "", "allow_recommending_already_measured"], [186, 3, 1, "", "allow_recommending_pending_experiments"], [186, 3, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 3, 1, "", "model_cluster_num_parameter_name"], [186, 3, 1, "", "model_params"], [186, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[187, 2, 1, "", "__init__"], [187, 3, 1, "", "allow_recommending_already_measured"], [187, 3, 1, "", "allow_recommending_pending_experiments"], [187, 3, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 3, 1, "", "model_cluster_num_parameter_name"], [187, 3, 1, "", "model_params"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[188, 2, 1, "", "__init__"], [188, 3, 1, "", "allow_recommending_already_measured"], [188, 3, 1, "", "allow_recommending_pending_experiments"], [188, 3, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "model_cluster_num_parameter_name"], [188, 3, 1, "", "model_params"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[189, 2, 1, "", "__init__"], [189, 3, 1, "", "allow_recommending_already_measured"], [189, 3, 1, "", "allow_recommending_pending_experiments"], [189, 3, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "model_cluster_num_parameter_name"], [189, 3, 1, "", "model_params"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[191, 1, 1, "", "FPSRecommender"], [192, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[191, 2, 1, "", "__init__"], [191, 3, 1, "", "allow_recommending_already_measured"], [191, 3, 1, "", "allow_recommending_pending_experiments"], [191, 3, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[192, 2, 1, "", "__init__"], [192, 3, 1, "", "allow_recommending_already_measured"], [192, 3, 1, "", "allow_recommending_pending_experiments"], [192, 3, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.searchspace": [[194, 0, 0, "-", "continuous"], [196, 0, 0, "-", "core"], [201, 0, 0, "-", "discrete"], [207, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[195, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[195, 2, 1, "", "__init__"], [195, 6, 1, "", "comp_rep_bounds"], [195, 6, 1, "", "comp_rep_columns"], [195, 6, 1, "", "constraints_cardinality"], [195, 3, 1, "", "constraints_lin_eq"], [195, 3, 1, "", "constraints_lin_ineq"], [195, 3, 1, "", "constraints_nonlin"], [195, 2, 1, "", "empty"], [195, 2, 1, "", "from_bounds"], [195, 2, 1, "", "from_dataframe"], [195, 2, 1, "", "from_dict"], [195, 2, 1, "", "from_json"], [195, 2, 1, "", "from_parameter"], [195, 2, 1, "", "from_product"], [195, 6, 1, "", "full_factorial"], [195, 2, 1, "", "get_parameters_by_name"], [195, 6, 1, "", "is_empty"], [195, 6, 1, "", "parameter_names"], [195, 3, 1, "", "parameters"], [195, 2, 1, "", "sample_from_full_factorial"], [195, 2, 1, "", "sample_uniform"], [195, 2, 1, "", "samples_full_factorial"], [195, 2, 1, "", "samples_random"], [195, 2, 1, "", "to_dict"], [195, 2, 1, "", "to_json"], [195, 2, 1, "", "to_searchspace"], [195, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[195, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[195, 4, 1, "", "df"], [195, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[195, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[195, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[195, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[195, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[195, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[195, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[197, 1, 1, "", "SearchSpace"], [198, 1, 1, "", "SearchSpaceType"], [199, 5, 1, "", "to_searchspace"], [200, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[197, 2, 1, "", "__init__"], [197, 6, 1, "", "comp_rep_bounds"], [197, 6, 1, "", "comp_rep_columns"], [197, 6, 1, "", "constraints"], [197, 6, 1, "", "constraints_augmentable"], [197, 3, 1, "", "continuous"], [197, 3, 1, "", "discrete"], [197, 2, 1, "", "estimate_product_space_size"], [197, 2, 1, "", "from_dataframe"], [197, 2, 1, "", "from_dict"], [197, 2, 1, "", "from_json"], [197, 2, 1, "", "from_parameter"], [197, 2, 1, "", "from_product"], [197, 2, 1, "", "get_comp_rep_parameter_indices"], [197, 2, 1, "", "get_parameters_by_name"], [197, 6, 1, "", "n_tasks"], [197, 6, 1, "", "parameter_names"], [197, 6, 1, "", "parameters"], [197, 6, 1, "", "task_idx"], [197, 2, 1, "", "to_dict"], [197, 2, 1, "", "to_json"], [197, 2, 1, "", "transform"], [197, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[197, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[197, 4, 1, "", "df"], [197, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[197, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[197, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[197, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[197, 4, 1, "", "constraints"], [197, 4, 1, "", "empty_encoding"], [197, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[197, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[197, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[197, 4, 1, "", "allow_extra"], [197, 4, 1, "", "allow_missing"], [197, 4, 1, "", "data"], [197, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[198, 3, 1, "", "CONTINUOUS"], [198, 3, 1, "", "DISCRETE"], [198, 3, 1, "", "EITHER"], [198, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[202, 1, 1, "", "MemorySize"], [203, 1, 1, "", "SubspaceDiscrete"], [204, 5, 1, "", "parameter_cartesian_prod_pandas"], [205, 5, 1, "", "parameter_cartesian_prod_polars"], [206, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[202, 2, 1, "", "__init__"], [202, 3, 1, "", "comp_rep_bytes"], [202, 6, 1, "", "comp_rep_human_readable"], [202, 3, 1, "", "comp_rep_shape"], [202, 3, 1, "", "exp_rep_bytes"], [202, 6, 1, "", "exp_rep_human_readable"], [202, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[203, 2, 1, "", "__init__"], [203, 3, 1, "", "comp_rep"], [203, 6, 1, "", "comp_rep_bounds"], [203, 6, 1, "", "comp_rep_columns"], [203, 3, 1, "", "constraints"], [203, 2, 1, "", "empty"], [203, 3, 1, "", "empty_encoding"], [203, 2, 1, "", "estimate_product_space_size"], [203, 3, 1, "", "exp_rep"], [203, 2, 1, "", "from_dataframe"], [203, 2, 1, "", "from_dict"], [203, 2, 1, "", "from_json"], [203, 2, 1, "", "from_parameter"], [203, 2, 1, "", "from_product"], [203, 2, 1, "", "from_simplex"], [203, 2, 1, "", "get_candidates"], [203, 2, 1, "", "get_parameters_by_name"], [203, 6, 1, "", "is_empty"], [203, 6, 1, "", "metadata"], [203, 6, 1, "", "parameter_names"], [203, 3, 1, "", "parameters"], [203, 2, 1, "", "to_dict"], [203, 2, 1, "", "to_json"], [203, 2, 1, "", "to_searchspace"], [203, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[203, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[203, 4, 1, "", "df"], [203, 4, 1, "", "empty_encoding"], [203, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[203, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[203, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[203, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[203, 4, 1, "", "boundary_only"], [203, 4, 1, "", "constraints"], [203, 4, 1, "", "max_nonzero"], [203, 4, 1, "", "max_sum"], [203, 4, 1, "", "min_nonzero"], [203, 4, 1, "", "product_parameters"], [203, 4, 1, "", "simplex_parameters"], [203, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates.params": [[203, 4, 1, "", "allow_recommending_already_measured"], [203, 4, 1, "", "allow_repeated_recommendations"], [203, 4, 1, "", "exclude"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[203, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[204, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[205, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[208, 5, 1, "", "get_transform_parameters"], [209, 5, 1, "", "validate_parameter_names"], [210, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[212, 0, 0, "-", "core"], [219, 0, 0, "-", "mixin"], [221, 0, 0, "-", "utils"]], "baybe.serialization.core": [[213, 5, 1, "", "block_deserialization_hook"], [214, 5, 1, "", "block_serialization_hook"], [215, 8, 1, "", "converter"], [216, 5, 1, "", "get_base_structure_hook"], [217, 5, 1, "", "select_constructor_hook"], [218, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[216, 4, 1, "", "base"], [216, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[218, 4, 1, "", "base"], [218, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[220, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[220, 2, 1, "", "from_dict"], [220, 2, 1, "", "from_json"], [220, 2, 1, "", "to_dict"], [220, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[220, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[220, 4, 1, "", "string"]], "baybe.serialization.utils": [[222, 5, 1, "", "deserialize_dataframe"], [223, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[225, 0, 0, "-", "core"], [227, 0, 0, "-", "lookup"], [229, 0, 0, "-", "scenarios"], [231, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[226, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[226, 4, 1, "", "batch_size"], [226, 4, 1, "", "campaign"], [226, 4, 1, "", "impute_mode"], [226, 4, 1, "", "initial_data"], [226, 4, 1, "", "lookup"], [226, 4, 1, "", "n_doe_iterations"], [226, 4, 1, "", "noise_percent"], [226, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[228, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[228, 4, 1, "", "impute_mode"], [228, 4, 1, "", "lookup"], [228, 4, 1, "", "queries"], [228, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[230, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[230, 4, 1, "", "batch_size"], [230, 4, 1, "", "groupby"], [230, 4, 1, "", "impute_mode"], [230, 4, 1, "", "initial_data"], [230, 4, 1, "", "lookup"], [230, 4, 1, "", "n_doe_iterations"], [230, 4, 1, "", "n_mc_iterations"], [230, 4, 1, "", "noise_percent"], [230, 4, 1, "", "random_seed"], [230, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[232, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[232, 4, 1, "", "batch_size"], [232, 4, 1, "", "campaign"], [232, 4, 1, "", "groupby"], [232, 4, 1, "", "lookup"], [232, 4, 1, "", "n_doe_iterations"], [232, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[234, 0, 0, "-", "bandit"], [236, 0, 0, "-", "base"], [240, 0, 0, "-", "custom"], [243, 0, 0, "-", "gaussian_process"], [258, 0, 0, "-", "linear"], [260, 0, 0, "-", "naive"], [262, 0, 0, "-", "ngboost"], [264, 0, 0, "-", "random_forest"], [266, 0, 0, "-", "utils"], [270, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[235, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[235, 2, 1, "", "__init__"], [235, 2, 1, "", "fit"], [235, 2, 1, "", "from_dict"], [235, 2, 1, "", "from_json"], [235, 2, 1, "", "posterior"], [235, 2, 1, "", "posterior_means"], [235, 2, 1, "", "posterior_modes"], [235, 3, 1, "", "prior"], [235, 3, 1, "", "supports_transfer_learning"], [235, 2, 1, "", "to_botorch"], [235, 2, 1, "", "to_dict"], [235, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[235, 4, 1, "", "measurements"], [235, 4, 1, "", "objective"], [235, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[235, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[235, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[235, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[237, 1, 1, "", "IndependentGaussianSurrogate"], [238, 1, 1, "", "Surrogate"], [239, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "fit"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 2, 1, "", "posterior"], [237, 3, 1, "", "supports_transfer_learning"], [237, 2, 1, "", "to_botorch"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[237, 4, 1, "", "measurements"], [237, 4, 1, "", "objective"], [237, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[237, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[237, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "fit"], [238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "posterior"], [238, 3, 1, "", "supports_transfer_learning"], [238, 2, 1, "", "to_botorch"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[238, 4, 1, "", "measurements"], [238, 4, 1, "", "objective"], [238, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[238, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[238, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "fit"], [239, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[241, 1, 1, "", "CustomONNXSurrogate"], [242, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "default_model"], [241, 2, 1, "", "fit"], [241, 2, 1, "", "from_dict"], [241, 2, 1, "", "from_json"], [241, 3, 1, "", "onnx_input_name"], [241, 3, 1, "", "onnx_str"], [241, 2, 1, "", "posterior"], [241, 3, 1, "", "supports_transfer_learning"], [241, 2, 1, "", "to_botorch"], [241, 2, 1, "", "to_dict"], [241, 2, 1, "", "to_json"], [241, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[241, 4, 1, "", "measurements"], [241, 4, 1, "", "objective"], [241, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[241, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[241, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[241, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[241, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[244, 0, 0, "-", "core"], [246, 0, 0, "-", "kernel_factory"], [250, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[245, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[245, 2, 1, "", "__init__"], [245, 2, 1, "", "fit"], [245, 2, 1, "", "from_dict"], [245, 2, 1, "", "from_json"], [245, 2, 1, "", "from_preset"], [245, 3, 1, "", "kernel_factory"], [245, 2, 1, "", "posterior"], [245, 3, 1, "", "supports_transfer_learning"], [245, 2, 1, "", "to_botorch"], [245, 2, 1, "", "to_dict"], [245, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[245, 4, 1, "", "measurements"], [245, 4, 1, "", "objective"], [245, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[245, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[245, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[245, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[247, 1, 1, "", "KernelFactory"], [248, 1, 1, "", "PlainKernelFactory"], [249, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[247, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "from_json"], [248, 3, 1, "", "kernel"], [248, 2, 1, "", "to_dict"], [248, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[248, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[248, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[251, 0, 0, "-", "core"], [254, 0, 0, "-", "default"], [256, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[252, 1, 1, "", "GaussianProcessPreset"], [253, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[252, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[255, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[255, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[257, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[257, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[259, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 3, 1, "", "model_params"], [259, 2, 1, "", "posterior"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[259, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[261, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 2, 1, "", "posterior"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[263, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "fit"], [263, 2, 1, "", "from_dict"], [263, 2, 1, "", "from_json"], [263, 3, 1, "", "model_params"], [263, 2, 1, "", "posterior"], [263, 3, 1, "", "supports_transfer_learning"], [263, 2, 1, "", "to_botorch"], [263, 2, 1, "", "to_dict"], [263, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[263, 4, 1, "", "measurements"], [263, 4, 1, "", "objective"], [263, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[263, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[263, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[263, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[265, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "fit"], [265, 2, 1, "", "from_dict"], [265, 2, 1, "", "from_json"], [265, 3, 1, "", "model_params"], [265, 2, 1, "", "posterior"], [265, 3, 1, "", "supports_transfer_learning"], [265, 2, 1, "", "to_botorch"], [265, 2, 1, "", "to_dict"], [265, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[265, 4, 1, "", "measurements"], [265, 4, 1, "", "objective"], [265, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[265, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[265, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[265, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[267, 5, 1, "", "batchify_ensemble_predictor"], [268, 5, 1, "", "batchify_mean_var_prediction"], [269, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[267, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[269, 4, 1, "", "cls"], [269, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[271, 5, 1, "", "get_model_params_validator"], [272, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[271, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[272, 4, 1, "", "model_cls"]], "baybe.targets": [[274, 0, 0, "-", "base"], [276, 0, 0, "-", "binary"], [279, 0, 0, "-", "enum"], [282, 0, 0, "-", "numerical"], [284, 0, 0, "-", "transforms"]], "baybe.targets.base": [[275, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[275, 2, 1, "", "__init__"], [275, 2, 1, "", "from_dict"], [275, 2, 1, "", "from_json"], [275, 3, 1, "", "name"], [275, 2, 1, "", "summary"], [275, 2, 1, "", "to_dict"], [275, 2, 1, "", "to_json"], [275, 2, 1, "", "to_objective"], [275, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[275, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[275, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[275, 4, 1, "", "series"]], "baybe.targets.binary": [[277, 1, 1, "", "BinaryTarget"], [278, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[277, 2, 1, "", "__init__"], [277, 3, 1, "", "failure_value"], [277, 2, 1, "", "from_dict"], [277, 2, 1, "", "from_json"], [277, 3, 1, "", "name"], [277, 3, 1, "", "success_value"], [277, 2, 1, "", "summary"], [277, 2, 1, "", "to_dict"], [277, 2, 1, "", "to_json"], [277, 2, 1, "", "to_objective"], [277, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[277, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[277, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[277, 4, 1, "", "series"]], "baybe.targets.enum": [[280, 1, 1, "", "TargetMode"], [281, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[280, 3, 1, "", "MATCH"], [280, 3, 1, "", "MAX"], [280, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[281, 3, 1, "", "BELL"], [281, 3, 1, "", "LINEAR"], [281, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[283, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[283, 2, 1, "", "__init__"], [283, 3, 1, "", "bounds"], [283, 2, 1, "", "from_dict"], [283, 2, 1, "", "from_json"], [283, 3, 1, "", "mode"], [283, 3, 1, "", "name"], [283, 2, 1, "", "summary"], [283, 2, 1, "", "to_dict"], [283, 2, 1, "", "to_json"], [283, 2, 1, "", "to_objective"], [283, 2, 1, "", "transform"], [283, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[283, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[283, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[283, 4, 1, "", "series"]], "baybe.targets.transforms": [[285, 5, 1, "", "bell_transform"], [286, 5, 1, "", "linear_transform"], [287, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[285, 4, 1, "", "arr"], [285, 4, 1, "", "lower"], [285, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[286, 4, 1, "", "arr"], [286, 4, 1, "", "descending"], [286, 4, 1, "", "lower"], [286, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[287, 4, 1, "", "arr"], [287, 4, 1, "", "lower"], [287, 4, 1, "", "upper"]], "baybe.telemetry": [[289, 5, 1, "", "get_user_details"], [290, 5, 1, "", "is_enabled"], [291, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [292, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[291, 4, 1, "", "cached_recommendation"], [291, 4, 1, "", "measurements"], [291, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [291, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[292, 4, 1, "", "instrument_name"], [292, 4, 1, "", "value"]], "baybe.utils": [[294, 0, 0, "-", "augmentation"], [297, 0, 0, "-", "basic"], [310, 0, 0, "-", "boolean"], [314, 0, 0, "-", "chemistry"], [319, 0, 0, "-", "conversion"], [322, 0, 0, "-", "dataframe"], [335, 0, 0, "-", "interval"], [340, 0, 0, "-", "memory"], [342, 0, 0, "-", "numerical"], [349, 0, 0, "-", "plotting"], [353, 0, 0, "-", "random"], [356, 0, 0, "-", "sampling_algorithms"], [360, 0, 0, "-", "scaling"], [362, 0, 0, "-", "torch"], [365, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[295, 5, 1, "", "df_apply_dependency_augmentation"], [296, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[295, 4, 1, "", "affected"], [295, 4, 1, "", "causing"], [295, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[296, 4, 1, "", "column_groups"], [296, 4, 1, "", "df"]], "baybe.utils.basic": [[298, 1, 1, "", "Dummy"], [299, 1, 1, "", "classproperty"], [300, 5, 1, "", "find_subclass"], [301, 5, 1, "", "get_baseclasses"], [302, 5, 1, "", "get_subclasses"], [303, 5, 1, "", "group_duplicate_values"], [304, 5, 1, "", "hilberts_factory"], [305, 5, 1, "", "is_all_instance"], [306, 5, 1, "", "match_attributes"], [307, 5, 1, "", "refers_to"], [308, 5, 1, "", "register_hooks"], [309, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[298, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[299, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[301, 4, 1, "", "abstract"], [301, 4, 1, "", "cls"], [301, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[302, 4, 1, "", "abstract"], [302, 4, 1, "", "cls"], [302, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[303, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[306, 4, 1, "", "callable_"], [306, 4, 1, "", "ignore"], [306, 4, 1, "", "object"], [306, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[308, 4, 1, "", "post_hooks"], [308, 4, 1, "", "pre_hooks"], [308, 4, 1, "", "target"]], "baybe.utils.boolean": [[311, 5, 1, "", "check_if_in"], [312, 5, 1, "", "is_abstract"], [313, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[311, 4, 1, "", "allowed"], [311, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[312, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[313, 4, 1, "", "val"]], "baybe.utils.chemistry": [[315, 5, 1, "", "get_canonical_smiles"], [316, 5, 1, "", "get_fingerprint_class"], [317, 5, 1, "", "name_to_smiles"], [318, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[316, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[317, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[318, 4, 1, "", "encoding"], [318, 4, 1, "", "kwargs_conformer"], [318, 4, 1, "", "kwargs_fingerprint"], [318, 4, 1, "", "prefix"], [318, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[320, 5, 1, "", "fraction_to_float"], [321, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[320, 4, 1, "", "value"]], "baybe.utils.dataframe": [[323, 5, 1, "", "add_fake_measurements"], [324, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [325, 5, 1, "", "add_parameter_noise"], [326, 5, 1, "", "arrays_to_dataframes"], [327, 5, 1, "", "df_drop_single_value_columns"], [328, 5, 1, "", "df_drop_string_columns"], [329, 5, 1, "", "df_uncorrelated_features"], [330, 5, 1, "", "filter_df"], [331, 5, 1, "", "fuzzy_row_match"], [332, 5, 1, "", "get_transform_objects"], [333, 5, 1, "", "pretty_print_df"], [334, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[323, 4, 1, "", "bad_intervals"], [323, 4, 1, "", "data"], [323, 4, 1, "", "good_intervals"], [323, 4, 1, "", "good_reference_values"], [323, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[324, 4, 1, "", "df"], [324, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[325, 4, 1, "", "data"], [325, 4, 1, "", "noise_level"], [325, 4, 1, "", "noise_type"], [325, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[326, 4, 1, "", "input_labels"], [326, 4, 1, "", "output_labels"], [326, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[327, 4, 1, "", "df"], [327, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[328, 4, 1, "", "df"], [328, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[329, 4, 1, "", "df"], [329, 4, 1, "", "exclude_list"], [329, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[330, 4, 1, "", "complement"], [330, 4, 1, "", "df"], [330, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[331, 4, 1, "", "left_df"], [331, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [331, 4, 1, "", "parameters"], [331, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[332, 4, 1, "", "allow_extra"], [332, 4, 1, "", "allow_missing"], [332, 4, 1, "", "df"], [332, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[333, 4, 1, "", "df"], [333, 4, 1, "", "max_columns"], [333, 4, 1, "", "max_colwidth"], [333, 4, 1, "", "max_rows"], [333, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[334, 4, 1, "", "*x"]], "baybe.utils.interval": [[336, 7, 1, "", "InfiniteIntervalError"], [337, 1, 1, "", "Interval"], [338, 5, 1, "", "convert_bounds"], [339, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[336, 2, 1, "", "__init__"], [336, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[337, 2, 1, "", "__init__"], [337, 6, 1, "", "center"], [337, 2, 1, "", "contains"], [337, 2, 1, "", "create"], [337, 2, 1, "", "from_dict"], [337, 2, 1, "", "from_json"], [337, 6, 1, "", "is_bounded"], [337, 6, 1, "", "is_degenerate"], [337, 6, 1, "", "is_fully_unbounded"], [337, 6, 1, "", "is_half_bounded"], [337, 6, 1, "", "is_left_bounded"], [337, 6, 1, "", "is_right_bounded"], [337, 3, 1, "", "lower"], [337, 2, 1, "", "to_dict"], [337, 2, 1, "", "to_json"], [337, 2, 1, "", "to_ndarray"], [337, 2, 1, "", "to_tensor"], [337, 2, 1, "", "to_tuple"], [337, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[337, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[337, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[337, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[338, 4, 1, "", "bounds"]], "baybe.utils.memory": [[341, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[341, 4, 1, "", "num"]], "baybe.utils.numerical": [[343, 3, 1, "", "DTypeFloatNumpy"], [344, 3, 1, "", "DTypeFloatONNX"], [345, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [346, 5, 1, "", "closer_element"], [347, 5, 1, "", "closest_element"], [348, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[346, 4, 1, "", "target"], [346, 4, 1, "", "x"], [346, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[347, 4, 1, "", "array"], [347, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[348, 4, 1, "", "arr"], [348, 4, 1, "", "weights"]], "baybe.utils.plotting": [[350, 5, 1, "", "create_example_plots"], [351, 5, 1, "", "indent"], [352, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[350, 4, 1, "", "ax"], [350, 4, 1, "", "base_name"], [350, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[352, 4, 1, "", "*fields"], [352, 4, 1, "", "header"], [352, 4, 1, "", "single_line"]], "baybe.utils.random": [[354, 5, 1, "", "set_random_seed"], [355, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[354, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[355, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[357, 1, 1, "", "DiscreteSamplingMethod"], [358, 5, 1, "", "farthest_point_sampling"], [359, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[357, 3, 1, "", "FPS"], [357, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[358, 4, 1, "", "initialization"], [358, 4, 1, "", "n_samples"], [358, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[359, 4, 1, "", "df"], [359, 4, 1, "", "method"], [359, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[361, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[361, 2, 1, "", "__init__"], [361, 2, 1, "", "fit"], [361, 3, 1, "", "mapping"], [361, 2, 1, "", "transform"]], "baybe.utils.torch": [[363, 8, 1, "", "DTypeFloatTorch"], [364, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[366, 5, 1, "", "finite_float"], [367, 5, 1, "", "non_inf_float"], [368, 5, 1, "", "non_nan_float"], [369, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 179, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 304, 334, 337, 370, 373, 380, 384, 387, 388, 391, 392, 394, 395, 396, 397, 398, 404, 408, 409, 410, 412, 413, 414, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432], "0": [8, 18, 30, 40, 41, 47, 94, 129, 137, 140, 158, 166, 167, 168, 179, 203, 226, 228, 285, 286, 287, 295, 296, 313, 324, 325, 329, 330, 344, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 417, 418, 421, 424, 425, 427, 428, 429, 431, 434], "00": [403, 427], "000": [384, 405], "001": [324, 421], "0011315439999748378": 387, "005": [372, 373, 374, 376, 377], "007522": 395, "01": [158, 379, 380, 385, 388, 402, 403, 410], "013062": 399, "02": 410, "021": [257, 329], "022690": 399, "024712": 395, "027364": 401, "03213": [257, 329], "033753": 395, "035530": 395, "036005": 395, "036549": 401, "049645": 377, "05": 410, "051058": 399, "057": [372, 373, 374, 376, 377, 387], "06": [203, 269], "070175": 395, "075367": 395, "08": 410, "090447": 403, "09653736976391157": 397, "0f": 388, "1": [22, 27, 40, 94, 115, 129, 140, 169, 179, 195, 226, 228, 230, 232, 285, 286, 287, 292, 295, 296, 303, 313, 325, 330, 344, 348, 358, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 413, 417, 420, 421, 424, 425, 427, 428, 429, 431, 434], "10": [179, 228, 257, 329, 371, 373, 382, 383, 384, 385, 388, 391, 392, 394, 395, 397, 399, 401, 405, 406, 407, 409, 410, 412, 419, 425, 429, 434], "100": [376, 377, 382, 383, 384, 385, 388, 391, 392, 394, 395, 399, 405, 410, 423, 424, 425, 429, 431, 434], "1000": 429, "102": 402, "1024": [134, 414, 425], "1038": [257, 329], "105": [372, 373, 374, 376, 377, 387, 399, 427], "105895": 395, "107864": 401, "11": [299, 394, 395, 413], "110": 403, "111": 405, "112": 399, "1147": 384, "1148": 384, "1149": 384, "1150": 384, "116521": 395, "117458": 395, "119426": 395, "12": [394, 395, 403, 415, 427], "120": [372, 373, 374, 376, 377, 382, 384, 387, 399, 425], "120000": 402, "120683": 395, "121": 399, "121168": 401, "122": 405, "122239": 395, "123392": 395, "123593": 399, "124": 399, "126": [382, 384, 385, 413], "1268824": [372, 373, 374], "128": [10, 399], "13": [394, 403, 409, 427], "1337": [388, 389, 434], "139": 376, "14": [394, 427], "141672": 395, "14448993259018328": 397, "1454": 414, "15": [228, 384, 394, 409, 410, 412, 420, 427], "150": [382, 385, 402, 421], "1500": 425, "151": 384, "153": [372, 373, 374, 376, 377, 387], "155": 403, "156289": 395, "157998": 395, "159397": 395, "16": [333, 344, 377, 394, 395], "164950": 401, "167356": 401, "168423": 395, "169112": 395, "17": [394, 395], "177": 405, "177334": 395, "18": [394, 395, 403, 420], "180": 382, "180129": 395, "185": 399, "187497": 401, "188": [402, 405], "188395": 395, "19": [377, 394, 395], "191337": 401, "191888": 395, "192": 384, "194513": 376, "195569": 401, "1e": [203, 269], "2": [8, 18, 94, 96, 115, 228, 295, 296, 303, 323, 330, 348, 358, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 417, 420, 421, 424, 425, 427, 428, 429, 431], "20": [140, 228, 371, 372, 373, 374, 388, 389, 394, 395, 399, 414, 425, 432, 434], "200": [373, 382, 384, 391, 392, 397, 405], "2004": 417, "2007": 432, "2021": 373, "2022": 412, "202248": 401, "2024": 412, "205139": 401, "206029": 403, "21": [394, 395, 406], "22": [394, 399], "221": 414, "221950": 401, "222": 405, "23": [394, 403, 429], "231656": 395, "24": [383, 394, 395, 427], "241": 425, "247525": 403, "25": [388, 394, 395, 399, 409, 427], "250": 418, "251216": 395, "254287": 395, "26": [394, 395, 427], "265018": 401, "265537": 399, "27": [394, 427], "272099": 403, "277": 399, "278": 399, "279": 399, "279799": 401, "28": 394, "280": 399, "29": [376, 391, 394, 412], "296711": 401, "297532": 395, "299239": 399, "3": [228, 295, 296, 299, 303, 330, 333, 351, 372, 373, 374, 377, 380, 382, 383, 384, 385, 387, 389, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 409, 410, 412, 413, 415, 417, 420, 421, 423, 425, 427, 428, 429, 431, 432], "30": [371, 385, 389, 394, 399, 425], "304152": 403, "306175": 399, "3078f3": 414, "31": [394, 406], "312809": 395, "32": [383, 394, 425], "329323": 399, "33": [383, 394, 395, 399], "330": 376, "330538": 399, "337252": 399, "34": [383, 395], "341747": 395, "347664": 395, "35": [383, 394], "351736": 395, "354546": 377, "358663": 395, "36": [395, 399], "360198": 395, "362241": 401, "369753": 399, "37": 395, "376050": 402, "380829": 395, "387266": 395, "39": 425, "395830": 399, "3d": 389, "4": [134, 295, 296, 333, 379, 380, 382, 383, 384, 385, 389, 394, 395, 397, 399, 401, 402, 403, 412, 417, 420, 421, 425, 427], "40": [394, 395, 424, 425], "400214": 395, "407637": 402, "414983": 401, "416311": 395, "42": 397, "421": 377, "421327": 399, "43": 395, "434775": 395, "439203": 395, "439963": 395, "443443": 403, "447": 382, "448": 382, "449": 382, "449163": 401, "45": [394, 399, 431], "450": 382, "450751": 395, "452728": 403, "469147": 395, "471298": 403, "476660": 401, "478864": 401, "492607": 399, "493106": 403, "495340": 401, "499778": 401, "5": [94, 140, 295, 296, 372, 374, 377, 379, 382, 383, 384, 385, 388, 391, 392, 394, 395, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 417, 418, 419, 420, 421, 425, 427, 429, 432, 434], "50": [385, 392, 394, 397, 399, 409, 410, 417, 418, 425, 427, 431], "500": [389, 425], "501179": 399, "502657": 399, "5066666666666667": 397, "510970": 401, "511901": 399, "513588": 395, "514584": 401, "517042": 395, "517672": 395, "52": [395, 399], "53": 399, "5313": 309, "54": [399, 412], "546232": 399, "549728": 395, "549914": 395, "55": [399, 431], "550178": 401, "551246": 399, "554989": 395, "555699": 401, "556364": 395, "56": [399, 429], "565295": 395, "566352": 401, "57": 395, "575891": 395, "576603": 399, "585552": 395, "585668": 395, "587217": 395, "59": [405, 412], "590": 373, "591211": 395, "597071": 395, "598859": 401, "6": [295, 296, 333, 372, 373, 374, 382, 383, 384, 385, 394, 395, 397, 399, 401, 403, 405, 417, 421, 427], "60": [395, 399, 424], "603009": 395, "604195": 395, "604431": 399, "609095": 399, "614746": 401, "62": [397, 402, 403], "620456": 399, "622635": 399, "623799": 399, "629559": 395, "64": [179, 399], "640129": 399, "642161": 395, "65": 397, "652708": 399, "655809": 395, "66": [395, 399], "66368270ffd51418ec58bd793f2d9b1b": 432, "666269": 401, "678181": 395, "68": 399, "685908": 395, "688820": 399, "69": [372, 373, 374], "699807": 395, "7": [140, 295, 296, 329, 383, 385, 389, 394, 395, 399, 401, 409, 417, 425, 427], "70": [394, 395], "704832": 399, "704876": 395, "705180": 403, "706667": 402, "707582": 403, "71": 425, "715763": 401, "718105": 395, "72": 399, "727784": 399, "74": 399, "741744": 399, "745": 434, "75": [394, 427], "758414": 399, "773111": 395, "778": 405, "78": [395, 399], "79": 412, "796704": 401, "7gz": 425, "7hf": 425, "8": [296, 372, 374, 382, 384, 385, 394, 395, 397, 399, 401, 412, 417, 421], "80": [395, 421], "800099": 401, "806804": 401, "818198": 399, "82": 377, "820005": 401, "820471": 399, "83": 399, "834975": 395, "8389": 309, "84": 399, "8417": 309, "850019": 401, "857": 384, "86": 399, "861": 385, "862": 385, "863": 385, "864": 385, "864616": 403, "868728": 395, "868918": 395, "87": 405, "870753": 399, "874702": 395, "879653": 395, "88": [399, 405], "883263": 399, "8859": 391, "889": 405, "89": [373, 402, 405], "8jq": 425, "9": [377, 385, 389, 394, 395, 399, 401, 417, 420, 427, 428], "90": [372, 373, 374, 376, 377, 387, 405, 427], "901620": 401, "909393": 395, "913635": 376, "918673": 377, "92": 399, "920936": 395, "925493": 395, "940866": 395, "95": 399, "954372": 395, "957692": 395, "959294": 395, "96": [373, 399], "978227": 401, "980118": 401, "982287": 401, "999": 421, "A": [0, 8, 18, 22, 27, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 68, 69, 70, 73, 75, 77, 82, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 114, 115, 119, 123, 126, 127, 129, 137, 140, 142, 151, 152, 153, 154, 155, 156, 157, 158, 161, 167, 168, 169, 171, 174, 177, 179, 181, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 204, 205, 220, 221, 226, 228, 230, 232, 235, 237, 238, 241, 245, 247, 248, 255, 257, 259, 261, 263, 265, 271, 275, 277, 283, 285, 286, 287, 295, 299, 301, 302, 303, 306, 316, 323, 329, 330, 332, 341, 348, 356, 358, 361, 371, 383, 392, 394, 395, 397, 399, 406, 407, 413, 414, 415, 417, 421, 423, 425, 426, 427, 428, 431, 432], "AND": [50, 384, 417, 421], "AS": [412, 417], "And": 391, "As": [372, 373, 374, 389, 397, 399, 409, 410, 412, 413, 414, 421, 423, 426, 427, 429], "At": 431, "But": 431, "By": [82, 114, 127, 142, 203, 312, 330, 395, 415, 422, 426, 427], "FOR": 417, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 148, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 226, 232, 235, 237, 238, 239, 241, 245, 248, 255, 257, 259, 261, 263, 265, 275, 277, 283, 288, 308, 331, 337, 350, 361, 372, 373, 374, 376, 377, 383, 387, 388, 389, 394, 395, 397, 399, 403, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 82, 86, 109, 114, 115, 119, 142, 146, 147, 167, 168, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 209, 210, 226, 228, 230, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 286, 291, 296, 301, 302, 306, 308, 311, 313, 316, 320, 323, 324, 325, 329, 330, 331, 332, 350, 352, 358, 359, 377, 379, 388, 394, 402, 403, 406, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 434], "In": [27, 41, 53, 179, 197, 224, 226, 306, 333, 372, 373, 374, 376, 388, 389, 391, 394, 395, 397, 399, 402, 403, 406, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "It": [22, 161, 168, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 224, 240, 261, 323, 372, 376, 377, 383, 392, 394, 397, 399, 403, 405, 406, 407, 409, 412, 419, 420, 421, 422, 425, 426, 427, 429, 434], "Its": [228, 391], "No": [401, 414], "Not": [417, 421], "OF": [412, 417], "OR": [412, 417], "Of": [377, 386, 411, 428], "On": [391, 397], "One": [131, 372, 374, 412], "Or": 422, "Such": [377, 421, 423, 429], "That": [197, 228, 235, 237, 238, 241, 245, 259, 261, 263, 265, 286, 377, 382, 394, 415, 427, 429, 432], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 82, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 148, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 215, 216, 218, 220, 224, 226, 228, 230, 235, 237, 238, 239, 241, 245, 248, 259, 261, 263, 265, 267, 269, 271, 272, 275, 277, 280, 283, 285, 286, 287, 289, 291, 292, 295, 296, 299, 301, 302, 303, 306, 308, 311, 312, 313, 316, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 341, 346, 347, 348, 350, 352, 354, 355, 358, 359, 372, 373, 374, 377, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 399, 402, 403, 407, 409, 410, 413, 414, 415, 417, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 433, 434], "Then": 389, "There": [72, 269, 344, 394, 401, 412, 413, 415, 419, 427], "These": [289, 370, 373, 374, 375, 378, 381, 386, 390, 393, 396, 398, 400, 404, 408, 415, 419, 421, 422, 425, 427], "To": [372, 377, 388, 389, 395, 397, 405, 409, 410, 412, 413, 415, 419, 420, 422, 425, 429], "Will": 418, "With": [323, 388, 389, 394, 397, 409, 410, 412, 419, 421, 425, 428], "_": [146, 147, 200, 206, 213, 350, 379, 388, 410], "__class__": [387, 397], "__excepthook__": 413, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 235, 237, 238, 239, 241, 245, 247, 248, 255, 257, 259, 261, 263, 265, 275, 277, 283, 298, 299, 336, 337, 361, 427, 428], "__name__": [387, 397], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 131, 132, 134, 336], "__str__": 414, "__version__": 414, "_amount": 394, "_arraylik": 326, "_c": 302, "_cumbest": 226, "_default_my_attribut": 415, "_fit": 272, "_has_switch": 169, "_iterbest": 226, "_label": 394, "_measur": 226, "_n_last_measur": [166, 167, 168], "_nbase": 318, "_nestedsequ": [115, 285, 286, 287, 347], "_no_tl": 409, "_option": 414, "_posterior": 272, "_step": [166, 167, 168], "_supportsarrai": [115, 285, 286, 287, 347], "_surrogate_model": [388, 389], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 208, 216, 217, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 303, 304, 305, 321, 332, 337], "_target": 414, "_tparamet": 142, "_tsurrog": 268, "_u": 303, "_validate_my_attribut": 415, "_was_us": [166, 167, 168], "a1": 296, "a2": 296, "ab": [385, 394], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 300, 307, 414, 433], "abc": [20, 30, 31, 32, 33, 34, 36, 89, 90, 91, 109, 123, 124, 150, 164, 174, 177, 184, 189, 237, 238, 275, 312], "abil": [418, 432], "abl": [389, 413, 419, 421, 425, 428, 434], "about": [22, 27, 124, 140, 275, 292, 372, 373, 374, 394, 402, 403, 412, 414, 415, 423, 425, 427], "abov": [269, 287, 312, 329, 371, 377, 384, 385, 387, 388, 395, 401, 412, 415, 417, 418, 419, 420, 421, 422, 425, 428, 429, 432], "absenc": 424, "absolut": [137, 325, 412], "abstract": [20, 30, 31, 32, 33, 34, 36, 89, 90, 91, 109, 122, 123, 124, 150, 164, 174, 177, 184, 238, 275, 301, 302, 312, 414, 421, 432], "abstractli": 397, "acceler": [412, 414, 416, 432], "accept": [27, 167, 245, 326, 331, 388, 389, 414, 417, 422, 424, 425, 429, 431], "access": [195, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 372, 373, 374, 382, 387, 410, 414, 421, 428], "accord": [40, 162, 395, 418, 421, 422, 426, 434], "accordingli": [179, 420, 428], "account": 419, "accumul": [152, 397, 432], "accur": 420, "acet": [372, 373, 374, 376, 377], "aceton": 394, "achiev": [17, 203, 389, 394, 397, 412, 415, 418, 420, 421], "ack": 412, "acq_funct": 377, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 388, 389, 397], "acqf1": 428, "acqf2": 428, "acqf_valu": 388, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 69, 177, 179, 382, 383, 384, 385, 388, 389, 397, 399, 405, 412, 414, 418, 426, 428, 430], "acquisition_funct": [177, 179, 377, 397, 406, 407, 414], "acquisition_function_cl": [177, 179, 414], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 177, 179, 397, 428], "across": [394, 397, 409, 419, 426, 432], "act": [394, 414, 417, 421, 429], "action": [17, 387, 397, 414, 433], "activ": [13, 30, 127, 169, 388, 389, 397, 412, 413, 414, 415, 421, 422, 423, 424, 426, 432, 433, 434], "active_dim": [89, 90, 91, 94, 96, 98, 99, 100], "active_valu": [127, 409, 410, 432], "actual": [167, 197, 224, 402, 414, 423, 427, 429, 432, 434], "ad": [27, 203, 291, 295, 323, 358, 394, 395, 415, 418, 422, 424, 425, 430, 431, 433], "adapt": [168, 257, 313, 329], "add": [27, 218, 228, 323, 324, 377, 391, 392, 394, 399, 409, 412, 417, 419, 420, 421, 423, 427, 432, 434], "add_collection3d": 389, "add_fake_measur": [376, 377, 382, 383, 384, 385, 391, 392, 399, 414, 419, 429, 434], "add_fake_result": 414, "add_measur": [27, 376, 377, 379, 380, 382, 383, 384, 385, 389, 391, 392, 397, 399, 402, 403, 412, 414, 419, 420, 422], "add_noise_to_perturb_degenerate_row": 414, "add_parameter_nois": [414, 434], "add_subplot": 389, "addendum": 417, "addit": [27, 82, 109, 114, 119, 167, 179, 197, 218, 226, 228, 230, 325, 372, 373, 374, 395, 402, 410, 412, 414, 416, 417, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 434], "addition": [387, 395, 412, 423], "additiveexplain": [80, 83], "additivekernel": 414, "address": 429, "adher": [414, 415], "adjust": [168, 373, 377, 402, 414], "adopt": 377, "adrian": [412, 416], "advanc": [168, 397, 413, 414, 422, 428, 432, 433], "advantag": [394, 415], "advic": 415, "advis": [417, 429], "affect": [27, 49, 179, 295, 387, 405, 413, 421], "affected_paramet": [49, 382, 383, 384, 385, 394, 421], "affili": [412, 422], "afford": 420, "aforement": [197, 422], "after": [169, 203, 308, 376, 377, 382, 383, 384, 385, 389, 399, 405, 412, 420, 423, 428], "afterward": 428, "again": [388, 419, 421, 426, 432], "against": [76, 291, 306, 394, 417, 432], "agent": 395, "agraw": 416, "agre": [412, 417, 423], "agreement": 417, "ai": [87, 148, 344], "aim": [420, 423], "akin": 419, "al": [373, 412, 425], "aldrich": 416, "alex": 416, "alexand": [412, 416], "algorithm": [172, 179, 323, 356, 358, 371, 394, 399, 412, 414, 419, 423, 426], "alia": [139, 181, 425], "alias": 414, "align": [82, 195, 308, 388, 427, 432], "all": [19, 20, 29, 31, 36, 49, 51, 88, 89, 90, 91, 108, 109, 114, 121, 124, 127, 129, 133, 140, 149, 150, 160, 163, 164, 167, 173, 174, 176, 179, 183, 184, 197, 204, 205, 228, 235, 236, 238, 274, 275, 295, 305, 306, 323, 372, 373, 374, 377, 379, 380, 382, 383, 387, 388, 389, 394, 395, 397, 399, 401, 402, 409, 410, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "allclos": [379, 380, 395], "alleg": 417, "allow": [17, 30, 40, 47, 51, 109, 114, 119, 137, 142, 168, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 203, 230, 292, 311, 331, 332, 372, 373, 374, 377, 394, 395, 409, 410, 412, 414, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 434], "allow_extra": [109, 114, 119, 195, 197, 203, 208, 332, 399, 414], "allow_miss": [109, 114, 119, 195, 197, 203, 208, 332, 414], "allow_recommending_already_measur": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 377, 388, 397, 406, 407, 414, 426], "allow_recommending_pending_experi": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 414, 419, 426], "allow_repeated_recommend": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 377, 388, 397, 406, 407, 414, 426], "almost": 373, "alon": [414, 417], "along": [348, 417, 425, 432], "alongsid": 417, "alpha": [152, 389], "alphabet": [143, 414], "alreadi": [27, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 377, 394, 403, 412, 414, 418, 419, 426, 427, 429, 430, 432, 434], "also": [53, 82, 142, 235, 237, 238, 241, 245, 259, 261, 263, 265, 292, 306, 308, 323, 324, 325, 372, 379, 380, 388, 389, 391, 392, 394, 399, 402, 403, 405, 409, 410, 412, 414, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "alter": [394, 414, 420], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 269, 348, 387, 394, 395, 401, 412, 414, 433, 434], "although": [394, 403, 406, 427, 429], "alwai": [13, 27, 36, 213, 214, 391, 394, 395, 412, 418, 420, 421, 429, 430, 432, 434], "ambigu": [137, 427], "amend": 421, "among": [30, 394, 412, 432], "amount": [296, 351, 359, 395, 409, 410, 419, 423, 425, 434], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 69, 74, 76, 77, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 110, 112, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 216, 218, 220, 224, 226, 228, 230, 235, 237, 238, 241, 242, 245, 248, 259, 261, 263, 265, 267, 268, 275, 277, 283, 295, 304, 306, 308, 311, 317, 321, 329, 330, 331, 333, 336, 337, 338, 347, 350, 352, 358, 359, 372, 374, 375, 377, 384, 385, 387, 388, 391, 392, 395, 399, 401, 405, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "analog": [197, 323, 427, 428], "analogi": [162, 426], "analysi": [412, 423, 430], "analyt": [3, 4, 7, 8, 69, 429, 432], "analyz": [412, 415, 423], "angl": 389, "ani": [57, 58, 82, 115, 122, 123, 124, 126, 127, 129, 140, 142, 145, 146, 147, 203, 213, 214, 218, 222, 223, 230, 259, 263, 265, 285, 286, 287, 292, 295, 305, 306, 308, 309, 311, 312, 331, 337, 339, 347, 352, 366, 367, 368, 369, 387, 394, 409, 410, 412, 413, 414, 415, 417, 419, 420, 422, 425, 428, 429, 432], "annot": [308, 387, 417], "anonym": [412, 422], "anoth": [49, 338, 373, 383, 384, 391, 392, 394, 403, 415, 421, 432], "ansatz": 414, "answer": 420, "anti": 330, "anymor": [414, 432], "anyth": 313, "anywai": 430, "anywher": 379, "apach": [412, 417], "apart": [415, 420], "api": [41, 412, 413, 428], "aplei": 423, "appar": 428, "appdata": 413, "appear": [306, 413, 414, 417, 428], "append": [389, 410], "appendix": 417, "appli": [27, 36, 37, 38, 53, 179, 197, 224, 226, 306, 317, 325, 361, 377, 378, 381, 382, 384, 385, 387, 388, 394, 409, 413, 414, 417, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432], "applic": [352, 412, 415, 417, 425, 426, 429], "approach": [203, 388, 397, 412, 415, 418, 420, 426, 428, 432], "appropri": [43, 44, 106, 203, 397, 415, 417, 427], "approxim": [10, 17, 423], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 70, 71, 72, 82, 109, 114, 115, 119, 127, 140, 142, 147, 161, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 226, 228, 230, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 287, 289, 291, 292, 295, 296, 301, 302, 303, 305, 306, 308, 312, 313, 323, 324, 326, 327, 331, 332, 350, 358, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 392, 394, 395, 397, 399, 401, 402, 405, 406, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "arang": [379, 389, 425], "arbitrari": [168, 197, 339, 414, 421, 425, 426, 429, 432, 434], "arbitrarili": [424, 428], "architectur": [272, 414, 430, 432], "ard_num_dim": [89, 90, 91, 94, 96, 98, 99, 100], "area": 389, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 93, 95, 97, 102, 103, 104, 150, 152, 153, 154, 155, 156, 157, 158, 161, 181, 239, 242, 247, 336, 415], "argu": 394, "argument": [77, 82, 87, 140, 142, 148, 164, 166, 167, 168, 169, 195, 203, 239, 308, 330, 377, 392, 399, 414, 421, 423, 425, 426, 427, 428, 429, 432], "aris": [52, 394, 414, 417, 421, 428, 434], "arithmet": [117, 424], "arizona": 416, "arm": [234, 235, 411, 416], "arm_index": 397, "around": [188, 230, 232, 399, 414, 426, 428, 434], "arr": [285, 286, 287, 348], "arrai": [115, 285, 286, 287, 298, 326, 334, 343, 347, 348, 358, 389, 414, 426, 430], "arrays_to_datafram": [379, 380, 389, 402, 403, 409, 410, 414, 429], "arriv": 412, "artifici": 434, "aryl": [372, 373, 374, 376, 412, 425], "ascend": 399, "ask": [394, 412, 414, 415, 420], "aspect": [375, 379, 380, 403, 419, 422], "assembl": [394, 428], "assembli": 433, "assert": [58, 382, 383, 384, 385, 391, 392, 394, 395, 401, 405, 414, 417, 420, 421, 428], "assess": 429, "assign": [323, 388, 395, 401, 425], "associ": [197, 397, 417, 420, 422, 424, 432], "assum": [22, 41, 240, 308, 332, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 391, 392, 394, 397, 399, 402, 403, 405, 412, 417, 421, 425, 428, 430, 431, 434], "assumpt": 429, "assur": 421, "asynchron": [412, 426, 433], "atol": [379, 380], "atompair": 134, "atompairfingerprint": 134, "attach": [22, 308, 387, 388, 389, 417], "attempt": [68, 74, 240, 350, 397, 413, 414, 419, 421, 423, 426], "attent": 169, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 235, 237, 238, 241, 245, 248, 255, 257, 259, 261, 263, 265, 275, 277, 283, 306, 309, 337, 361, 369, 414], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 79, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 138, 140, 142, 145, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 202, 203, 212, 216, 218, 235, 237, 238, 241, 245, 248, 252, 255, 257, 259, 261, 263, 265, 272, 275, 276, 277, 280, 281, 283, 306, 321, 332, 337, 342, 357, 361, 362, 365, 366, 367, 368, 369, 401, 414, 415, 417, 426, 428, 430, 431], "audit": [412, 414, 415], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 197, 267, 268, 269, 414, 420], "author": 417, "authorship": 417, "auto": [12, 14, 414, 416], "auto_tutori": 344, "autocorr": 134, "autocorrfingerprint": 134, "autodoc": 414, "automat": [27, 112, 179, 245, 331, 371, 389, 402, 413, 414, 415, 423, 424, 426, 427, 432, 433], "avail": [2, 117, 129, 131, 132, 134, 140, 167, 168, 203, 226, 228, 252, 280, 281, 292, 357, 358, 359, 374, 376, 379, 380, 394, 399, 402, 403, 412, 413, 414, 415, 417, 419, 420, 422, 423, 425, 426, 427, 428, 429, 432, 433], "available_acq_funct": 377, "avalon": 134, "avalonfingerprint": 134, "averag": [261, 388, 389, 410, 425, 429], "avoid": [197, 309, 348, 414, 415, 419, 420, 425, 427], "awai": 431, "awar": [394, 409, 410, 418, 428], "ax": [82, 350, 371, 373, 388, 389, 409, 410], "axes3d": [350, 389], "axi": [195, 226, 348, 371, 379, 380, 385, 388, 389, 394, 395, 397, 399, 402, 403, 409, 410, 427], "azim": 389, "azur": 414, "b": [52, 158, 257, 295, 303, 329, 330, 373, 383, 392, 397, 406, 407, 412, 415, 417, 420, 425, 428], "b1": 296, "b2": 296, "back": [0, 405, 415], "backend": 292, "background": [82, 86, 423], "background_data": 82, "backport": 413, "backtest": [224, 225, 231, 372, 373, 374, 388, 408, 411, 412, 414, 426, 429], "backtick": 415, "backward": [105, 111, 180, 181, 197, 414], "bad": [399, 420, 422, 431], "bad_interv": 323, "badg": 414, "bai": 412, "baird": 416, "balanc": [114, 397, 412], "banana": 415, "bandit": [235, 377, 411, 412, 414, 416], "banner": 414, "bar": [82, 84, 391, 392, 394, 405, 406, 407, 412, 414, 423, 430], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 174, 177, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 202, 203, 216, 218, 220, 235, 237, 238, 239, 240, 241, 245, 247, 248, 252, 255, 257, 259, 261, 263, 265, 269, 271, 275, 277, 280, 281, 283, 298, 299, 300, 301, 302, 326, 330, 337, 350, 357, 358, 361, 371, 376, 377, 388, 389, 391, 393, 397, 411, 412, 414, 417, 418, 421, 422, 423, 425, 426, 427, 428, 430], "base1": 395, "base2": 395, "base_data": 388, "base_kernel": [102, 103, 104], "base_nam": [350, 371, 373, 388, 389, 409, 410], "base_predictor": 267, "base_smil": 388, "basefingerprinttransform": 316, "baselin": [371, 373, 409, 412, 425], "basesequentialmetarecommend": [167, 168], "bashrc": 422, "basi": [98, 412, 417, 423], "basic": [89, 93, 94, 95, 96, 97, 98, 99, 100, 152, 153, 154, 155, 156, 157, 158, 226, 298, 299, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 399, 402, 403, 404, 405, 408, 411, 414, 415, 424, 425, 429, 433], "basic_transfer_learn": 410, "basickernel": [93, 94, 95, 96, 97, 98, 99, 100, 414], "batch": [27, 161, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 229, 267, 268, 377, 382, 383, 384, 385, 389, 399, 402, 403, 405, 409, 410, 414, 419, 426, 429], "batch_quant": 414, "batch_shap": [89, 90, 91, 94, 96, 98, 99, 100], "batch_siz": [27, 40, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 226, 230, 232, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 395, 397, 399, 402, 403, 405, 406, 409, 410, 412, 414, 419, 420, 422, 429], "batchnr": 399, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 202, 203, 220, 235, 237, 238, 239, 241, 245, 247, 248, 252, 255, 257, 259, 261, 263, 265, 275, 277, 280, 281, 283, 298, 299, 337, 357, 361, 370, 371, 372, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "baybe_cach": 422, "baybe_cache_dir": [414, 422], "baybe_deactivate_polar": [414, 422], "baybe_debug_fake_hosthash": 414, "baybe_debug_fake_userhash": 414, "baybe_numpy_use_single_precis": [345, 414, 422], "baybe_telemetry_en": [412, 422], "baybe_telemetry_endpoint": [414, 422], "baybe_telemetry_host": 414, "baybe_telemetry_hostnam": [414, 422], "baybe_telemetry_usernam": [414, 422], "baybe_telemetry_vpn_check": [414, 422], "baybe_telemetry_vpn_check_timeout": [414, 422], "baybe_torch_use_single_precis": [364, 414, 422], "bayesian": [0, 171, 177, 179, 224, 226, 230, 232, 240, 259, 397, 414, 418, 420, 423, 430, 433], "bayesian_recommend": 389, "bayesianlinearmodel": 392, "bayesianlinearsurrog": [377, 430], "bayesianrecommend": [171, 179, 240, 414, 426], "bayesianridg": 391, "bcw07": 432, "becaus": [72, 137, 197, 203, 232, 312, 387, 388, 394, 410, 415, 418, 420, 421, 422, 423, 424, 425, 428, 429, 432], "becom": [197, 394, 414, 418, 420, 421, 428, 431, 434], "been": [22, 68, 69, 167, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 331, 372, 373, 377, 412, 413, 414, 417, 419, 426, 432], "beeswarm": [82, 84, 423], "befor": [68, 169, 226, 235, 237, 238, 241, 245, 259, 261, 263, 265, 308, 371, 374, 377, 383, 388, 412, 414, 415, 422, 425, 427], "begin": [167, 382, 384, 401, 405, 426], "behalf": 417, "behav": [389, 405, 428], "behavior": [179, 412, 414, 422, 424, 426, 427, 432], "behind": [424, 428, 429, 431], "being": [104, 323, 350, 397, 413, 414, 421, 422, 425, 427], "bell": [281, 285, 399, 431], "belong": [387, 428], "below": [169, 269, 287, 384, 387, 388, 394, 415, 417, 418, 420, 421, 424, 428, 430, 431, 432], "benchmark": [412, 414, 416], "benefici": [417, 418, 422], "benefit": [421, 432], "benzo": 432, "bernoulli": [235, 396, 411, 416], "besid": [412, 424, 431], "best": [12, 14, 226, 228, 230, 374, 397, 412, 422, 426], "bet": 420, "beta": [8, 18, 152, 235, 377, 414, 418], "betabernoullimultiarmedbanditsurrog": [377, 397, 414], "betaprior": [235, 414], "better": [10, 323, 373, 414, 420, 421, 425], "between": [30, 49, 137, 168, 195, 203, 255, 330, 387, 389, 394, 397, 399, 403, 409, 410, 412, 414, 415, 419, 420, 421, 422, 425, 426, 427, 428, 431, 432], "beyond": [412, 423], "bias": 425, "bin": 394, "binar": 414, "binari": [277, 405, 413, 414, 428], "binarytarget": [278, 397, 414], "bind": [387, 389, 417], "bit": [414, 425], "black": [224, 429, 432], "blackbox": [370, 371, 411], "blank": 415, "blob": 257, "block": [388, 394, 412, 413, 414, 422, 428], "bodi": 387, "bonilla": 432, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 85, 86, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 208, 235, 237, 238, 241, 245, 259, 261, 263, 265, 277, 278, 285, 286, 287, 290, 291, 301, 302, 306, 307, 312, 313, 326, 330, 331, 332, 337, 347, 352, 397], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 122, 123, 124, 126, 127, 129, 136, 137, 140, 164, 166, 167, 168, 169, 332, 377, 422], "boost": [263, 410], "both": [10, 142, 197, 203, 232, 287, 308, 371, 383, 388, 391, 394, 395, 397, 399, 409, 410, 412, 415, 418, 421, 423, 425, 427, 428, 431, 434], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 171, 179, 181, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 379, 380, 389, 403, 409, 410, 414, 422, 426], "botorch_acqf": [22, 388, 389], "botorch_function_wrapp": 414, "botorchrecommend": [171, 181, 377, 382, 383, 384, 385, 388, 389, 391, 392, 397, 399, 403, 405, 406, 407, 412, 414, 419, 420, 426], "bottom": 420, "bound": [8, 18, 30, 136, 142, 158, 195, 197, 203, 208, 268, 283, 284, 302, 308, 332, 337, 338, 371, 377, 379, 380, 389, 395, 399, 401, 402, 403, 409, 410, 414, 425, 428, 431, 433, 434], "boundari": [203, 285, 286, 399], "boundary_onli": [203, 394], "bounded": 414, "bounds_transform_func": 414, "box": [158, 224, 429, 432], "brain": [429, 432], "branch": [412, 415], "break": [240, 428], "brettpho": [372, 373, 374, 376, 377], "briefli": [429, 432], "bring": [412, 414], "bro": 257, "broad": 428, "brute": [179, 426], "bu": [372, 373, 374, 376, 377], "bucket": 394, "budget": 420, "bug": [414, 415], "build": [195, 203, 240, 388, 394, 413, 414, 415, 421, 423, 428, 432, 433, 434], "built": [203, 391, 412, 415, 420, 426], "builtin": 299, "bump": 414, "button": 414, "butyl": [372, 373, 374, 376, 377], "butylphenylphosphin": [372, 373, 374, 376, 377], "butyornitril": [372, 373, 374, 376, 377], "bypass": [142, 388], "byte": [115, 202, 241, 285, 286, 287, 341, 347, 414, 434], "c": [52, 295, 303, 372, 373, 374, 376, 377, 382, 383, 384, 385, 392, 394, 406, 407, 412, 413, 417, 420, 425, 427, 428], "c1": [372, 373, 374, 376, 377, 382, 383, 384, 385, 425], "c1c2": [372, 373, 374, 376, 377], "c1ccccc1": [372, 373, 374, 382, 384], "c1ccoc1": 421, "c2": [372, 373, 374, 376, 377, 382, 384, 385], "c2ccccc2": [372, 373, 374], "c2oc": [372, 373, 374, 376, 377], "c2p": [372, 373, 374, 376, 377], "c3": [372, 373, 374, 376, 377, 382, 384], "c3c": [372, 373, 374], "c3ccccc3": [372, 373, 374, 376, 377], "c4": [372, 373, 374, 382, 384], "c4ccccc4": [372, 373, 374, 376, 377], "c5": [382, 384], "c6": [382, 384], "c_g2_min": 395, "c_g3_max": 395, "c_i": 421, "c_total_sum": 395, "cach": [291, 414, 428, 433], "cached_recommend": 291, "calcul": [291, 348, 379, 389, 409, 422, 425, 427], "calibr": 432, "call": [41, 77, 164, 166, 167, 168, 169, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 291, 292, 308, 326, 372, 373, 374, 387, 392, 394, 395, 406, 407, 412, 413, 414, 418, 420, 421, 422, 425, 428, 429, 432], "callabl": [48, 76, 142, 216, 224, 226, 228, 230, 232, 267, 268, 271, 272, 299, 304, 306, 308, 326, 371, 387, 414, 433], "callable_": 306, "campaign": [82, 226, 229, 230, 232, 323, 325, 375, 376, 384, 386, 389, 397, 407, 409, 410, 411, 412, 414, 418, 419, 421, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434], "campaign1": 429, "campaign2": 429, "campaign_json": 420, "campaign_oh": 373, "campaign_rand": [372, 373, 374], "campaign_recr": 405, "campaign_stop": 388, "campaign_with_hook": 388, "campaignstoppedexcept": 388, "can": [13, 17, 22, 27, 30, 36, 37, 38, 52, 82, 123, 129, 137, 140, 161, 168, 171, 172, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 224, 228, 235, 237, 238, 239, 240, 241, 245, 259, 261, 263, 265, 269, 278, 290, 292, 306, 308, 312, 323, 325, 326, 331, 344, 371, 372, 373, 374, 377, 378, 381, 382, 383, 384, 387, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 406, 409, 410, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "canada": 416, "candid": [12, 14, 27, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 203, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 388, 410, 414, 418, 419, 420, 426, 427], "candidates_comp_rep": 388, "cannot": [13, 75, 76, 82, 240, 241, 269, 313, 350, 397, 414, 417, 419, 421, 422, 425, 426, 428, 430, 432], "canon": [315, 428], "capabl": [370, 396, 398, 404, 408, 410, 414, 416, 420, 432], "captur": 425, "cardin": [30, 40, 47, 57, 58, 195, 414, 416], "cardinalityconstraint": [40, 47, 414], "care": [45, 394, 415, 421, 423, 424], "carefulli": 422, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 230, 371, 373, 374, 388, 397, 409, 410, 414, 419, 429], "carri": [308, 387, 417], "cartesian": [197, 203, 204, 205, 412, 414, 427], "case": [168, 232, 269, 308, 323, 333, 388, 393, 394, 402, 403, 406, 412, 413, 415, 418, 419, 420, 421, 422, 425, 428, 429, 431, 432, 434], "cast": [41, 414], "cat": 330, "cat_1": 399, "cat_1_22": 399, "cat_1_33": 399, "cat_2": 399, "catch_constant_target": 414, "categor": [27, 126, 127, 131, 203, 210, 331, 412, 414, 425, 427, 431], "categori": [373, 388, 412, 414, 428, 431], "categorical_1": [399, 420], "categorical_2": [399, 420], "categorical_paramet": 428, "categorical_parameter_json": 428, "categorical_parameter_reconstruct": 428, "categoricalencod": [126, 127, 382, 383, 384, 385, 399, 405], "categoricalparamet": [127, 203, 373, 382, 383, 384, 385, 392, 397, 399, 405, 406, 407, 412, 414, 423, 427, 428, 433], "cattr": [215, 216, 218, 407, 413, 414, 415], "cauchi": 154, "caus": [137, 295, 299, 414, 417], "caution": 432, "cc": [372, 373, 374, 376, 377, 382, 384, 385, 394, 425, 432], "cc1": [372, 373, 374, 376, 377, 425], "ccc": [382, 384, 392, 412], "cccc": [372, 373, 374, 376, 377, 382, 384], "ccccc": [382, 384, 406, 407], "cccccc": [382, 384], "cccccccco": [421, 425], "ccccoc": [372, 373, 374, 376, 377], "cco": 394, "ccoccoccn": [406, 407], "cdot": [421, 424], "ceil": 388, "cell": [391, 425, 429, 432], "cell_lin": 432, "center": [285, 287, 337, 399, 420], "central": [414, 420], "certain": [27, 49, 76, 169, 216, 218, 224, 292, 305, 323, 351, 383, 388, 397, 412, 415, 421, 423, 426, 428, 432, 434], "cesium": [372, 373, 374, 376, 377], "ch": 351, "chai": 432, "chain": [34, 164, 166, 167, 168, 169, 299, 421], "challeng": [415, 428], "chanc": 413, "chang": [49, 167, 323, 324, 325, 377, 394, 402, 412, 413, 415, 417, 420, 422, 423, 425, 427, 432], "charact": 417, "characterist": 299, "charg": 417, "check": [27, 122, 123, 124, 126, 127, 129, 136, 137, 140, 291, 305, 307, 310, 311, 312, 313, 331, 337, 346, 402, 403, 405, 412, 414, 415, 422, 423, 427, 428], "checker": 414, "checkout": 415, "chem": [412, 414, 425], "chemic": [317, 373, 376, 394, 414, 416, 421, 423, 425, 432], "cheminformat": [140, 412, 414], "chemistri": [129, 382, 384, 385], "child": [186, 187, 188, 189, 415], "chocol": 415, "choic": [226, 228, 358, 387, 394, 397, 403, 414, 421, 424, 425, 426, 427, 428, 431], "choos": [162, 394, 395, 397, 399, 401, 402, 403, 412, 417, 418, 420, 426, 430, 431], "chose": [402, 428], "chosen": [66, 171, 226, 228, 232, 354, 355, 377, 397, 414, 418, 421, 425, 427], "christoph": 432, "ci": [380, 409, 410, 414, 415], "circular": 425, "circumv": [413, 428], "cl": [45, 112, 213, 217, 269, 301, 302, 307, 312, 339], "claim": 417, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 75, 79, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 216, 218, 219, 220, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 297, 298, 299, 300, 301, 302, 307, 312, 316, 335, 337, 352, 356, 357, 360, 361, 377, 387, 388, 391, 397, 406, 414, 420, 421, 423, 424, 425, 426, 427, 428, 430], "classic": [397, 424], "classifi": 425, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 299, 337, 414], "classvalidationerror": [407, 413], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 235, 237, 238, 241, 245, 259, 261, 263, 265], "clean": [327, 328, 329, 413, 414, 415], "clear": [344, 432], "click": [397, 425], "clone": 415, "close": [226, 232, 280, 371, 388, 409, 410, 429], "closer": [346, 425], "closest": [291, 331, 347], "closest_el": 414, "closur": [224, 429], "cluster": [186, 187, 188, 189, 377, 414, 416, 433], "clustering_x": 414, "cmap": 389, "cn": [372, 373, 374, 376, 377], "co": 394, "co1": [372, 373, 374], "co2": [372, 373, 374], "co3": [372, 373, 374], "coars": [392, 405, 406, 407, 412], "coc": [392, 406, 407, 412], "cococ": [406, 407], "code": [240, 373, 392, 397, 402, 406, 407, 412, 413, 414, 417, 421, 422, 425, 429, 432, 434], "coeffici": [41, 43, 44, 379, 380, 395, 421], "coerc": 414, "collect": [27, 57, 58, 92, 102, 103, 142, 143, 151, 167, 169, 195, 203, 209, 210, 221, 228, 293, 295, 297, 305, 306, 323, 332, 356, 358, 371, 377, 389, 394, 397, 409, 410, 412, 414, 420, 422], "color": 389, "column": [36, 37, 38, 82, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 226, 228, 230, 232, 295, 296, 324, 326, 327, 328, 329, 330, 332, 333, 361, 373, 376, 382, 383, 384, 385, 388, 394, 399, 405, 409, 410, 414, 420, 427, 428, 429], "column_group": 296, "com": [257, 309, 329, 412, 414], "comb": 394, "combin": [50, 142, 197, 203, 204, 205, 299, 317, 372, 373, 374, 382, 384, 387, 388, 394, 399, 412, 413, 417, 421, 423, 424, 426, 427, 429, 432, 434], "combinatori": 434, "combine_func": 106, "come": [397, 412, 420, 423, 428, 432, 434], "command": 413, "comment": 414, "commerci": 417, "commit": [412, 414, 415], "common": [151, 391, 395, 414, 415, 417, 420, 421, 425, 428], "commonli": 424, "commun": [417, 424, 432], "comp_df": [123, 126, 127, 129, 137, 140, 414], "comp_rep": [203, 389, 391, 414, 427], "comp_rep_bound": [195, 197, 203, 414], "comp_rep_byt": [202, 434], "comp_rep_column": [122, 123, 124, 126, 127, 129, 136, 137, 140, 195, 197, 203, 414], "comp_rep_human_read": [202, 434], "comp_rep_shap": [202, 434], "comp_rep_tensor": [388, 389], "compar": [142, 167, 371, 394, 395, 397, 409, 412, 414, 415, 425, 431], "comparison": [388, 409, 410, 426, 428], "compat": [105, 111, 142, 171, 174, 177, 179, 180, 181, 184, 186, 187, 188, 189, 191, 192, 197, 198, 228, 241, 308, 332, 369, 377, 382, 383, 384, 385, 387, 389, 399, 405, 414, 426], "compens": 414, "compil": [413, 417], "complain": 415, "complaint": 415, "complement": [27, 330], "complet": [389, 394, 419, 421, 424, 428], "complex": [115, 285, 286, 287, 347, 394, 405, 409, 410, 415, 418, 419, 421, 429, 432], "compli": 417, "complianc": 412, "complic": [394, 432], "compon": [62, 394, 395, 415, 418, 420, 421, 422, 428, 432], "compos": [101, 414, 428], "composit": [90, 102, 103, 104], "compositekernel": [102, 103, 104, 414], "compound": 317, "comprehens": [412, 430], "compress": 428, "comput": [22, 27, 73, 82, 86, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 195, 197, 202, 203, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 269, 275, 277, 283, 318, 348, 382, 383, 384, 385, 387, 394, 395, 399, 405, 414, 417, 418, 420, 422, 425, 427, 428, 429, 433, 434], "computation": 179, "concat": [379, 380, 388, 389, 399, 402, 403, 409, 410], "concentr": [152, 153, 372, 373, 374, 376, 377, 382, 387, 388, 421], "concentrati": 382, "concentration_valu": 388, "concept": [295, 394, 424, 425, 428], "concis": 414, "concret": [414, 428], "conda": 414, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 323, 330, 373, 379, 383, 384, 385, 394, 412, 414, 417, 432, 433], "conduct": [27, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 230, 235, 237, 238, 241, 245, 259, 261, 263, 265, 372, 373, 374, 412, 415, 420, 432], "confid": [8, 18, 377], "config": [391, 392, 404, 411, 414, 433], "config_json": 27, "configur": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 71, 72, 161, 168, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 224, 226, 232, 235, 237, 238, 239, 241, 245, 251, 259, 261, 263, 265, 323, 350, 358, 375, 376, 394, 400, 403, 407, 412, 413, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 434], "confirm": 389, "conflict": [412, 415, 424], "conform": [140, 318, 425], "confront": [397, 412], "conjunct": 430, "connect": [53, 323, 414, 422, 425, 431], "consequ": [374, 413, 421, 422, 426, 427, 429], "consequenti": 417, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 114, 127, 167, 197, 203, 230, 291, 323, 331, 332, 371, 394, 397, 399, 409, 410, 412, 414, 415, 419, 421, 423, 424, 425, 426, 428, 434], "consider": [197, 419], "consist": [162, 202, 389, 415, 417, 423], "consol": 413, "consolid": [414, 426], "consortium": 416, "conspicu": 417, "constant": [261, 269, 286, 399, 414, 415, 425, 427], "constitut": 417, "constrain": [414, 421, 431, 432], "constraint": [27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 124, 195, 197, 203, 298, 391, 392, 399, 405, 406, 407, 411, 412, 414, 416, 422, 425, 433], "constraint_1": 384, "constraint_2": 384, "constraint_3": 384, "constraints_augment": 197, "constraints_cardin": 195, "constraints_lin_eq": 195, "constraints_lin_ineq": 195, "constraints_nonlin": 195, "constru": 417, "construct": [27, 195, 197, 203, 241, 271, 371, 401, 409, 410, 412, 414, 418, 423, 428, 433], "constructor": [186, 187, 188, 189, 197, 217, 259, 263, 265, 394, 401, 406, 407, 414, 418, 420, 424, 425, 433, 434], "consult": 412, "consum": [167, 387], "consumpt": 422, "cont_ind": 403, "cont_indic": [402, 403], "cont_paramet": 403, "cont_recommend": [171, 403], "contact": [412, 416], "contain": [27, 30, 36, 37, 38, 58, 61, 65, 82, 109, 114, 115, 119, 123, 126, 127, 129, 137, 140, 142, 146, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 204, 205, 209, 224, 226, 228, 230, 235, 237, 238, 241, 245, 259, 261, 263, 265, 275, 277, 283, 285, 286, 287, 295, 296, 308, 318, 323, 325, 330, 337, 348, 350, 352, 358, 373, 374, 388, 389, 395, 397, 403, 409, 410, 413, 414, 415, 417, 420, 421, 423, 426, 427, 428, 429, 434], "content": [142, 167, 197, 228, 324, 359, 414, 417, 428], "context": [164, 166, 167, 168, 169, 224, 239, 355, 387, 397, 401, 409, 410, 414, 420, 423, 425, 428, 429, 432, 434], "contextu": 432, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 122, 123, 124, 126, 127, 129, 136, 137, 140, 171, 179, 195, 197, 198, 203, 204, 205, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 377, 379, 382, 383, 384, 385, 395, 399, 400, 403, 405, 411, 412, 414, 420, 422, 426, 428, 429, 433], "continuous_subspac": 427, "continuouscardinalityconstraint": [57, 195, 414], "continuousconstraint": [33, 41, 195, 414, 421], "continuouslinearconstraint": [195, 379, 380, 395, 414, 433], "continuouslinearequalityconstraint": 414, "continuouslinearinequalityconstraint": 414, "continuousnonlinearconstraint": [40, 195, 414], "continuousparamet": [136, 195, 414], "contract": 417, "contrast": [203, 312, 395, 397], "contribut": [412, 414, 417, 434], "contributor": [412, 417], "contributori": 417, "control": [13, 17, 142, 152, 179, 195, 203, 332, 399, 402, 412, 414, 417, 418, 422, 424, 425, 426, 431], "convei": 428, "conveni": [414, 427, 428], "convent": 197, "converg": 423, "convers": [27, 168, 391, 401, 414, 417, 423, 433], "convert": [24, 110, 199, 212, 309, 313, 317, 320, 321, 333, 334, 338, 341, 344, 392, 406, 407, 414, 420, 422, 428, 429], "convert_sklearn": 391, "convert_sklearn_bayesian_ridg": 391, "cooki": 415, "coordin": 358, "copi": [388, 412, 414, 417, 434], "copyright": [412, 417], "core": [27, 195, 197, 198, 203, 230, 232, 235, 237, 238, 239, 241, 245, 252, 259, 261, 263, 265, 377, 412, 414, 431], "coregion": 432, "coretest": [414, 415], "corpu": 425, "correct": [27, 272, 389, 412, 414, 415, 428], "correctli": [394, 403, 414], "correl": [129, 140, 329, 425, 432], "correspond": [22, 27, 40, 109, 114, 119, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 216, 224, 226, 228, 235, 237, 238, 241, 245, 259, 261, 263, 265, 285, 291, 308, 311, 313, 316, 317, 323, 326, 332, 333, 371, 376, 377, 394, 397, 403, 409, 410, 412, 414, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "correspondingli": 27, "corrupt": 325, "cost": [373, 397], "costli": [197, 200, 206, 420], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 137, 320, 377, 387, 388, 394, 395, 410, 414, 419, 421, 425, 429, 431, 432], "count": [292, 388, 394, 421], "counterclaim": 417, "counterpart": [308, 427], "coupl": 389, "cours": [409, 410, 415, 428, 432], "cov": [414, 415], "cover": [312, 323], "coverag": [414, 415], "cp": [372, 373, 374], "craft": 429, "crash": [413, 414], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 204, 205, 220, 228, 235, 237, 238, 239, 241, 245, 248, 253, 259, 261, 263, 265, 275, 277, 283, 323, 326, 337, 350, 352, 358, 376, 387, 388, 389, 394, 395, 403, 404, 411, 412, 413, 414, 415, 421, 422, 423, 428, 429, 430, 431, 433, 434], "create_example_plot": [371, 373, 388, 389, 409, 410], "create_from_config": [391, 392], "create_pi_plot": 389, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 142, 200, 203, 206, 383, 385, 391, 392, 427, 428, 433], "criteria": 389, "criterion": [388, 418], "critic": 414, "cross": [409, 417], "crucial": [412, 431], "cube": 421, "cuda": 413, "cultur": [425, 432], "curran": 432, "current": [10, 27, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 230, 232, 240, 290, 344, 388, 389, 394, 418, 420, 421, 422, 425, 429, 431, 432, 434], "curv": [285, 389, 399, 421, 431], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 122, 123, 124, 126, 127, 129, 132, 136, 137, 140, 142, 241, 272, 275, 277, 283, 308, 333, 370, 377, 381, 388, 397, 403, 411, 412, 414, 421, 425, 426, 429, 432, 433, 434], "custom_blackbox": 371, "custom_conversion_funct": 391, "custom_filt": 421, "custom_funct": 382, "customari": 417, "customconstraint": 382, "customdiscreteparamet": [414, 423, 433], "customencod": 129, "customonnxsurrog": [377, 391, 414], "cycl": [167, 412], "cyclic": 167, "d": [22, 52, 115, 295, 303, 348, 358, 389, 392, 406, 407, 409, 410, 412, 417, 427, 432], "d401": 382, "damag": 417, "daniel": 416, "darmstadt": [412, 416, 422], "dashboard": 414, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 82, 86, 114, 119, 129, 137, 140, 161, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 226, 230, 232, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 277, 283, 292, 294, 298, 323, 325, 331, 343, 344, 359, 363, 370, 371, 376, 377, 379, 380, 382, 383, 384, 385, 388, 392, 394, 399, 402, 405, 406, 407, 409, 410, 411, 412, 414, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 433, 434], "data_typ": 391, "databas": [27, 399, 412, 428], "dataclass": [387, 397], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 109, 114, 119, 123, 126, 127, 129, 137, 140, 142, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 204, 205, 208, 222, 223, 226, 228, 230, 232, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 277, 283, 291, 295, 296, 317, 318, 359, 371, 372, 376, 377, 382, 383, 384, 385, 388, 389, 391, 392, 394, 395, 399, 402, 405, 409, 410, 414, 419, 420, 421, 425, 433, 434], "datapoint": 414, "dataset": [167, 224, 429], "datatyp": 414, "date": 417, "dditiv": 423, "de": [215, 404, 412, 413, 414, 415, 420, 421, 426, 433], "deactiv": [412, 414, 422], "deal": [374, 419, 425, 429], "debug": 414, "decid": [137, 331, 394, 397, 403, 418], "declar": [49, 53, 58, 189, 383, 415, 421], "decod": 391, "decor": [104, 269, 299, 326, 387, 414, 415, 429], "decorrel": [129, 140, 145, 406, 407, 425], "decreas": [167, 286, 399, 428, 432], "deduc": [379, 380, 402], "dedupl": 414, "deep": 388, "deepcopi": 414, "deeper": 423, "def": [371, 382, 387, 388, 389, 394, 397, 409, 415, 421, 429], "default": [38, 82, 114, 127, 129, 140, 142, 171, 186, 187, 188, 189, 195, 197, 203, 215, 235, 252, 255, 330, 371, 372, 374, 377, 392, 399, 403, 412, 414, 415, 420, 422, 423, 424, 425, 433], "default_campaign": 371, "default_model": 241, "defaultkernelfactori": [377, 382, 383, 384, 385, 399, 405], "defaultscal": 414, "defend": 417, "defin": [22, 27, 37, 41, 48, 132, 161, 167, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 224, 245, 247, 248, 272, 325, 329, 330, 361, 372, 373, 374, 376, 382, 383, 384, 385, 391, 392, 397, 401, 414, 415, 417, 420, 421, 425, 428, 429, 431], "definit": [195, 203, 312, 395, 412, 414, 417, 424, 427], "degener": [324, 337, 414], "degr": 405, "degre": 428, "degree_c": [391, 392, 405], "deliber": 417, "delici": 415, "deliveri": 425, "demand": [27, 410], "demo": 414, "demonstr": [370, 371, 372, 375, 378, 381, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 404, 405, 408, 409, 410, 414, 424, 427, 428, 432], "denot": 22, "densiti": 389, "depend": [49, 53, 74, 106, 197, 203, 224, 286, 295, 373, 377, 381, 394, 395, 401, 411, 413, 414, 415, 421, 422, 423, 427, 429, 431, 432, 434], "dependenciesconstraint": 414, "deprec": [60, 134, 164, 166, 167, 168, 169, 177, 179, 195, 203, 208, 242, 299, 382, 384, 385], "deprecationwarn": [382, 384, 385, 388], "depth": 427, "deriv": [186, 187, 188, 189, 203, 312, 417, 421, 427], "descend": 286, "describ": [127, 186, 187, 188, 189, 235, 237, 238, 241, 245, 259, 261, 263, 265, 377, 382, 387, 388, 395, 397, 399, 415, 417, 419, 420, 421, 424, 425, 428, 429], "descript": 415, "descriptor": [140, 318, 414, 423, 425, 432], "deseri": [213, 217, 222, 405, 413, 414, 420, 433], "deserialize_datafram": 428, "design": [0, 17, 22, 226, 326, 387, 391, 394, 397, 417, 418, 423, 424, 426, 428], "desir": [106, 114, 117, 398, 399, 411, 412, 414, 418, 420, 422, 423, 424, 426, 428, 431, 434], "desirabilityobject": [27, 399, 412, 414, 428, 430, 433], "desktop": 414, "despit": 414, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 148, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 226, 230, 235, 237, 238, 239, 241, 245, 248, 255, 257, 259, 261, 263, 265, 275, 277, 283, 288, 289, 330, 337, 361, 372, 374, 379, 380, 399, 403, 412, 413, 414, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432], "detect": [298, 331, 413, 415], "determin": [27, 82, 112, 169, 203, 312, 330, 341, 346, 358, 372, 394, 397, 417, 422, 426], "determinist": 358, "detriment": 425, "dev": [382, 384, 385, 412, 414, 415], "develop": [412, 414, 419, 425, 429], "deviat": [6, 269, 391, 414], "df": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 109, 114, 119, 142, 195, 197, 203, 208, 223, 228, 295, 296, 317, 324, 327, 328, 329, 330, 332, 333, 359, 371, 382, 397, 412, 421, 427, 428, 429], "dfa": [295, 296], "di": [372, 373, 374, 376, 377, 416], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 186, 187, 188, 189, 195, 197, 200, 203, 206, 216, 217, 218, 220, 230, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 289, 303, 306, 318, 323, 337, 361, 388, 391, 409, 410, 414], "dict_bas": [372, 373, 374, 376, 377], "dict_ligand": [372, 373, 374, 376, 377], "dict_solv": [372, 373, 374, 376, 377, 382, 383, 384, 385, 394, 421], "dictat": [109, 114, 119, 197, 409, 410], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 216, 218, 220, 230, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 269, 275, 277, 283, 303, 306, 323, 337, 372, 373, 374, 376, 425, 429], "diff": 415, "differ": [51, 114, 179, 195, 197, 198, 203, 224, 232, 291, 296, 323, 325, 361, 373, 382, 387, 394, 397, 399, 402, 403, 409, 410, 412, 414, 415, 417, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "differenti": [429, 432], "difficult": 432, "digit": 333, "dilemma": 397, "dim": [22, 379, 380, 389, 391, 402, 403, 409, 410], "dimens": [22, 358, 371, 379, 380, 389, 391, 401, 402, 409, 410, 414, 425, 427, 432], "dimension": [115, 122, 123, 124, 126, 127, 129, 136, 137, 140, 255, 326, 358, 371, 409, 410, 414], "dimethylisoxazol": 432, "direct": [372, 373, 374, 376, 412, 417, 425, 434], "directli": [312, 410, 412, 414, 421, 424, 428, 430], "directori": [350, 403, 414], "disabl": [290, 382, 384, 385, 414, 420], "disadvantag": 428, "disappear": 414, "disc_ind": 403, "disc_indic": [402, 403], "disc_paramet": 403, "disc_recommend": [171, 403], "discard": 394, "disclaim": 417, "discourag": 420, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 122, 123, 124, 126, 127, 129, 136, 137, 140, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 202, 203, 232, 357, 376, 379, 385, 388, 389, 391, 399, 400, 403, 405, 410, 411, 412, 414, 418, 420, 423, 428, 429, 433, 434], "discrete_param": [389, 409, 410], "discrete_spac": [379, 380, 403], "discrete_subspac": 427, "discretecardinalityconstraint": 414, "discreteconstraint": [27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 203, 414, 421], "discretecust": 382, "discretecustomconstraint": [382, 414, 433], "discretedep": 383, "discretedependenciesconstraint": [53, 58, 383, 394, 433], "discreteexcl": 384, "discreteexcludeconstraint": [384, 414, 433], "discretelinkedparametersconstraint": [414, 433], "discretenolabelduplicatesconstraint": [53, 394, 414, 433], "discreteparamet": [126, 129, 137, 140, 203, 414], "discretepermutationinvarianceconstraint": [394, 433], "discreteprod": 385, "discreteproductconstraint": [385, 414, 433], "discretesamplingmethod": [13, 179, 359, 414, 418], "discretesumc": 385, "discretesumconstraint": [379, 385, 394, 414, 433], "discuss": [399, 417, 421, 427, 429], "disjoint": 203, "disk": [414, 433], "dispatch": 105, "displai": [333, 388, 417], "distanc": [137, 291, 331, 358], "distinct": [387, 420, 426], "distinguish": [324, 394, 414, 421, 425, 432], "distribut": [27, 148, 151, 235, 237, 238, 241, 245, 259, 261, 263, 265, 394, 399, 403, 412, 414, 417, 418, 419], "distutil": 313, "div": 391, "divers": 430, "divid": 395, "divis": 348, "dll": 413, "dmac": [372, 373, 374, 376, 377], "dmf": 421, "do": [197, 203, 240, 387, 391, 392, 394, 397, 403, 405, 406, 407, 409, 412, 413, 417, 419, 421, 422, 423, 425, 426, 428, 432, 433, 434], "do_baybe_work": 422, "doc": [87, 148, 299, 382, 384, 385, 412, 414], "doc101": 415, "doc103": 415, "docstr": 414, "doctest": 414, "document": [344, 391, 412, 414, 415, 416, 417, 420, 423, 429], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 179, 224, 226, 228, 230, 235, 237, 238, 240, 241, 245, 259, 261, 263, 265, 272, 308, 317, 344, 374, 377, 388, 391, 392, 394, 406, 407, 409, 410, 414, 415, 417, 421, 424, 426, 429, 430, 432, 434], "doi": [257, 329], "domain": [235, 237, 238, 241, 245, 259, 261, 263, 265, 371, 412, 427, 429], "done": [27, 330, 374, 376, 382, 383, 384, 385, 391, 392, 399, 405, 414, 418, 421, 422], "doubl": [344, 415, 422], "down": [428, 434], "downsid": 168, "draft": 414, "dramat": 432, "drastic": 425, "draw": [10, 99, 195, 395, 397, 401], "draw_arm": 397, "drawn": [17, 179], "drive": [389, 432], "driven": [323, 418], "driver": 413, "drop": [327, 328, 329, 388, 414, 421], "dry_run": 27, "dtype": [115, 285, 286, 287, 347], "due": [292, 410, 412, 414, 418, 421, 422, 425, 426, 427, 428, 431], "duplic": [53, 147, 298, 303, 414, 421], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 197, 203, 224, 306, 358, 394, 397, 409, 410, 412, 413, 414, 415, 416, 420, 421, 422, 423, 427, 428, 429, 430], "dynam": [397, 414, 428], "d\u00fcbendorf": 416, "e": [17, 22, 27, 30, 49, 51, 52, 65, 82, 85, 129, 142, 169, 197, 203, 224, 292, 298, 301, 302, 318, 323, 330, 331, 337, 366, 372, 373, 374, 392, 394, 395, 397, 412, 413, 414, 415, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 432, 434], "e3fp": 134, "e3fpfingerprint": 134, "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 109, 114, 119, 142, 161, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 226, 228, 230, 232, 240, 296, 318, 323, 324, 350, 371, 373, 374, 377, 389, 394, 395, 397, 399, 403, 409, 410, 415, 417, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434], "eagerli": 414, "earli": [388, 414], "earlier": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 413], "earn": 397, "earned_reward": 397, "easi": [317, 415, 428], "easier": [415, 434], "easiest": [412, 415], "easili": [388, 412, 415, 420, 425, 427, 428, 432], "ecfp": [134, 373, 414, 425], "ecfpfingerprint": 134, "ecosystem": 428, "edbo": [255, 257, 329, 414], "edbokernelfactori": [255, 414], "edit": [412, 415], "editor": 432, "editori": 417, "edwin": 432, "effect": [51, 164, 166, 167, 168, 169, 232, 387, 388, 397, 410, 414, 418, 421, 425, 426, 429, 432, 434], "effici": [203, 394, 412, 414, 427], "effortlessli": 429, "ei": [3, 377], "either": [22, 27, 198, 226, 232, 245, 269, 373, 384, 399, 403, 412, 417, 424, 425, 426, 427, 429], "elabor": 417, "elaps": 387, "elapsedtimeprint": 387, "electron": [416, 417], "electroshap": 134, "electroshapefingerprint": 134, "eleg": [409, 428], "element": [36, 37, 38, 48, 232, 291, 298, 305, 311, 331, 346, 347, 352, 394, 409, 410, 414, 421, 429], "elev": 389, "elif": [402, 403], "elimin": [415, 418], "els": [312, 313, 371, 372, 373, 374, 379, 380, 382, 383, 385, 388, 389, 397, 402, 403, 409, 410], "elsewher": 391, "emd": 416, "emdgroup": [288, 412], "emelin": 416, "emerg": 420, "empir": 397, "emploi": [27, 397, 426], "employe": [412, 422], "empow": 430, "empti": [86, 195, 197, 203, 210, 296, 308, 317, 330, 333, 394, 399, 403, 405, 414, 427], "empty_encod": [197, 203], "emptysearchspaceerror": 210, "emul": [17, 413, 414], "en": [87, 148], "enabl": [168, 290, 291, 372, 373, 374, 394, 409, 412, 413, 414, 420, 421, 422, 423, 424, 426, 428, 429, 431, 432], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 197, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 316, 318, 372, 373, 374, 376, 377, 382, 383, 384, 385, 388, 392, 394, 397, 399, 405, 406, 407, 409, 410, 412, 414, 421, 427, 428, 432], "encompass": 420, "encount": [164, 166, 167, 168, 169, 358, 413, 414, 415, 424], "end": [0, 287, 337, 388, 392, 397, 399, 405, 417, 421, 428], "endeavor": 418, "endpoint": [414, 422], "enforc": [345, 364, 414, 415], "engin": [413, 426, 428, 429, 434], "enhanc": [22, 412], "enlarg": 425, "enough": [195, 428], "ensembl": 267, "ensur": [142, 372, 373, 374, 394, 395, 412, 421, 428, 429], "enter": [67, 203, 427], "entir": [291, 337, 359, 414, 415, 418, 422, 434], "entiti": 417, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 218, 235, 237, 238, 241, 245, 259, 261, 263, 265, 291, 296, 323, 331, 359, 374, 382, 383, 384, 385, 394, 414, 421, 422, 423, 431, 434], "enum": [117, 131, 132, 133, 134, 198, 252, 280, 281, 357, 414, 428], "enumer": [116, 130, 279, 389, 409, 410, 424], "env": [414, 415], "envar_nam": 422, "environ": [290, 345, 364, 371, 372, 373, 374, 380, 382, 383, 385, 388, 389, 391, 397, 409, 410, 412, 413, 414, 415, 433], "envvar": 288, "envvar_nam": 422, "eq": [382, 394], "equal": [41, 114, 169, 195, 397, 399, 405, 414, 421, 424, 427, 428, 431], "equat": [41, 421, 429], "equidist": 425, "equip": 421, "equival": [17, 30, 53, 380, 401, 418, 421, 429], "erg": 134, "ergfingerprint": 134, "erron": 414, "error": [167, 177, 179, 226, 228, 230, 242, 306, 348, 374, 392, 397, 413, 414, 421, 424, 425, 426], "esian": 412, "especi": 415, "essenti": [420, 426], "establish": [388, 409, 410, 432], "estat": 134, "estatefingerprint": 134, "ester": [372, 373, 374, 376, 377], "estim": [197, 202, 203, 235, 397, 414, 430, 433], "estimate_product_space_s": [197, 203, 434], "estimated_win_r": 397, "estimation_bia": 397, "estimation_vari": 397, "et": [373, 412, 425], "etc": [36, 37, 38, 124, 197, 275, 432], "ethanol": [394, 421], "euclidean": 358, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 267, 268, 313, 402, 403, 414, 420, 422, 426, 429, 432], "even": [169, 269, 328, 409, 410, 417, 419, 420, 422, 425, 429, 430, 432, 434], "event": [27, 291, 388, 417], "everi": [419, 434], "everyth": [415, 421], "evolv": [389, 415], "ex": 423, "exabyt": 434, "exact": [27, 331, 387, 413, 414, 419, 421, 425, 426], "exactexplain": [80, 83, 423], "exactli": [109, 114, 119, 197, 394, 414, 419, 420, 427, 428], "exampl": [142, 228, 295, 296, 303, 312, 330, 370, 371, 375, 378, 381, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 404, 408, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "example_input_nam": 391, "exceed": 388, "exceedingli": 429, "except": [308, 317, 321, 335, 336, 372, 373, 374, 388, 392, 406, 407, 412, 413, 414, 417], "excepthook": 413, "exceptiongroup": 414, "excess": 434, "exclud": [27, 52, 203, 327, 382, 383, 384, 385, 399, 405, 414, 417, 421], "exclude_list": 329, "exclus": [50, 381, 411, 414, 417, 421, 429], "execut": [27, 60, 226, 308, 371, 373, 413, 414, 415, 417, 422, 428, 429, 432], "exemplari": 420, "exercis": 417, "exhaust": [167, 423, 426], "exist": [104, 197, 291, 299, 308, 394, 413, 414, 415, 418, 420, 421, 428, 432], "exp_rep": [203, 382, 383, 384, 385, 394, 427], "exp_rep_byt": [202, 434], "exp_rep_human_read": [202, 434], "exp_rep_shap": [202, 434], "expect": [3, 4, 9, 11, 12, 14, 48, 239, 247, 308, 326, 377, 383, 389, 391, 394, 395, 397, 407, 414, 415, 420, 421, 423, 424, 425, 428, 429, 431, 434], "expens": [10, 179, 379, 429], "experi": [0, 27, 161, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 224, 226, 235, 237, 238, 241, 245, 259, 261, 263, 265, 372, 373, 374, 376, 377, 402, 403, 414, 418, 420, 421, 424, 425, 426, 431, 432, 433], "experiment": [27, 86, 109, 114, 119, 123, 126, 127, 129, 137, 140, 161, 164, 165, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 202, 203, 224, 235, 237, 238, 241, 245, 259, 261, 263, 265, 275, 277, 283, 323, 325, 382, 383, 384, 385, 389, 399, 405, 412, 414, 418, 419, 421, 424, 425, 427, 428, 429, 431, 432, 433, 434], "explain": [64, 81, 82, 83, 85, 86, 389, 414, 416, 430, 433], "explainer_cl": [82, 86, 423], "explan": [82, 86, 414, 420, 430], "explanation_index": [82, 423], "explicit": [142, 168, 387, 388, 392, 394, 401, 406, 407, 414, 415, 428, 432, 433], "explicitli": [195, 203, 387, 403, 410, 417, 427, 432], "exploit": [8, 17, 18, 397], "explor": [8, 18, 27, 397, 418, 426, 427, 432], "exploratori": 418, "exponenti": 203, "expos": [27, 387, 414], "exposur": 414, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 412, 414, 417, 421], "extend": [425, 432], "extens": [414, 426], "extra": [373, 413, 414], "extract": [27, 164, 166, 167, 168, 169, 332, 389, 409, 423, 433], "extract_pi": 389, "f": [313, 371, 372, 373, 374, 379, 380, 382, 383, 384, 385, 387, 388, 389, 394, 395, 399, 401, 402, 403, 409, 410, 434], "f1": 429, "f2": 429, "fabian": 416, "face": [235, 237, 238, 241, 245, 259, 261, 263, 265, 395, 397], "facilit": 426, "fact": [17, 389, 394, 421, 424], "factor": [142, 420, 434], "factori": [142, 195, 245, 246, 247, 248, 249, 255, 257, 304, 377, 382, 383, 384, 385, 399, 405, 414], "fail": [403, 407, 413, 414], "failur": [277, 417], "failure_valu": 277, "fairli": 424, "fake": [228, 323, 376, 377, 391, 392, 399, 414, 419, 429, 433], "fall": [169, 388, 420, 431], "fallback": [112, 203, 339, 350, 391, 414, 427], "fals": [6, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 208, 235, 241, 259, 261, 263, 265, 277, 286, 291, 301, 302, 306, 312, 313, 326, 330, 331, 332, 352, 377, 382, 383, 384, 385, 399, 405, 406, 407, 412, 419, 422], "famili": 421, "familiar": [372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 391, 392, 399, 402, 403, 405], "fang": 416, "fantasi": 10, "farthest": [191, 357, 358, 377, 412, 414, 416, 418, 426], "farthest_point_sampl": 414, "fashion": [285, 287], "fast": [382, 384, 385, 427, 431], "faster": 203, "fault": 77, "faulti": 413, "favicon": 414, "fc": [372, 373, 374], "feasibl": [420, 423], "featur": [82, 99, 140, 329, 412, 413, 415, 421, 423, 430, 432], "fed": [412, 423], "feder": 416, "fee": 417, "feed": [412, 432], "feedback": 416, "feel": 388, "few": [371, 397, 414, 415, 418, 425, 428, 432, 434], "field": [217, 321, 352, 414, 432, 433], "fifti": 417, "fig": 389, "figur": [350, 389], "file": [350, 372, 373, 374, 391, 392, 403, 412, 414, 417, 422, 428, 432], "filenotfounderror": [372, 373, 374, 388], "fill": [27, 228, 389], "filler": 421, "filter": [27, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 197, 203, 327, 330, 382, 394, 414, 421, 427, 432, 434], "filter_attribut": 414, "filter_df": [27, 414], "filterwarn": 388, "final": [371, 373, 376, 388, 394, 410], "find": [197, 306, 347, 350, 412, 418, 420, 421, 432], "fine": [392, 405, 406, 407, 412], "finer": [142, 412], "fingerprint": [134, 140, 316, 318, 412, 414, 416, 425], "finish": 419, "finit": [167, 224, 232, 336, 366, 397, 425, 429], "first": [197, 230, 346, 358, 371, 373, 376, 377, 382, 387, 388, 391, 392, 394, 399, 403, 407, 409, 410, 412, 413, 414, 420, 421, 424, 425, 426, 427, 432, 434], "fit": [27, 189, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 359, 361, 372, 373, 374, 382, 383, 384, 385, 391, 399, 405, 414, 417, 421, 425, 430], "fit_gpytorch_ml": 414, "fit_gpytorch_mll_torch": 414, "fitnr": 399, "fitzner": [412, 416], "fix": [224, 248, 388, 389, 394, 397, 402, 403, 415, 420, 425, 429, 432, 434], "flag": [22, 27, 49, 82, 86, 109, 114, 119, 179, 197, 198, 203, 326, 331, 332, 414, 419, 420, 422, 423, 426], "flake8": 414, "flexibl": [387, 401, 414, 428, 429], "flexibli": 426, "float": [8, 13, 18, 38, 41, 43, 44, 93, 94, 95, 96, 97, 98, 99, 100, 104, 106, 114, 115, 129, 136, 137, 140, 145, 146, 152, 153, 154, 155, 156, 157, 158, 179, 202, 203, 226, 230, 235, 269, 277, 278, 285, 286, 287, 292, 320, 323, 324, 325, 329, 337, 341, 343, 344, 346, 347, 348, 363, 366, 367, 368, 387, 389, 391, 397, 399, 414, 415, 433], "float64": 363, "floattensortyp": 391, "fly": [168, 428], "fn": 299, "focu": [8, 18, 420], "focus": [119, 403, 412], "folder": [373, 412, 415, 422, 430], "follow": [164, 166, 167, 168, 169, 197, 226, 228, 230, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 387, 388, 392, 397, 399, 403, 406, 407, 409, 410, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "footprint": [10, 197], "forbid": 369, "forc": [82, 84, 179, 414, 415, 423, 426], "forest": [264, 265], "forgiv": 431, "fork": 415, "form": [203, 224, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 323, 412, 417, 418, 420, 424, 425, 426, 427, 428, 429, 434], "formal": 395, "format": [41, 289, 333, 338, 341, 391, 392, 405, 406, 412, 413, 414, 415, 420, 422, 428, 429], "format_except": 413, "former": [394, 414], "formul": 432, "formula": 394, "forrest": 414, "found": [75, 142, 195, 203, 306, 316, 344, 347, 350, 388, 394, 399, 412, 413, 415, 420, 421, 426, 432], "foundat": 426, "four": 394, "fourier": 99, "fourth": 421, "fp": [357, 414, 418], "fp_size": [134, 425], "fpsrecommend": [377, 391, 392, 405, 406, 407, 412, 419, 426], "frac": [410, 424], "frac1": 383, "fraction": [13, 94, 320, 388, 418, 421, 422], "fraction1": 383, "fraction_1": 421, "fraction_2": 421, "fraction_3": 421, "frame": [325, 423, 434], "frame1": 383, "frame2": 383, "frame_1": 421, "frame_2": 421, "framea": 383, "framea_a": 383, "frameb": 383, "framework": [420, 425], "free": [415, 417, 422], "freedom": 428, "freeli": 394, "frequenc": 99, "frequent": 397, "fresh": 388, "frictionless": 428, "friendli": 414, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 134, 136, 137, 140, 142, 148, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 220, 228, 230, 232, 235, 237, 238, 241, 245, 248, 253, 257, 259, 261, 263, 265, 269, 275, 277, 283, 286, 287, 308, 312, 313, 317, 325, 326, 327, 329, 337, 348, 350, 359, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 415, 417, 418, 419, 421, 423, 424, 425, 426, 429, 431, 432, 433, 434], "from_bound": [195, 414, 427], "from_campaign": [82, 423], "from_config": [27, 406, 407, 420], "from_datafram": [195, 197, 203, 414, 427, 428, 434], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 337, 391], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 337, 391, 392, 405, 420, 428], "from_paramet": [195, 197, 203, 414], "from_preset": 245, "from_product": [195, 197, 203, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 414, 421, 427, 428, 429], "from_recommend": [82, 423], "from_record": [428, 429], "from_simplex": [203, 394, 414, 427, 434], "from_surrog": [82, 423], "frozenset": 394, "fsspec": 414, "fulfil": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 388, 394, 395], "full": [22, 195, 344, 370, 411, 414, 420, 423, 425, 432, 433], "full_factori": 195, "full_lik": 389, "full_lookup": [372, 373, 374], "fulli": [394, 412, 414, 422, 429], "fulltest": 415, "func": 415, "func_nam": 409, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 69, 77, 79, 82, 98, 105, 108, 111, 113, 118, 141, 144, 177, 179, 180, 196, 201, 207, 211, 212, 220, 221, 224, 225, 227, 229, 230, 231, 236, 240, 246, 251, 266, 270, 271, 274, 281, 284, 285, 286, 287, 288, 291, 292, 294, 297, 310, 314, 319, 322, 325, 332, 333, 335, 340, 342, 349, 350, 353, 356, 365, 376, 382, 383, 384, 385, 387, 389, 394, 397, 405, 409, 410, 412, 413, 414, 418, 420, 421, 424, 426, 427, 429, 430, 431, 432, 434], "function_nam": [409, 410], "functionalgroup": 134, "functionalgroupsfingerprint": 134, "fundament": [425, 428], "furo": 414, "further": [394, 395, 405, 412, 419, 426, 427, 430, 432, 433], "furthermor": 399, "furyl": [372, 373, 374], "futur": [53, 197, 240, 382, 384, 385, 388, 409, 423, 431], "fuzzi": 291, "fuzzy_row_match": 291, "g": [49, 51, 52, 65, 82, 85, 129, 142, 197, 203, 298, 318, 331, 397, 412, 413, 414, 415, 418, 419, 421, 422, 423, 425, 426, 427, 429, 434], "g1": 395, "g2": 395, "g3": 395, "gain": [203, 420, 423], "gamma": 153, "gammaprior": 414, "garbag": 414, "gather": [169, 409, 410, 418, 432], "gaussian": [87, 186, 237, 243, 244, 245, 246, 250, 251, 252, 254, 255, 256, 257, 285, 377, 399, 414, 421, 426, 432], "gaussian_kd": 389, "gaussian_process": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 245, 247, 248, 252, 255, 257, 377, 414], "gaussianmixtureclusteringrecommend": 426, "gaussianprocesspreset": [245, 253], "gaussianprocesssurrog": [253, 377, 382, 383, 384, 385, 389, 399, 405, 406, 407, 414, 430], "gcf": [372, 374], "ge": 380, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 133, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 235, 237, 238, 241, 245, 248, 255, 257, 259, 261, 263, 265, 275, 277, 283, 289, 312, 318, 324, 337, 353, 361, 371, 377, 387, 394, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 432, 433, 434], "geom_mean": [106, 114, 117, 399, 424], "geometr": [117, 348, 399, 424], "germani": [412, 416, 422], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 177, 179, 195, 245, 323, 377, 388, 394, 402, 403, 412, 414, 419, 433, 434], "get_candid": [203, 388], "get_cmap": 389, "get_comp_rep_parameter_indic": [197, 414], "get_current_recommend": [164, 166, 167, 168, 169, 414], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 388, "get_next_recommend": [164, 166, 167, 168, 169, 414], "get_non_meta_recommend": [164, 166, 167, 168, 169, 414], "get_parameters_by_nam": [195, 197, 203], "get_parameters_from_datafram": [195, 203], "get_subclass": 377, "get_surrog": [27, 82, 177, 179, 414, 423, 430], "get_transform_object": 414, "get_transform_paramet": 414, "get_valid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 414], "getawai": 134, "getawayfingerprint": 134, "ghosecrippen": 134, "ghosecrippenfingerprint": 134, "git": [412, 415], "github": [257, 288, 309, 329, 391, 414, 415, 416], "give": [391, 392, 394, 410, 417, 420, 424, 428], "given": [25, 27, 30, 36, 37, 38, 58, 75, 82, 85, 86, 109, 114, 119, 127, 140, 142, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 209, 224, 228, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 269, 280, 292, 296, 301, 302, 306, 307, 308, 311, 312, 315, 316, 320, 323, 326, 332, 337, 338, 346, 348, 351, 352, 358, 361, 382, 383, 384, 385, 388, 394, 397, 399, 403, 409, 410, 420, 427, 429], "glass_transition_tempc": 425, "global": [13, 354, 414, 433, 434], "gmean": 348, "gmm": 186, "go": [295, 394, 412], "goal": [371, 397, 424, 432], "goe": 430, "good": [323, 388, 399, 420, 422, 431], "good_interv": 323, "good_reference_valu": 323, "goodwil": 417, "googl": [414, 415], "govern": 412, "gp": [235, 237, 238, 241, 245, 259, 261, 263, 265, 414], "gpytorch": [87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 148, 150, 152, 153, 154, 155, 156, 157, 158, 414], "gradient": [10, 179, 263, 414, 422, 426], "grant": [414, 417], "granular": [392, 405, 406, 407, 412], "granularity_coar": 405, "granularity_fin": 405, "great": [397, 428], "greater": 169, "greatli": 415, "greedi": [179, 414, 426], "grid": [409, 410], "grid_d": [409, 410], "grossli": 417, "group": [296, 303, 361, 395, 412, 414, 420, 423], "groupbi": [230, 232], "grow": 434, "gt": [385, 394], "gu16": 425, "guarante": [414, 421, 422, 426], "guid": [376, 412, 413, 414, 415, 418, 420, 424, 427, 429, 432], "guidelin": [414, 415, 418], "ha": [27, 49, 68, 69, 82, 167, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 295, 306, 308, 312, 324, 331, 358, 359, 373, 377, 382, 383, 384, 385, 394, 399, 403, 405, 412, 414, 415, 417, 419, 420, 421, 423, 425, 427, 428, 429, 431, 432], "had": [224, 421, 425, 429], "half": [137, 154, 155, 337, 403, 419], "halfcauchyprior": 414, "halfnormalprior": 414, "hamster": 432, "hand": [41, 140, 395, 397, 409, 410, 412, 420, 428], "handl": [82, 124, 226, 228, 269, 335, 382, 383, 397, 399, 414, 420, 424, 434], "happen": [167, 399, 403, 410, 413, 414, 415, 427, 428, 432], "happili": 424, "hard": [414, 432, 434], "harmless": 417, "hartmann": [389, 409, 410], "hasattr": [379, 380, 402, 403], "hash": [289, 412, 422, 425], "hashabledict": 414, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 109, 114, 119, 140, 189, 197, 203, 224, 240, 272, 296, 303, 306, 323, 331, 332, 344, 372, 373, 376, 377, 382, 383, 387, 389, 394, 395, 397, 399, 402, 403, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 426, 428, 429, 430, 432, 434], "head": 414, "header": 352, "heart": 432, "heatmap": [82, 84], "help": [397, 428, 429, 432], "helper": [387, 389, 391, 394, 428], "henc": [317, 394, 397, 405, 421, 425, 434], "here": [52, 344, 372, 374, 376, 379, 380, 387, 388, 392, 394, 395, 402, 403, 405, 409, 410, 412, 413, 419, 421, 424, 425, 426, 427, 428, 429, 431, 432], "herebi": 417, "herein": [417, 420], "heurist": 179, "hierarch": 428, "hierarchi": [75, 414, 415, 420, 428], "high": [255, 371, 397, 414, 415, 418, 420, 421, 425, 428], "higher": [8, 18, 140, 397, 413, 421, 423, 426], "highest": [418, 428], "highlight": 432, "hint": 415, "histogram": 292, "histori": 415, "hold": [40, 303, 417, 428], "home": [382, 384, 385], "homepag": [412, 414], "hood": 425, "hook": [45, 112, 203, 212, 216, 308, 411, 413, 414, 415], "hopp": [412, 416], "host": [412, 414, 422], "hostnam": [289, 422], "hot": [131, 373, 397, 412, 414, 425], "how": [50, 226, 228, 358, 371, 372, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 403, 405, 406, 407, 410, 412, 420, 421, 422, 424, 429, 430, 431, 432], "howev": [142, 203, 240, 308, 387, 394, 397, 402, 403, 413, 415, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 432, 434], "hrovatin": 416, "html": [41, 87, 148, 288, 299, 344, 391, 414], "http": [41, 87, 148, 257, 288, 299, 309, 329, 344, 412, 414, 417, 432], "hue": [371, 372, 373, 374, 388, 409, 410], "human": [202, 341, 405, 414, 416, 428], "hybrid": [21, 22, 65, 170, 171, 179, 192, 197, 198, 377, 378, 382, 383, 384, 385, 399, 400, 405, 411, 412, 414, 426, 427], "hybrid_recommend": 403, "hybrid_sampl": [179, 426], "hyperparamet": 377, "hyperrectangl": [195, 427], "hypothesi": [412, 414, 415], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 65, 67, 68, 69, 70, 72, 82, 85, 86, 101, 104, 115, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 210, 224, 226, 228, 230, 232, 235, 237, 238, 239, 240, 241, 245, 255, 259, 261, 263, 265, 269, 272, 280, 285, 286, 287, 290, 291, 292, 296, 299, 301, 302, 306, 308, 309, 311, 312, 313, 316, 317, 323, 324, 325, 326, 330, 331, 332, 333, 336, 337, 344, 346, 347, 350, 352, 358, 359, 366, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 402, 403, 405, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "ideal": [419, 421, 429], "ident": [142, 295, 296, 425, 428, 432], "identif": 397, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 230, 303, 317, 331, 332, 388, 414, 421, 423, 425, 427, 428, 429, 432], "idx_offset": 41, "ignor": [109, 114, 119, 167, 179, 197, 204, 205, 226, 228, 230, 306, 329, 374, 388, 403, 414, 421, 428, 434], "ignore_exampl": 414, "ignore_list": 328, "ii": 417, "iii": 417, "illustr": 401, "iloc": 419, "imag": [397, 414], "imagin": [394, 397], "immedi": [350, 387, 420], "immut": 414, "impact": [373, 410, 422], "imperfect": 325, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 161, 172, 232, 239, 310, 382, 388, 394, 409, 414, 415, 416, 418, 423, 426, 427, 429, 432], "impli": [394, 412, 417, 421, 425], "implicitli": 428, "import": [74, 82, 114, 228, 388, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "impos": [394, 395, 421], "imposs": [412, 422, 428], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 377, 380, 386, 388, 411, 412, 414, 417, 422], "imput": [226, 228, 370, 374, 411, 412], "impute_mod": [226, 228, 230, 374, 429], "inabl": [412, 417], "inaccuraci": 412, "inact": 40, "inc": 432, "incident": 417, "includ": [58, 109, 114, 119, 169, 226, 301, 302, 328, 372, 383, 392, 394, 406, 407, 410, 414, 415, 417, 418, 419, 421, 434], "inclus": 417, "incom": 428, "incompat": [62, 63, 64, 65, 86, 241, 384, 421], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 419, "incompatibleexplainererror": 423, "incomplet": 414, "inconsist": 414, "incorpor": [417, 419, 430, 434], "incorrect": 414, "incorrectli": 414, "increas": [10, 167, 230, 286, 287, 399, 409, 410, 414, 418, 425, 432], "increment": 203, "incur": 417, "indefinit": [167, 226], "indemn": 417, "indemnifi": 417, "indent": 352, "independ": [171, 237, 261, 391, 414, 426, 429], "independentgaussiansurrog": [241, 259, 261, 263, 414], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 197, 230, 295, 296, 330, 331, 391, 392, 399, 403, 405, 414, 423, 425, 427, 429], "indexkernel": 414, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 82, 85, 122, 123, 124, 126, 127, 129, 136, 137, 140, 164, 166, 167, 168, 169, 197, 295, 296, 326, 358, 394, 403, 414, 417, 426, 429, 430], "indirect": [301, 302, 417], "indistinguish": 394, "individu": [49, 50, 102, 103, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 226, 333, 388, 395, 417, 420, 424, 426, 432], "induc": 397, "industri": 432, "ineffici": 203, "inequ": [41, 195, 427], "inf": [382, 383, 384, 385, 405], "infer": [142, 241, 409, 410, 414, 427], "inferencesess": 241, "infin": 146, "infinit": [167, 168, 304, 336, 366, 367, 414, 425], "influenc": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192], "influenti": 432, "info": [292, 414], "inform": [22, 124, 275, 332, 372, 373, 374, 389, 394, 402, 403, 410, 412, 414, 415, 417, 419, 422, 425, 427, 432, 433], "infring": 417, "ingest": [203, 226, 425, 426], "ingredi": [394, 395, 421], "inher": [17, 394], "inherit": 415, "init": 271, "initi": [93, 94, 95, 96, 97, 98, 99, 100, 104, 169, 171, 179, 186, 187, 188, 189, 191, 203, 226, 230, 291, 358, 370, 382, 383, 384, 385, 388, 389, 399, 405, 410, 411, 414, 416, 420, 422, 425, 426, 428, 429, 432], "initial_data": [226, 230, 372, 410, 429], "initial_recommend": [169, 377, 388, 389, 391, 392, 397, 405, 406, 407, 412, 426], "initial_recommender_cl": 414, "initial_strategi": 414, "initial_typ": 391, "inject": 428, "inner": [162, 330, 423, 426, 428], "inplac": [373, 409, 410, 434], "input": [36, 37, 38, 115, 123, 126, 127, 129, 137, 140, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 275, 277, 283, 285, 303, 320, 321, 325, 326, 330, 331, 337, 339, 346, 358, 371, 391, 399, 409, 410, 414, 428, 429, 432], "input_dim": 391, "input_label": 326, "inputtransform": 361, "insid": [388, 391, 392, 413, 428], "insight": [82, 388, 412, 414, 416, 433], "inspect": [312, 387, 394], "instabl": 421, "instal": [414, 415, 422, 423, 425, 434], "instanc": [36, 37, 38, 49, 52, 82, 169, 197, 203, 323, 383, 388, 394, 395, 412, 413, 415, 419, 420, 421, 422, 423, 425, 427, 428, 429, 434], "instanti": [241, 388, 420], "instead": [164, 166, 167, 168, 169, 291, 317, 326, 382, 384, 385, 412, 413, 414, 420, 421, 424, 425, 428, 429, 431, 432, 434], "institut": [416, 417], "instruct": [412, 414, 431, 433], "instrument_nam": 292, "int": [10, 13, 17, 27, 30, 40, 41, 47, 82, 89, 90, 91, 94, 96, 97, 98, 99, 100, 115, 131, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 226, 230, 232, 277, 278, 285, 286, 287, 292, 333, 347, 351, 354, 355, 358, 359, 361, 382, 384, 385, 394, 397, 399, 410, 415, 425], "integ": [30, 131, 197, 230, 403, 414, 415, 425], "integr": [13, 414, 415, 418, 420], "intend": [376, 387, 409, 415, 426], "intens": 425, "intention": 417, "interact": [26, 27, 376, 412, 413, 420, 428], "interchang": 394, "interconnect": 420, "interest": [423, 424, 434], "interfac": [161, 239, 247, 387, 389, 414, 417, 420, 423], "intermedi": [189, 358], "intern": [27, 41, 53, 167, 371, 388, 399, 414, 421, 422, 425, 426, 427, 428], "internet": 412, "internship": 416, "interplai": 414, "interpol": [94, 255, 414], "interpret": [197, 224, 320, 392, 394, 406, 407, 410, 422, 427, 429], "interrupt": 60, "intersect": 403, "interv": [136, 283, 285, 286, 287, 399, 414, 420, 425, 428, 431], "intrins": 432, "introduc": [413, 414, 421, 425, 426, 429], "intuit": [420, 423], "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 66, 203, 317, 331, 359, 392, 406, 413, 420, 421, 427], "invalid_config": 407, "invalid_surrogate_model": 392, "invalid_typ": 407, "invari": [49, 52, 53, 295, 296, 421], "invers": [216, 428], "invert": [27, 330], "investig": [224, 429, 430], "invok": [429, 433, 434], "involv": [27, 203, 387, 394, 412, 422, 423, 424, 425, 428, 432], "io": 288, "irrelev": [394, 421], "irrespect": [291, 331], "irrevoc": 417, "is_bound": [337, 414], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140], "is_degener": 337, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140], "is_empti": [195, 203, 414], "is_eq": 41, "is_finit": 414, "is_fully_unbound": 337, "is_half_bound": 337, "is_in_rang": [122, 123, 124, 126, 127, 129, 136, 137, 140], "is_left_bound": 337, "is_numer": [122, 123, 124, 126, 127, 129, 136, 137, 140, 414], "is_right_bound": 337, "is_stat": [164, 166, 167, 168, 169, 414], "iso": 391, "isoxazol": 432, "issu": [240, 299, 309, 414, 417, 429, 434], "item": [37, 122, 123, 124, 126, 127, 129, 136, 137, 140, 394, 397, 409, 410, 425], "iter": [27, 136, 167, 168, 197, 203, 226, 240, 283, 304, 325, 338, 372, 382, 383, 384, 385, 388, 389, 397, 409, 410, 412, 414, 418, 420, 425, 426, 429, 430, 434], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 195, 197, 203, 220, 232, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 292, 295, 300, 308, 312, 323, 337, 341, 371, 377, 387, 389, 394, 395, 397, 410, 412, 413, 415, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 432, 434], "itself": [387, 409, 413, 432], "j": [373, 412, 425, 432], "jackiepho": [372, 373, 374], "januari": 417, "javadi": 416, "jin": 416, "join": [330, 413], "joint": 420, "jointli": 420, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 337, 350, 391, 392, 405, 406, 414, 433], "json_str": 428, "juli": 416, "julian": 416, "jump": [414, 432], "jupyt": 391, "just": [397, 415, 428], "k": [137, 187, 358, 371, 372, 373, 374, 376, 377, 379, 380, 388, 394, 401, 402, 403, 414, 426, 434], "karin": 416, "kde": 389, "keep": [48, 140, 195, 203, 388, 414, 415], "kei": [303, 323, 373, 415, 423], "kept": [330, 425, 430], "kernel": [89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 245, 246, 247, 248, 249, 255, 257, 377, 382, 383, 384, 385, 399, 405, 414, 421, 432], "kernel_factori": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 245, 247, 248], "kernel_or_factori": 245, "kernelexplain": [80, 82, 83, 86, 423], "kernelfactori": [245, 248, 249, 255, 257, 414], "keyword": [82, 140, 374, 377, 403, 410, 414, 419, 421, 427, 429], "kgaa": [412, 416, 422], "kian": 432, "kickstart": 428, "kind": [179, 412, 414, 417, 421, 425, 426], "kiter": [382, 383, 384, 385, 399], "klekotaroth": 134, "klekotarothfingerprint": 134, "kmean": 377, "kmeansclusteringrecommend": [377, 426], "knob": 412, "know": [397, 406, 412, 413, 428, 432], "knowledg": [10, 412, 414, 432], "known": [421, 432], "koller": 432, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 93, 95, 97, 102, 103, 104, 150, 152, 153, 154, 155, 156, 157, 158, 161, 181, 239, 242, 247, 318, 336], "kwargs_conform": [140, 318, 425], "kwargs_fingerprint": [140, 318, 425], "l0": 30, "l1": 425, "l664": 257, "label": [52, 53, 129, 140, 292, 326, 394, 395, 412, 414, 421, 425, 427, 429], "labelpad": 389, "laggner": 134, "laggnerfingerprint": 134, "lambda": [382, 384, 385, 388, 394, 409, 430], "lanat": 423, "land": 414, "languag": [299, 395, 412], "larg": [140, 203, 379, 380, 395, 414, 422, 425, 429, 434], "larger": [94, 137, 359, 377, 384, 420, 421, 428, 432], "largest": [358, 397, 418], "last": [167, 397, 415, 420, 426], "last_call_tim": 387, "lastli": 389, "latent": 425, "later": [137, 413, 420, 428], "latest": [168, 412, 415, 420], "latter": [17, 27, 295, 312, 388, 394, 420, 432], "law": [412, 417], "lawsuit": 417, "layer": 134, "layeredfingerprint": 134, "layout": 414, "lazi": [205, 362, 414], "lazili": [414, 422], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 205], "le": 380, "le_method": 415, "lead": [73, 399, 414, 428], "lean": 415, "learn": [13, 231, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 377, 382, 383, 384, 385, 397, 399, 405, 409, 411, 412, 414, 421, 423, 425, 430, 431, 433], "least": [167, 395, 412, 417, 419, 420], "leav": 428, "lee": 416, "left": [70, 71, 158, 226, 324, 331, 337, 383, 414, 424], "left_df": 331, "leftov": 414, "legal": 417, "legend": [372, 374], "len": [383, 388, 389, 394, 395, 397], "length": [95, 167, 168, 235], "lengthi": 420, "lengthscal": [94, 95, 96, 98, 99, 100], "lengthscale_initial_valu": [94, 95, 96, 98, 99, 100], "lengthscale_prior": [94, 95, 96, 98, 99, 100], "leq": 30, "less": [296, 388, 389, 397, 420, 434], "let": [371, 373, 387, 388, 389, 391, 392, 394, 395, 401, 410, 412, 421, 424, 428], "level": [325, 414, 415, 419, 420, 421, 426, 428], "leverag": [388, 420, 426], "li": 425, "liabil": 417, "liabl": 417, "lib": [382, 384, 385, 413], "librari": 413, "licensor": 417, "lie": [27, 235, 237, 238, 241, 245, 259, 261, 263, 265, 323], "liebig": 416, "life": [412, 415, 416, 434], "lifecycl": 420, "ligand": [372, 373, 374, 376, 377, 388, 412, 423, 425], "ligand_data": 388, "ligand_smil": 388, "like": [189, 230, 298, 389, 394, 397, 412, 413, 414, 415, 419, 420, 421, 425, 428, 429, 432, 434], "likelihood": 235, "lime": [82, 85, 423], "limetabular": [80, 81, 423], "limit": [255, 292, 389, 412, 416, 417, 421, 427, 433], "line": [337, 352, 372, 374, 388, 397, 414, 415, 418, 420, 425, 429, 432], "linear": [41, 93, 195, 259, 281, 286, 377, 378, 399, 411, 414, 415, 423, 427, 431], "linear_model": 391, "linear_regressor": 391, "linearkernel": 414, "linearli": [255, 286, 287, 399, 414], "lineplot": [371, 372, 373, 374, 388, 409, 410], "lingo": 134, "lingofingerprint": 134, "link": [51, 413, 414, 417, 425], "linspac": [382, 383, 384, 385, 389, 391, 392, 394, 402, 403, 405, 409, 410, 434], "lint": [412, 414, 415], "linter": [414, 415], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 106, 127, 142, 147, 167, 168, 195, 197, 203, 204, 205, 208, 209, 210, 226, 230, 232, 291, 301, 302, 303, 311, 318, 323, 327, 328, 329, 331, 332, 358, 372, 377, 382, 383, 384, 385, 389, 394, 395, 397, 399, 402, 403, 410, 412, 415, 417, 421, 424, 425, 426, 427, 429], "liter": [82, 106, 167, 226, 228, 230, 325, 358, 415], "literatur": 414, "litig": 417, "littl": 413, "liver": [429, 432], "load": [350, 362, 388, 391, 406, 407, 413, 414], "loc": [156, 157, 372, 374], "local": [413, 415, 422, 423, 433], "locat": [156, 157, 419, 422, 432], "lockfil": 414, "log": [156, 292, 377, 412, 422], "logarithm": [4, 11, 12, 348], "logei": [4, 414], "logic": [162, 323, 326, 371, 414, 421, 426, 429, 434], "lognormalprior": 414, "logo": 414, "long": [420, 428, 429], "longer": 414, "look": [228, 377, 394, 397, 413, 418, 420, 421, 423, 428, 429, 431], "look_up_target": 226, "lookup": [224, 226, 230, 232, 326, 331, 370, 371, 389, 402, 411, 414, 423, 433], "lookup_df": 228, "lookup_test_task": 410, "lookup_training_task": 410, "lookup_valu": [379, 380, 389, 402, 403], "lookup_withmiss": 374, "loop": [224, 226, 232, 382, 383, 384, 385, 388, 399, 414, 419, 423, 429, 434], "loss": 417, "lost": 428, "lot": 401, "low": [255, 397, 413, 414, 423, 425, 428], "lower": [158, 285, 286, 287, 337, 372, 374, 389, 399, 409, 410, 425, 431], "lower_bound": 427, "lst_exclud": 327, "lt": 413, "luxuri": 420, "m": 394, "m1": 413, "mac": 413, "macc": 134, "maccsfingerprint": 134, "machin": [397, 412, 413, 415, 418, 422, 425, 431, 432], "machineri": [17, 179, 413, 415, 432, 434], "made": [74, 203, 226, 358, 374, 412, 413, 417, 421, 422, 429], "magic": 432, "magnitud": [324, 325, 434], "mai": [27, 109, 114, 119, 197, 308, 412, 417, 420, 428, 429], "mail": 417, "main": [26, 27, 412, 414], "maintain": [269, 415], "major": [414, 429], "make": [8, 18, 53, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 267, 268, 269, 299, 324, 326, 372, 374, 377, 379, 394, 395, 412, 413, 415, 417, 420, 421, 423, 425, 428, 432, 434], "make_explainer_for_surrog": 82, "malfunct": 417, "manag": [26, 195, 196, 197, 203, 355, 414, 417, 429], "mandatori": [414, 431], "mani": [359, 394, 402, 403, 412, 420, 425, 428, 431, 432], "manipul": [414, 422], "manner": 422, "manual": [403, 413, 414, 428], "map": [129, 134, 140, 228, 230, 285, 286, 287, 306, 326, 361, 372, 373, 374, 399, 429, 431], "mapfingerprint": 134, "mapl": [80, 81, 82, 85, 423], "margin": 414, "mark": [417, 426, 432, 433], "markdown": [392, 406, 407, 414], "marker": [371, 372, 373, 374, 388, 409, 410, 414], "markers": [371, 373, 388, 409, 410], "market": 397, "marketplac": 414, "martin": [412, 416], "mask_bad1": 382, "mask_bad2": 382, "mask_bad3": 382, "mask_good": [382, 421], "mass": 152, "master": 257, "match": [27, 76, 123, 126, 127, 129, 137, 140, 142, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 275, 277, 280, 283, 291, 306, 308, 331, 332, 387, 389, 399, 403, 412, 414, 419, 420, 424, 426, 428, 429, 433], "match_attribut": 414, "match_targeta": 431, "match_targetb": 431, "materi": [397, 416, 432], "matern": 94, "maternkernel": 414, "math": [388, 394], "mathemat": 414, "matmin": 413, "matplotlib": [372, 374, 389, 414], "matter": [394, 401, 415, 424], "max": [228, 280, 324, 372, 373, 374, 376, 377, 382, 383, 384, 385, 388, 389, 391, 392, 397, 399, 405, 406, 407, 412, 414, 424, 428, 429, 433], "max_cardin": [30, 40, 47], "max_column": [333, 394], "max_colwidth": 333, "max_nonzero": 203, "max_row": [333, 394], "max_sum": [203, 394, 427], "max_target": 431, "max_yield": [372, 374], "maxim": [6, 280, 376, 389, 397, 399, 412, 414, 423, 431], "maximum": [6, 30, 40, 47, 140, 195, 197, 203, 285, 333, 394, 395, 399, 414, 421, 425, 427], "mc": [397, 419], "md": 414, "me2pph": [372, 373, 374], "mean": [5, 8, 17, 18, 27, 53, 106, 117, 187, 224, 226, 228, 230, 235, 261, 269, 348, 374, 377, 391, 397, 399, 414, 415, 417, 418, 419, 420, 421, 424, 425, 426, 428, 430, 433], "meaning": 424, "meaningless": [394, 418], "meanpredictionsurrog": [269, 377, 430], "meantim": [415, 421], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 82, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 224, 226, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 275, 277, 283, 291, 323, 331, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 399, 402, 403, 405, 412, 414, 415, 418, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433], "mechan": [8, 18, 27, 60, 114, 115, 117, 224, 227, 228, 232, 308, 330, 339, 358, 371, 387, 388, 389, 409, 410, 414, 417, 423, 427, 428, 432, 433], "mechanist": 412, "media": [417, 425, 432], "mediocr": 431, "medium": [392, 405, 412, 417, 425], "medoid": [188, 414, 426], "meet": [323, 417], "mem_estim": 434, "member": [312, 421, 425], "memori": [10, 197, 202, 203, 414, 422, 433], "memorys": [197, 203, 434], "mention": 418, "merchant": 417, "merck": [412, 416, 422], "mere": [417, 424], "merg": 415, "meshgrid": [409, 410], "messag": 388, "meta": [27, 70, 164, 166, 167, 168, 169, 172, 382, 383, 384, 385, 399, 405, 412, 414, 433], "metadata": [27, 195, 203, 289, 414], "metarecommend": [166, 167, 168, 169, 414], "methanol": 394, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 220, 235, 237, 238, 239, 241, 245, 247, 248, 255, 257, 259, 261, 263, 265, 268, 271, 272, 275, 277, 283, 298, 299, 308, 312, 337, 350, 357, 358, 359, 361, 389, 392, 406, 407, 414, 416, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432], "methodtyp": [387, 388, 389], "methyldiphenylphosphin": [372, 373, 374], "methylisoxazol": 432, "metric": [397, 412, 422, 425], "mhfp": 134, "mhfpfingerprint": 134, "micromamba": 414, "midpoint": 431, "might": [49, 53, 140, 197, 373, 377, 379, 383, 403, 410, 413, 419, 420, 421, 422, 423, 427, 429, 432, 434], "mimic": [87, 148, 421], "min": [280, 324, 371, 379, 380, 389, 399, 402, 403, 409, 410, 412, 414, 424, 428, 433], "min_cardin": [30, 40, 47], "min_nonzero": 203, "min_target": 431, "mind": [397, 430], "miniconda": 414, "minim": [6, 280, 399, 409, 410, 414, 427, 431], "minimum": [30, 40, 47, 137, 195, 197, 203], "minor": 414, "mirror": [420, 428], "miss": [27, 226, 228, 374, 414, 415], "mistak": 415, "mix": [232, 394, 395, 412, 421, 425, 428, 432], "mixin": 220, "mixtur": [186, 411, 414, 421, 425, 426, 432, 434], "mobil": 414, "mode": [106, 129, 140, 167, 226, 235, 280, 283, 286, 306, 323, 370, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 388, 389, 391, 392, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 424, 426, 428, 433], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 82, 86, 87, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 235, 237, 238, 239, 240, 241, 245, 259, 261, 263, 265, 269, 271, 272, 344, 379, 380, 390, 409, 410, 412, 414, 416, 418, 419, 420, 421, 425, 426, 428, 429, 431, 432, 433], "model_cl": 272, "model_cluster_num_parameter_nam": [186, 187, 188, 189], "model_from_config": 391, "model_from_python": 391, "model_init": 271, "model_json": 391, "model_param": [186, 187, 188, 189, 259, 263, 265, 392, 414], "modelnottrainederror": [235, 237, 238, 241, 245, 259, 261, 263, 265], "modif": [413, 417], "modifi": [27, 168, 228, 269, 323, 324, 325, 414, 417, 434], "modul": [0, 1, 28, 78, 79, 87, 107, 120, 138, 148, 159, 162, 172, 175, 182, 193, 211, 212, 224, 233, 243, 250, 273, 276, 293, 342, 362, 365, 412, 413, 414, 415], "modular": 415, "molecul": [51, 140, 317, 394, 425], "molecular": [318, 425], "moment": [232, 255, 415, 431], "monitor": [414, 422], "monkeypatch": 413, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 230, 371, 373, 374, 388, 397, 409, 410, 414, 419, 429], "monte_carlo_run": [230, 388], "mordr": [134, 140, 372, 373, 374, 376, 377, 383, 388, 392, 394, 406, 407, 412, 414, 421, 425], "mordredcommun": 414, "mordredfingerprint": [134, 425], "more": [8, 10, 18, 53, 58, 71, 140, 167, 168, 195, 197, 203, 210, 226, 269, 288, 291, 312, 352, 374, 377, 389, 394, 395, 409, 412, 413, 414, 415, 417, 419, 420, 421, 422, 424, 425, 427, 428, 429, 431, 434], "morgan": 425, "morgan_fp": [134, 414], "mors": 134, "morsefingerprint": 134, "most": [203, 226, 375, 397, 412, 415, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434], "motiv": 414, "move": [414, 428], "mpl_toolkit": 389, "mplot3d": 389, "mqn": 134, "mqnsfingerprint": 134, "mse": 397, "mu": [156, 157], "much": [373, 424, 425], "multi": [234, 235, 411, 414, 416, 419, 432], "multiarmedbandit": 397, "multipl": [36, 114, 229, 230, 325, 372, 373, 374, 383, 394, 397, 412, 414, 419, 421, 424, 431, 432, 433], "multipli": 103, "multitask": 414, "must": [49, 109, 114, 119, 197, 203, 228, 232, 308, 325, 377, 387, 388, 394, 397, 399, 414, 415, 417, 418, 421, 422, 424, 425, 429], "mutual": 429, "my_attribut": 415, "my_valu": 422, "mypi": [299, 309, 412, 414, 415], "mystr": 415, "n": [22, 235, 296, 313, 358, 372, 373, 374, 376, 377, 382, 383, 384, 385, 392, 394, 397, 399, 402, 403, 405], "n_arm": 397, "n_batches_don": 27, "n_cluster": [187, 188], "n_combin": 394, "n_combinations_actu": 394, "n_combinations_expect": 394, "n_compon": 186, "n_doe_iter": [226, 230, 232, 371, 372, 373, 374, 388, 389, 409, 410, 429], "n_duplic": 394, "n_estim": 392, "n_fits_don": 27, "n_interrupted_campaign": 388, "n_iter": [379, 380, 382, 383, 384, 385, 397, 399], "n_mc_iter": [230, 232, 371, 373, 374, 388, 409, 410, 429], "n_mc_run": 397, "n_mc_sampl": 17, "n_permut": 394, "n_pis_ov": 388, "n_pis_over_requir": 388, "n_point": [195, 359], "n_raw_sampl": [179, 414, 426], "n_restart": [179, 414, 426], "n_sampl": 358, "n_task": 197, "n_task_param": 414, "n_wrong_sum": 394, "naiv": [171, 261, 269, 377, 414, 427], "naivehybridrecommend": 414, "naivehybridspacerecommend": [403, 414, 426], "nake": [291, 422], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 143, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 209, 218, 230, 241, 275, 277, 283, 295, 300, 306, 307, 308, 317, 318, 323, 327, 332, 345, 350, 352, 364, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 414, 415, 417, 419, 421, 422, 424, 427, 428, 429, 430, 431, 432, 434], "name_or_abbr": [300, 307], "namedtupl": 397, "namespac": [180, 414, 415], "nan": [27, 146, 235, 366, 368, 369, 399], "nativ": [391, 414], "natur": [263, 373, 415, 421, 426, 428, 431], "navig": [412, 420], "nbase": 318, "nbviewer": 391, "nd": 412, "ndarrai": [115, 285, 286, 287, 326, 334, 337, 348, 358, 389, 397, 414, 429], "ne": 394, "nearli": 431, "necessari": [332, 387, 415, 420, 421, 424, 425, 427, 429], "necessarili": [417, 420, 421, 427, 432], "need": [22, 27, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 232, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 308, 331, 332, 372, 373, 374, 377, 382, 385, 387, 389, 391, 394, 397, 399, 409, 410, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434], "neg": [13, 414], "negat": [6, 41, 410, 414, 432], "neglig": 417, "neither": [232, 325], "neq": 30, "nest": [352, 420, 433], "neural": 432, "neurip": 432, "never": 384, "nevertheless": [312, 413], "new": [27, 43, 44, 106, 167, 169, 195, 228, 240, 285, 286, 287, 295, 329, 330, 376, 388, 389, 405, 412, 414, 415, 420, 421, 430, 432], "new_measur": 423, "new_rec": 420, "newli": [412, 415, 422, 432], "next": [27, 371, 387, 389, 394, 395, 405, 409, 410, 412, 418, 419, 420, 426, 428], "ngboost": [263, 377, 414], "ngboostmodel": 392, "ngboostsurrog": [377, 392, 430], "nice": [389, 413], "nicknam": 317, "nintern": 399, "no_duplicates_constraint": 394, "no_grad": 389, "no_tl": 409, "nois": [226, 324, 325, 410, 414, 433], "noise_level": 325, "noise_perc": [226, 230, 429], "noise_ratio": 324, "noise_std": [409, 410], "noise_typ": 325, "noisi": [12, 14, 409, 412, 414, 432], "non": [27, 57, 58, 81, 109, 114, 119, 164, 166, 167, 168, 169, 171, 197, 226, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 306, 308, 312, 324, 359, 366, 367, 368, 394, 409, 412, 414, 417, 419, 423, 427, 428], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 104, 106, 114, 119, 123, 136, 137, 142, 145, 146, 147, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 200, 203, 206, 209, 210, 213, 214, 216, 218, 226, 228, 230, 232, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 271, 272, 277, 283, 291, 292, 308, 318, 323, 327, 328, 329, 333, 337, 338, 350, 361, 366, 367, 368, 369, 377, 382, 383, 384, 385, 387, 388, 389, 391, 392, 399, 405, 427, 431, 433], "nonetheless": 432, "nonlinear": [33, 195], "nonpredict": [184, 186, 187, 188, 189, 191, 192], "nonpredictiverecommend": [189, 191, 192, 414], "nonzero": [30, 203, 414], "noqa": [382, 415], "nor": 325, "norecommenderslefterror": [167, 168], "noreturn": 242, "normal": [155, 156, 157, 382, 384, 385, 399, 413, 417, 424, 427], "normaliz": 424, "normalprior": 414, "not_a_param": 392, "notabl": 414, "note": [27, 30, 53, 197, 226, 230, 232, 240, 241, 323, 324, 325, 372, 373, 374, 377, 383, 387, 391, 392, 394, 399, 402, 403, 405, 406, 407, 412, 420, 421, 422, 424, 426, 427, 428, 429, 430, 432], "notebook": 391, "noteworthi": 420, "noth": [13, 27, 30, 38, 40, 41, 47, 72, 114, 127, 140, 169, 171, 177, 179, 186, 187, 188, 189, 195, 197, 203, 235, 245, 259, 263, 265, 283, 417, 425], "notic": [387, 415, 417, 428], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 210, 213, 214, 232, 235, 237, 238, 240, 241, 245, 259, 261, 263, 265], "notwithstand": 417, "now": [371, 372, 373, 374, 376, 377, 382, 384, 387, 388, 389, 394, 395, 397, 399, 401, 405, 406, 409, 410, 412, 414, 432, 434], "np": [115, 379, 380, 382, 383, 384, 385, 389, 391, 392, 394, 395, 397, 401, 402, 403, 405, 409, 410, 421, 425, 429, 434], "nrecommend": [376, 377, 399, 402, 403], "nu": 94, "num": [330, 341], "num_disc_1": [399, 420], "num_disc_2": 399, "num_experi": [226, 371, 372, 373, 374, 388, 409, 410], "num_fantasi": 10, "num_parameter_1": 385, "num_parameter_2": 385, "num_parameter_3": 385, "num_parameter_4": 385, "num_parameter_5": 385, "num_parameter_6": 385, "num_sampl": 99, "num_valu": [382, 383, 384, 385, 399, 405, 427], "number": [10, 13, 17, 27, 40, 99, 140, 161, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 226, 230, 232, 235, 333, 337, 341, 353, 358, 359, 372, 373, 374, 379, 380, 382, 383, 384, 385, 389, 394, 397, 402, 409, 410, 412, 413, 414, 418, 420, 421, 422, 424, 425, 427, 428, 429, 434], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 73, 122, 123, 124, 126, 127, 129, 136, 137, 140, 195, 203, 228, 283, 291, 324, 325, 331, 359, 371, 376, 379, 394, 395, 414, 421, 422, 423, 424, 425, 427, 429, 431], "numerical_measurements_must_be_within_toler": [27, 291, 331, 414, 420], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 195, 371, 379, 380, 395, 401, 403, 410, 427, 429, 433], "numericaldiscreteparamet": [203, 372, 373, 374, 376, 377, 379, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 399, 402, 403, 405, 406, 407, 409, 410, 412, 427, 428, 429, 433, 434], "numericaltarget": [228, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 388, 389, 391, 392, 399, 402, 403, 405, 406, 407, 409, 410, 412, 414, 424, 428, 429, 433], "numericcontinu": 403, "numparam1": 385, "numparam2": 385, "numparam3": 385, "numparam4": 385, "numparam5": 385, "numparam6": 385, "numpi": [326, 334, 337, 343, 345, 379, 380, 382, 383, 384, 385, 389, 391, 392, 394, 395, 397, 401, 402, 403, 405, 409, 410, 414, 421, 429, 434], "nuniqu": 394, "nyou": [402, 403], "o": [371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 392, 394, 397, 409, 410, 412, 421, 422, 425], "o2": [372, 373, 374], "obj": [145, 146, 147, 214], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 114, 117, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 204, 205, 214, 215, 218, 220, 235, 237, 238, 239, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 298, 299, 306, 308, 325, 331, 332, 337, 350, 361, 371, 376, 387, 388, 389, 391, 392, 397, 401, 403, 406, 407, 413, 414, 415, 417, 420, 421, 423, 426, 427, 429, 430, 431, 433, 434], "objective_json": 428, "oblig": 417, "observ": [224, 397, 429, 431], "obsolet": 414, "obtain": [226, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 373, 389, 397, 410, 412, 414, 420, 423, 428, 432], "oc": [372, 373, 374, 376, 377], "oc1": [372, 373, 374], "occur": [52, 415], "occurr": 421, "octanol": [421, 425], "off": [8, 18, 232, 313, 383, 412, 414, 421, 422, 431], "offer": [308, 389, 394, 397, 402, 412, 413, 417, 418, 425, 426, 428, 429, 430, 432, 434], "offset": [41, 97], "offset_initial_valu": 97, "offset_prior": 97, "often": [395, 397, 413, 418, 421, 422, 423, 425, 428, 434], "oftentim": [428, 429], "oh": [126, 131, 373, 383, 392, 397, 399, 405, 406, 407, 412, 427, 428], "ok": 399, "old": 432, "omit": [230, 308, 387, 412, 427, 428], "onc": [230, 388, 425, 429], "one": [17, 27, 58, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 152, 161, 162, 167, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 210, 228, 245, 269, 295, 296, 352, 372, 373, 374, 377, 379, 394, 397, 399, 407, 409, 410, 412, 413, 414, 415, 417, 419, 420, 421, 424, 425, 427, 428, 429, 430, 431, 432], "onehot": 373, "ones": [197, 291, 331, 373, 403, 414, 419, 432], "ongo": [388, 432], "onli": [8, 10, 18, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 82, 94, 109, 114, 119, 140, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 203, 228, 232, 269, 291, 292, 308, 309, 312, 323, 331, 337, 352, 358, 359, 372, 377, 382, 383, 388, 389, 391, 392, 394, 402, 403, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434], "onlin": 397, "onnx": [240, 241, 344, 390, 412, 414, 430], "onnx_input_nam": [241, 391], "onnx_str": [241, 391], "onto": 415, "open": [412, 415], "opentelemetri": [412, 414, 422], "oper": [38, 41, 50, 216, 269, 326, 342, 379, 380, 384, 385, 394, 395, 413, 414, 419, 421, 422, 423, 426, 428], "operator_convert": 391, "opposit": 421, "opt": [412, 422], "optim": [17, 27, 41, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 224, 226, 230, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 323, 373, 375, 376, 379, 380, 388, 389, 394, 397, 399, 403, 414, 416, 418, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432], "optimize_acqf": [41, 179], "optimize_acqf_": 41, "optimize_acqf_discret": 179, "optimize_acqf_mix": 179, "option": [27, 74, 78, 82, 93, 94, 95, 96, 97, 98, 99, 100, 104, 114, 119, 123, 126, 127, 129, 137, 140, 142, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 216, 218, 226, 230, 232, 259, 263, 265, 271, 277, 283, 308, 318, 323, 327, 328, 329, 350, 374, 377, 391, 392, 397, 413, 414, 415, 418, 420, 421, 423, 424, 427, 428, 429, 430, 431, 434], "oracl": 429, "orchestr": [415, 420], "order": [197, 203, 388, 397, 412, 414, 415, 420, 421, 425, 428, 432], "ordin": 431, "org": [41, 257, 299, 329, 391, 412, 417], "organ": 415, "origin": [22, 27, 295, 296, 303, 326, 405, 414, 415, 417, 426, 428, 430], "orthogon": 415, "oserror": 413, "other": [49, 101, 195, 296, 372, 374, 376, 379, 380, 388, 395, 397, 403, 409, 410, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434], "otherwis": [41, 122, 123, 124, 126, 127, 129, 136, 137, 140, 417, 418, 424, 432], "our": [371, 382, 384, 387, 388, 389, 392, 394, 395, 397, 401, 402, 403, 406, 407, 409, 410, 412, 415, 418, 420, 421, 428, 429], "out": [203, 399, 410, 412, 417, 422, 429, 432], "outcom": [161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 373, 412, 425, 431], "output": [27, 104, 325, 326, 350, 371, 409, 410, 413, 414, 416, 429, 430], "output_label": 326, "outputscal": 104, "outputscale_initial_valu": 104, "outputscale_prior": 104, "outsid": [27, 168, 269, 286, 287, 323, 331, 399, 414, 428], "outstand": 417, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 394, 414, 418, 432], "overal": [197, 391, 392, 394, 395, 397, 414, 415, 420, 424, 432], "overlap": [57, 58, 379, 380, 421], "overrid": [216, 218, 387, 414], "overridden": [387, 415], "overview": [412, 428], "overwritten": 403, "own": [171, 371, 395, 412, 413, 414, 415, 417, 421, 425], "owner": 417, "ownership": 417, "p": [371, 372, 373, 374, 376, 377, 379, 380, 387, 389, 402, 409, 410, 415, 423, 430, 434], "p1": [427, 428, 429], "p1_json": 428, "p1_via_json": 428, "p2": [427, 428, 429], "p2_json": 428, "p2_via_json": 428, "p3c4": [372, 373, 374], "p_cont": 427, "p_disc": 427, "p_g1_amount": 395, "p_g2_amount": 395, "p_g3_amount": 395, "p_i": 30, "pack": 428, "packag": [82, 134, 289, 382, 384, 385, 413, 414, 415, 425, 429, 430, 434], "page": [391, 412, 414, 415], "pair": [295, 412, 425], "pam": 188, "pamclusteringrecommend": 426, "panda": [48, 204, 222, 223, 228, 317, 334, 371, 372, 373, 374, 379, 380, 382, 388, 389, 394, 395, 399, 402, 403, 409, 410, 414, 421, 422, 425, 427, 428, 429], "paper": 432, "paper_fil": 432, "parallel": 415, "param": [390, 392, 411], "param1": [427, 429], "param2": [427, 429], "param_bounds_comp": 414, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 71, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 115, 119, 122, 123, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 199, 202, 203, 204, 205, 208, 209, 210, 216, 218, 220, 224, 226, 228, 230, 232, 235, 237, 238, 241, 245, 248, 255, 257, 259, 261, 263, 265, 267, 269, 271, 272, 275, 277, 283, 285, 286, 287, 291, 292, 295, 296, 301, 302, 303, 306, 308, 311, 312, 313, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 341, 346, 347, 348, 350, 352, 354, 355, 358, 359, 361, 371, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 414, 415, 421, 422, 424, 428, 429, 430, 432, 433], "parameter": [152, 153, 154, 155, 156, 157, 158], "parameter_json": 428, "parameter_nam": [195, 197, 203, 403], "parameterencod": [123, 131, 132, 134, 137], "parametr": 421, "parent": 415, "pars": [339, 414], "parser": 414, "part": [13, 22, 36, 65, 171, 172, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 323, 392, 403, 406, 407, 409, 410, 414, 415, 417, 418, 419, 420, 421, 426, 427, 428, 434], "parti": [417, 429], "partial": [22, 388, 433], "particl": 432, "particular": [27, 203, 224, 387, 403, 412, 413, 415, 417, 420, 425, 427, 428, 429], "particularli": [308, 420], "partit": [188, 230, 232, 414, 426, 429], "partitionexplain": [80, 83], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 140, 186, 187, 188, 189, 197, 203, 214, 245, 259, 263, 265, 332, 394, 405, 410, 414, 415, 423, 424, 425, 428], "passthrough": [24, 110, 199, 249], "patch": 388, "patent": 417, "path": [350, 373, 394, 414, 415, 422, 434], "pattern": [134, 415, 432], "patternfingerprint": 134, "pd": [27, 228, 295, 296, 330, 371, 372, 373, 374, 379, 380, 382, 388, 389, 394, 395, 399, 402, 403, 409, 410, 414, 421, 425, 427, 428, 429], "pdf": 432, "peek": 428, "pend": [22, 27, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 412, 414, 433], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 414, 419, 426], "per": [226, 372, 373, 374, 377, 394, 399, 402, 409, 410, 414, 425, 427, 429], "percent": [226, 417], "percentag": [179, 291, 325, 377, 382, 383, 384, 385, 394, 399, 405, 410, 426], "perf_count": 387, "perfectli": 428, "perform": [179, 226, 291, 373, 382, 383, 384, 385, 389, 394, 406, 409, 410, 412, 414, 415, 417, 418, 420, 422, 423, 425, 426, 429, 430, 432], "period": 95, "period_length_initial_valu": 95, "period_length_prior": 95, "periodickernel": 414, "perm_inv_constraint": 394, "permiss": [412, 417], "permut": [49, 52, 53, 296, 414, 421], "permutation_invari": 49, "permutationexplain": [80, 83], "perpetu": 417, "persist": [414, 416, 420, 422, 428, 430], "perspect": 428, "pertain": 417, "pharmacophor": 134, "pharmacophorefingerprint": 134, "phase": [169, 395], "phaseagent1": 395, "phaseagent2": 395, "phcpho": [372, 373, 374, 376, 377], "phenomenon": 420, "philosophi": 428, "physic": [423, 429], "physiochemicalproperti": 134, "physiochemicalpropertiesfingerprint": 134, "pi": [7, 377, 388, 389], "pi_max": 389, "pi_per_iter": 389, "pi_required_fract": 388, "pi_threshold": 388, "pickl": 414, "pictur": 412, "piec": [397, 412, 420, 421], "piecewis": 96, "piecewisepolynomialkernel": 414, "pin": [22, 414], "pin_discret": 22, "pinned_part": 22, "pip": [412, 414, 415, 423, 434], "pipelin": [409, 410, 414, 415], "pival": [372, 373, 374, 376, 377], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 228, 323, 324, 325, 391, 392, 394, 397, 413, 414, 415, 417, 420, 425, 428, 432], "placehold": 298, "plai": [420, 423, 431], "plain": 249, "plainkernelfactori": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 245], "plan": [240, 425], "platt": 432, "pleas": [391, 392, 412, 418, 423, 426], "plenti": 423, "plot": [82, 84, 226, 372, 373, 374, 409, 410, 414, 430, 432, 433], "plot_abegin_convert_pipelin": 344, "plot_ebegin_float_doubl": 344, "plot_typ": 82, "plotting_them": 350, "plt": [372, 374, 389], "plu": [228, 412], "plugin": 414, "pm": [5, 377], "png": [372, 374], "po16": 425, "poetri": 414, "point": [6, 13, 17, 22, 26, 27, 82, 137, 161, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 203, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 343, 344, 356, 357, 358, 359, 363, 372, 376, 377, 388, 395, 402, 403, 409, 410, 412, 414, 416, 418, 419, 420, 423, 426, 427, 433, 434], "points_per_dim": [389, 402, 403, 409, 410], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 205, 412, 414, 416, 433, 434], "poli": 389, "polici": 397, "polycollect": 389, "polym": 425, "polynomi": [96, 97], "polynomialkernel": 414, "polytop": 414, "popul": 394, "popular": [423, 425, 430], "posit": [82, 308, 358, 414, 424], "posixpath": 350, "possibl": [142, 203, 204, 205, 224, 308, 323, 374, 388, 389, 394, 399, 412, 414, 417, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432, 434], "post": 425, "post_hook": [308, 387, 388, 389], "posterior": [5, 6, 8, 13, 17, 18, 27, 235, 237, 238, 241, 245, 259, 261, 263, 265, 268, 377, 414, 418, 430], "posterior_mean": [235, 397], "posterior_mod": 235, "posteriorstandarddevi": [397, 418], "postprocess": 317, "potassium": [372, 373, 374, 376, 377], "potenti": [197, 331, 412, 413, 414, 415, 420, 423, 424, 427, 434], "power": [97, 417, 421, 426], "pph3": [372, 373, 374], "pr": [414, 415], "practic": [418, 423, 426], "pre": [142, 167, 248, 390, 413, 414, 415], "pre_hook": [308, 387], "precis": [53, 167, 195, 291, 333, 344, 345, 364, 414, 433], "precomput": 129, "predefin": [350, 420, 426], "predict": [8, 18, 27, 68, 189, 235, 237, 238, 241, 245, 259, 261, 263, 265, 412, 414, 418, 419, 420, 429, 430, 432], "predictor": 267, "prefer": [27, 417, 428], "prefix": 318, "preliminari": 432, "prepar": [389, 415, 417, 434], "preprocess": 414, "presenc": 413, "present": [64, 109, 114, 119, 197, 295, 296, 308, 331, 376, 397, 414, 421, 429, 434], "preset": [245, 252, 255, 257, 414], "pressur": [384, 391, 392, 405, 406, 407, 412, 421], "pretrain": [241, 390, 411], "pretti": 333, "pretty_print_df": [394, 414], "prevent": [213, 214, 308, 413, 414, 415], "previou": [167, 388, 389, 414, 420, 422, 426, 432], "previous": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 291, 372, 373, 374, 376, 377, 384, 419], "price": 425, "primari": 420, "primarili": 418, "principl": [394, 397, 430], "print": [228, 333, 352, 372, 373, 374, 376, 377, 379, 380, 384, 387, 391, 392, 394, 395, 397, 401, 402, 403, 405, 406, 407, 412, 414, 427, 434], "print_parameter_names_hook": 387, "printer_inst": 387, "prior": [93, 94, 95, 96, 97, 98, 99, 100, 104, 152, 153, 154, 155, 156, 157, 158, 235, 255, 385, 412, 413, 414], "priori": [421, 428, 432], "privat": [414, 416], "probabilist": 418, "probability_of_improv": 389, "probabilityofimprov": [388, 389], "probabl": [7, 15, 17, 377, 386, 388, 411, 414], "problem": [394, 395, 397, 409, 410, 414, 415, 420, 424, 428], "problemat": [312, 413, 425], "proce": [226, 376, 422], "procedur": [418, 432], "proceed": 432, "process": [27, 87, 243, 244, 245, 246, 250, 251, 252, 254, 255, 256, 257, 330, 358, 377, 387, 394, 397, 409, 410, 414, 415, 418, 419, 420, 421, 422, 425, 428, 432], "prod": 385, "prod_constraint": 385, "prod_i": 424, "produc": [115, 228, 412, 414, 415, 422, 429], "product": [54, 103, 197, 203, 204, 205, 304, 381, 411, 412, 414, 417, 421, 433, 434], "product_paramet": [203, 394, 427], "productkernel": 414, "programmat": 394, "progress": [27, 165, 389, 414], "prohibit": 418, "project": [389, 412, 414, 422], "promin": 417, "promis": [388, 419], "proper": 414, "properli": [22, 399, 413, 427], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 202, 203, 235, 237, 238, 241, 245, 248, 252, 255, 257, 259, 261, 263, 265, 275, 277, 280, 281, 283, 299, 337, 357, 361, 414, 415, 421], "proport": 410, "propos": 420, "protobuf": 414, "protocol": [160, 161, 239, 247, 312, 414], "prototyp": 416, "provid": [13, 27, 41, 82, 86, 115, 129, 140, 142, 161, 167, 168, 171, 172, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 216, 220, 224, 226, 228, 230, 232, 235, 237, 238, 241, 245, 255, 257, 259, 261, 263, 265, 295, 304, 308, 320, 324, 325, 329, 332, 334, 358, 359, 371, 372, 373, 374, 387, 394, 401, 402, 403, 406, 409, 410, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 414, 418], "pubchem": 134, "pubchemfingerprint": 134, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 202, 203, 220, 235, 237, 238, 239, 241, 245, 247, 248, 252, 255, 257, 259, 261, 263, 265, 275, 277, 280, 281, 283, 298, 299, 337, 357, 361, 414, 415], "publicli": 417, "publish": 414, "pull": [397, 414], "pure": [8, 10, 13, 18, 162, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 232, 240, 359, 402, 414, 433], "purerecommend": [164, 166, 167, 168, 169, 171, 177, 184, 414], "purpos": [13, 387, 388, 391, 397, 412, 413, 415, 417, 428, 434], "push": 415, "put": [394, 397, 422, 425], "puzzl": 412, "py": [257, 382, 384, 385, 414, 422], "py310": [382, 384, 385], "py312": 415, "pyarrow": 414, "pydant": 414, "pydoclint": [414, 415], "pydocstyl": 415, "pylint": 414, "pymatgen": 413, "pypi": [412, 414], "pyplot": [372, 374, 389], "pyproject": 414, "pytest": [414, 415], "python": [26, 299, 309, 373, 392, 406, 407, 412, 413, 414, 415, 420, 422, 428], "python3": [382, 384, 385], "python310": 413, "pytorch": 414, "pyupgrad": 414, "q": [96, 267, 268, 377, 419], "qei": [9, 377, 406, 407, 414], "qkg": [10, 414], "qlogei": [11, 377, 414], "qlogexpectedimprov": [377, 382, 383, 384, 385, 399, 405], "qlognei": [12, 414], "qnegintegratedposteriorvari": 418, "qnei": [14, 414], "qnipv": [13, 414, 418], "qpi": [15, 377], "qsimpleregret": 17, "qsr": [16, 414], "qt": 17, "qthompsonsampl": [397, 414], "quadrat": [100, 371], "qualiti": 415, "quantif": 432, "quantifi": [397, 418, 432], "quantiti": [27, 51, 422, 423, 424, 430, 434], "quantum": 129, "qucb": [18, 377, 418], "queri": [162, 172, 224, 226, 228, 412, 420, 422, 429], "question": [415, 420, 432], "qupperconfidencebound": 418, "qvarucb": 414, "r": [372, 373, 374, 376, 377], "radial": 98, "radiu": [134, 414, 425], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 82, 86, 115, 142, 146, 147, 167, 168, 177, 179, 195, 197, 203, 209, 210, 213, 214, 226, 228, 232, 235, 237, 238, 240, 241, 242, 245, 259, 261, 263, 265, 272, 296, 306, 308, 311, 313, 316, 320, 321, 323, 324, 325, 331, 332, 352, 358, 359, 387, 388, 389, 403, 413, 414, 415, 426], "rand": 391, "random": [13, 99, 195, 197, 226, 228, 230, 264, 265, 323, 357, 358, 359, 371, 372, 373, 374, 377, 388, 389, 391, 395, 397, 410, 412, 414, 418, 425, 426, 429, 434], "random_campaign": 371, "random_forest": [265, 377], "random_se": [226, 230, 388, 429], "randomforestmodel": 392, "randomforestsurrog": [377, 414, 430], "randomli": [192, 371, 373, 418, 423, 426], "randomrecommend": [371, 372, 373, 374, 377, 382, 383, 384, 385, 387, 388, 389, 395, 397, 399, 414, 419, 426], "rang": [122, 123, 124, 126, 127, 129, 136, 137, 140, 275, 323, 324, 371, 379, 380, 382, 383, 384, 385, 389, 394, 397, 399, 401, 402, 403, 410, 412, 421, 427, 428, 429, 431, 434], "rank": 431, "rare": 414, "rastrigin": [379, 380, 402, 403], "rate": [153, 235, 397], "rather": [405, 413, 418, 428], "ration": 100, "ravel": [409, 410], "raw": [179, 428], "rbf": 98, "rbfkernel": 414, "rdf": 134, "rdffingerprint": 134, "rdkit": [134, 382, 384, 385, 414, 421, 425], "rdkit2ddescriptor": [134, 373, 382, 384, 385, 414], "rdkit2ddescriptorsfingerprint": 134, "rdkitfingerprint": 134, "re": [388, 402, 403, 415, 426], "reach": [285, 287, 399], "reachabl": 422, "reactant": [423, 425], "reaction": [373, 376, 412, 421, 423, 425, 432], "reactor": [419, 432], "reactora": 432, "reactorb": 432, "reactorc": 432, "read": [129, 197, 350, 373, 376, 412, 414, 415], "read_excel": [372, 373, 374, 388], "readabl": [202, 333, 341, 405, 414, 416, 417, 428], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 226, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 415, 419], "readm": [414, 415], "reagent": [421, 425], "real": [337, 412, 420, 431], "realist": 429, "realiz": [224, 429], "reason": [38, 186, 187, 188, 189, 203, 373, 402, 414, 417, 418, 419, 421, 422, 425, 429], "reassembl": 428, "rebas": 415, "rec": [382, 383, 384, 385, 399, 419, 420], "rec_finish": 419, "rec_next": 419, "rec_pend": 419, "receiv": [417, 422, 428], "recip": 415, "recipi": 417, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 65, 70, 71, 82, 127, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 224, 226, 239, 240, 291, 323, 325, 371, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 387, 388, 389, 395, 397, 399, 406, 407, 409, 410, 411, 412, 414, 415, 418, 422, 423, 425, 429, 430, 432, 433, 434], "recommendation_orig": 405, "recommendation_recr": 405, "recommended_arm_idx": 397, "recommender_with_hook": 388, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 82, 164, 166, 167, 168, 169, 174, 239, 387, 389, 414, 419], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 337, 412, 420, 422, 428], "record": [27, 291, 292, 412, 422, 432], "recreat": [252, 405, 428], "recreate_model": 392, "recurs": [164, 166, 167, 168, 169, 301, 302], "redesign": 414, "redistribut": 417, "reduc": [140, 389, 397, 409, 410, 425], "reduct": 433, "ref": 412, "refactor": 414, "refer": [224, 257, 291, 307, 323, 331, 344, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 387, 389, 391, 392, 394, 399, 402, 403, 405, 413, 414, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432], "referenc": 415, "refin": [388, 412, 414, 420], "reflect": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 389, 414, 415, 418, 421, 425], "regard": [30, 36, 379, 380, 415, 417], "regim": [414, 423], "regist": [308, 386, 388], "register_custom_architectur": 414, "register_hook": [386, 387, 388, 389, 414], "registr": 414, "regress": 259, "regressor": 391, "regret": [16, 17], "regroup": 414, "regular": [17, 269, 401, 413, 414, 419, 432], "reinstal": 412, "rel": [226, 324, 421, 424], "relat": [51, 109, 114, 116, 119, 130, 197, 215, 279, 294, 403, 409, 410, 412, 414, 420, 421, 422, 432], "relationship": [409, 410, 412, 415, 424, 432], "relative_perc": 325, "releas": [412, 414], "relev": [49, 82, 203, 228, 332, 383, 394, 414, 415, 420, 421, 432, 434], "reli": [413, 414], "reliabl": 425, "remain": [52, 169, 232, 286, 371, 377, 382, 383, 384, 385, 394, 397, 399, 403, 405, 409, 410, 417, 425, 428, 429], "remain_switch": [169, 414], "remaind": 359, "remind": 414, "remot": 415, "remov": [48, 51, 52, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 203, 394, 415, 421, 427], "renam": [373, 409, 410, 414, 415], "render": [82, 391], "reoccur": 432, "reorder": 414, "reorgan": 414, "repeat": [397, 414, 415, 419, 420], "repetit": [230, 377, 388], "rephras": 421, "replac": [402, 403, 414, 415], "replic": 428, "repo": 414, "report": [161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 397, 413], "repositori": [373, 412, 415], "repr": 391, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 102, 103, 129, 197, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 320, 334, 337, 341, 358, 371, 394, 395, 397, 406, 407, 412, 414, 417, 420, 425, 427, 429, 434], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 220, 235, 237, 238, 239, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 313, 315, 320, 323, 333, 337, 352, 382, 383, 384, 385, 391, 393, 399, 405, 414, 419, 420, 425, 428, 429, 433, 434], "reproduc": [388, 397, 414, 417, 433], "reproduct": 417, "request": [27, 70, 71, 115, 167, 168, 169, 210, 248, 289, 358, 359, 414, 419, 420], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 40, 41, 47, 69, 169, 203, 272, 308, 376, 387, 388, 391, 395, 397, 399, 402, 406, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432, 434], "rerun": 391, "reserv": [412, 415], "reset_index": 409, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 383, 385, 394, 428], "resolv": 317, "resort": [269, 415, 428, 434], "resource_track": 413, "resp": [198, 374, 403], "respect": [27, 179, 198, 226, 230, 290, 295, 323, 394, 395, 415, 420, 421, 423, 424, 428, 429, 430, 431, 434], "respons": [164, 166, 167, 168, 169, 417, 420, 426], "restart": [167, 179], "restor": 428, "restr": 17, "restrain": 425, "restrict": [197, 203, 224, 230, 232, 382, 395, 414, 429, 432, 433], "result": [8, 10, 18, 27, 140, 203, 226, 323, 330, 372, 373, 374, 376, 391, 392, 394, 395, 397, 399, 401, 409, 410, 412, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 428, 429, 432, 433, 434], "result_baselin": [409, 410], "result_fract": 410, "results_interrupt": 388, "results_uninterrupt": 388, "retain": [417, 421], "retrain": [240, 241, 430], "retriev": [197, 224, 300, 301, 302, 316, 415, 429], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 82, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 109, 110, 112, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 181, 184, 186, 187, 188, 189, 191, 192, 195, 197, 199, 200, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 217, 218, 220, 222, 223, 226, 228, 230, 232, 235, 237, 238, 239, 241, 242, 245, 248, 249, 253, 259, 261, 263, 265, 267, 268, 269, 271, 272, 275, 277, 283, 285, 286, 287, 289, 290, 291, 292, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 346, 347, 348, 350, 351, 352, 358, 359, 361, 366, 367, 368, 369, 371, 382, 388, 389, 391, 394, 397, 409, 414, 420, 421, 429, 430, 434], "return_std": 391, "reus": [169, 414], "reuse_last": 167, "reveal": [389, 395, 410], "review": 415, "revis": [414, 417], "reward": 397, "rework": 414, "rewrit": 414, "rff": 99, "rffkernel": 414, "rh": [41, 43, 44, 379, 380, 395, 421], "right": [41, 158, 331, 337, 372, 374, 383, 397, 412, 413, 415, 417, 421, 424, 425, 431], "right_df": 331, "rihana": 416, "rim": 416, "risk": [413, 417, 420], "roam": 413, "robust": [412, 432], "robustli": 269, "role": [414, 415, 420, 423, 424, 429, 431, 433], "room": [389, 420], "root": [373, 412, 415, 421], "round": [333, 379, 391, 392, 421], "roundtrip": [414, 428], "rout": 428, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 228, 291, 295, 296, 324, 330, 331, 333, 348, 372, 374, 382, 383, 384, 385, 394, 395, 399, 405, 414, 420, 427, 429], "rowei": 432, "roya": 416, "royalti": 417, "rq": 100, "rqkernel": 414, "ruff": [414, 415], "rule": [387, 414], "run": [226, 230, 372, 373, 374, 388, 389, 409, 410, 412, 413, 414, 415, 420, 428, 429, 434], "run_full_initial_data": 372, "run_impute_mod": 374, "runner": [382, 384, 385], "runtim": [344, 413], "runtimeerror": [27, 167, 387], "rv": 397, "s3": 414, "s41586": [257, 329], "safe": [414, 415, 420], "safeti": 308, "sai": 421, "said": 415, "sake": 394, "same": [51, 169, 203, 209, 228, 235, 237, 238, 241, 245, 259, 261, 263, 265, 303, 377, 388, 391, 392, 394, 397, 405, 413, 414, 419, 421, 422, 428, 429, 432], "sampl": [10, 13, 17, 40, 179, 191, 192, 195, 292, 356, 357, 358, 359, 372, 377, 382, 383, 384, 385, 397, 399, 401, 405, 410, 412, 414, 416, 423, 433], "sample_from_full_factori": [195, 414], "sample_inactive_paramet": 40, "sample_uniform": [195, 401, 414, 429], "sampler": [377, 382, 383, 384, 385, 399, 405], "samples_full_factori": [195, 414], "samples_random": [195, 414], "sampling_algorithm": [357, 418], "sampling_fract": [13, 418], "sampling_method": [13, 418], "sampling_n_point": [13, 418], "sampling_percentag": [179, 426], "satisfi": [36, 37, 38, 203, 379, 380, 394], "save": [350, 372, 374, 391, 414, 429], "savefig": [372, 374], "scalar": [114, 399, 414, 424, 428], "scale": [104, 154, 155, 156, 157, 158, 361, 399, 409, 414, 418, 424], "scalekernel": 414, "scaler": 414, "scatter": [82, 84], "scenario": [232, 371, 372, 373, 374, 388, 394, 409, 410, 419, 421, 424, 432, 433, 434], "scene": [424, 429], "schema": 420, "schembl15068049": [372, 373, 374], "scheme": 414, "scienc": [412, 416], "scientif": [414, 432], "scikit": [134, 412, 414, 416, 425], "scipi": [348, 389, 397, 414], "scope": 371, "screen": [303, 432], "script": [317, 413, 414, 422, 434], "seaborn": [371, 372, 373, 374, 388, 409, 410], "seamlessli": 428, "search": [13, 22, 27, 34, 48, 51, 61, 65, 71, 122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 207, 226, 230, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 291, 331, 332, 371, 374, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 397, 399, 400, 405, 410, 414, 416, 419, 420, 421, 422, 423, 428, 429, 433], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 82, 122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 198, 202, 203, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 371, 373, 376, 387, 388, 389, 391, 392, 394, 395, 397, 401, 405, 406, 407, 409, 411, 412, 414, 420, 421, 422, 423, 425, 427, 428, 429, 434], "searchspace1": 401, "searchspace2": 401, "searchspace3": 401, "searchspace_json": 428, "searchspacetyp": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 377, 382, 383, 384, 385, 388, 389, 399, 405, 427], "secfp": 134, "secfpfingerprint": 134, "second": [330, 346, 348, 377, 391, 392, 399, 407, 409, 421, 422, 423], "secondari": [412, 422], "section": [412, 414, 415, 417, 428], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 148, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 202, 203, 226, 230, 232, 235, 237, 238, 239, 241, 245, 248, 255, 257, 259, 261, 263, 265, 275, 277, 283, 288, 306, 312, 325, 330, 337, 361, 372, 373, 374, 379, 380, 387, 388, 392, 395, 403, 412, 415, 420, 422, 423, 424, 425, 426, 428, 429, 433], "seed": [226, 230, 354, 355, 388, 389, 397, 412, 414, 434], "seek": 399, "seem": [344, 407, 413], "seen": 418, "select": [6, 36, 37, 38, 63, 69, 164, 166, 167, 168, 169, 172, 189, 191, 235, 237, 238, 241, 245, 259, 261, 263, 265, 286, 330, 358, 377, 383, 384, 394, 395, 397, 403, 412, 414, 418, 420, 421, 423, 425, 426, 428, 430], "select_recommend": [164, 166, 167, 168, 169, 414], "self": [308, 321, 366, 367, 368, 369, 387, 388, 389, 397, 415], "sell": 417, "semant": [414, 428], "sens": [53, 308, 312, 330, 421, 425], "sent": 417, "separ": [230, 232, 269, 306, 361, 362, 389, 414, 415, 417, 428], "sequenc": [27, 41, 114, 146, 167, 168, 195, 197, 203, 204, 205, 208, 291, 295, 296, 308, 309, 318, 321, 326, 331, 332, 348, 424, 426], "sequenti": [166, 167, 168, 169, 179, 377, 382, 383, 384, 385, 399, 405, 414, 426], "sequential_continu": [179, 426], "sequential_greedy_x": 414, "sequentialgreedyrecommend": 414, "sequentialmetarecommend": [168, 426], "sequentialstrategi": 414, "seri": [27, 36, 37, 38, 48, 123, 126, 127, 129, 137, 140, 275, 277, 283, 382, 394, 414, 421], "serial": [168, 203, 220, 292, 391, 411, 413, 414, 415, 421, 426, 433], "serializ": [412, 421, 426], "serialize_datafram": 428, "serialized_df": 222, "serializetostr": 391, "serialmixin": [20, 27, 31, 36, 91, 109, 124, 150, 164, 195, 197, 203, 238, 248, 275, 277, 283, 337, 414], "serv": [232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 331, 409, 410, 420, 421, 425], "servic": 417, "session": [241, 422, 428], "set": [27, 30, 38, 40, 51, 53, 57, 58, 82, 86, 140, 161, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 226, 230, 252, 290, 323, 329, 330, 350, 354, 355, 372, 373, 374, 375, 377, 382, 384, 387, 392, 393, 394, 395, 397, 399, 403, 412, 414, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 432, 434], "set_box_aspect": 389, "set_dash": 388, "set_random_se": [389, 397, 434], "set_size_inch": [372, 374], "set_x_pend": 22, "set_xlabel": 389, "set_xtick": 389, "set_xticklabel": 389, "set_ylabel": 389, "set_ylim": 389, "set_zlabel": 389, "setpoint": 137, "setup": [226, 388, 421, 429, 434], "sever": [142, 162, 371, 373, 377, 388, 391, 397, 399, 401, 410, 412, 414, 415, 419, 421, 422, 423, 424, 425, 427, 428, 429, 432, 434], "sh": 423, "shall": [167, 325, 417, 424], "shap": [82, 412, 414, 416, 430, 433], "shap_valu": 430, "shape": [17, 195, 202, 281, 285, 287, 358, 427, 434], "shapinsight": [80, 81, 83, 84, 414, 423], "shaplei": 82, "share": [414, 417, 432], "shield": [257, 329, 373, 412, 425], "shift": [8, 18, 409], "shifted_hartmann": 409, "ship": [362, 422, 428], "shm": 413, "short": 415, "shortcut": [203, 427, 428], "shorten": [414, 415], "shot": 432, "should": [27, 49, 82, 127, 140, 169, 203, 218, 230, 280, 295, 296, 323, 325, 328, 329, 331, 333, 336, 337, 338, 346, 350, 382, 384, 388, 391, 394, 395, 403, 407, 412, 414, 415, 419, 420, 421, 427, 429, 430, 432, 434], "show": [82, 372, 373, 374, 376, 377, 382, 383, 384, 391, 392, 394, 397, 403, 405, 406, 407, 409, 410, 421, 423], "showcas": 426, "shown": [388, 397, 410, 414], "shrink": 389, "shutdown": 413, "side": [41, 286, 414], "sigma": [155, 156, 157, 158, 285, 399, 416], "signal": [60, 424], "signatur": [76, 272, 306, 308, 389, 414, 415, 421, 428], "significantli": [203, 397, 409, 410], "silenc": 415, "silent": [414, 421], "similar": [168, 413, 421, 422, 423, 425, 426, 427, 428, 432, 434], "similarli": 425, "simpl": [16, 17, 299, 373, 387, 388, 395, 412, 414, 426, 429, 431, 432], "simpler": [415, 428], "simplest": 427, "simplex": [203, 433], "simplex_paramet": [203, 394, 427], "simpli": [312, 387, 388, 415, 421, 425, 426, 427, 428, 431, 432], "simplic": 308, "simplifi": 415, "simul": [72, 325, 384, 389, 412, 414, 432, 433], "simulate_experi": [230, 232, 429], "simulate_scenario": [232, 371, 372, 373, 374, 388, 409, 410, 429], "simulate_transfer_learn": [409, 429], "simulationresult": 397, "simultan": 424, "sinc": [53, 197, 240, 308, 372, 379, 380, 392, 402, 405, 406, 407, 409, 415, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 432], "singer": 432, "singl": [17, 27, 36, 49, 82, 106, 119, 195, 197, 203, 226, 275, 277, 283, 337, 345, 352, 358, 364, 372, 373, 374, 383, 388, 394, 399, 409, 410, 412, 414, 421, 422, 423, 424, 425, 427, 432, 433], "single_lin": 352, "singledispatch": 339, "singletargetobject": [27, 275, 277, 283, 372, 373, 374, 376, 377, 382, 383, 384, 385, 388, 391, 392, 405, 406, 407, 412, 414, 430, 433], "site": [382, 384, 385, 413], "situat": [382, 384, 394, 413, 415, 419, 421, 424, 425, 428, 429, 432], "six": [394, 395], "size": [17, 89, 90, 91, 94, 96, 98, 99, 100, 167, 169, 197, 202, 203, 292, 341, 389, 391, 397, 402, 403, 409, 410, 420, 428, 429, 432, 434], "sk": 391, "skeleton": 414, "skfp": 134, "skicit": 414, "skin": 429, "skip": [200, 206, 414, 420], "skl2onnx": 391, "sklearn": [189, 344, 391, 413], "sklearnclusteringrecommend": [186, 187, 188, 414, 419], "slightli": [224, 373, 394, 429], "slot": [393, 397, 411, 414, 421], "slot1_amount": 394, "slot1_label": 394, "slot2_amount": 394, "slot2_label": 394, "slot3_amount": 394, "slot3_label": 394, "slow": [382, 384, 385, 427], "slowest": 414, "small": [293, 297, 379, 394, 409, 410, 414, 418, 425], "smaller": [27, 397, 420, 432], "smallest": [195, 427], "smart": 412, "smartli": 394, "smile": [140, 315, 317, 318, 412, 425], "smoke": 414, "smoke_test": [350, 371, 372, 373, 374, 380, 382, 383, 385, 388, 389, 397, 409, 410], "smooth": [94, 96, 158], "smoothedboxprior": 414, "smoother": 94, "sn": [371, 372, 373, 374, 388, 409, 410], "snippet": 422, "so": [27, 226, 240, 330, 374, 388, 394, 397, 402, 403, 412, 413, 421, 422, 424, 425, 426, 428, 431], "softwar": [412, 417], "sola": 416, "sole": 417, "solut": [420, 427, 428, 432], "solv": [240, 383, 384, 394, 397], "solv_rdkit2ddesc": 384, "solvent": [372, 373, 374, 376, 377, 382, 383, 384, 385, 388, 392, 394, 395, 406, 407, 412, 421, 425], "solvent1": [394, 395], "solvent2": [394, 395], "solvent3": 394, "solvent4": 394, "solvent5": 394, "solvent8": 394, "solvent9": 394, "solvent_1": 421, "solvent_2": 421, "solvent_3": 421, "solvent_data": 388, "solvent_encoding1": 421, "solvent_encoding2": 421, "solvent_mordred_enc": 421, "solvent_rdkit2dd": [382, 385], "solvent_rdkit_enc": 421, "solvent_smil": 388, "solver": 429, "some": [49, 331, 344, 372, 373, 374, 377, 382, 383, 384, 385, 388, 389, 391, 392, 394, 395, 401, 402, 403, 405, 410, 419, 421, 422, 425, 426, 428, 429, 430, 434], "someth": 407, "sometim": [421, 429], "somewhat": 422, "somewher": 420, "soon": [412, 420, 426], "sophist": [414, 428], "sort": 143, "sourabh": 416, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 109, 110, 112, 114, 115, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 181, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 217, 218, 220, 222, 223, 226, 228, 230, 232, 235, 237, 238, 239, 241, 242, 245, 247, 248, 249, 252, 253, 255, 257, 259, 261, 263, 265, 267, 268, 269, 271, 272, 275, 277, 280, 281, 283, 285, 286, 287, 289, 290, 291, 292, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 346, 347, 348, 350, 351, 352, 354, 355, 357, 358, 359, 361, 369, 412, 413, 414, 415, 417], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 65, 67, 71, 122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 170, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 206, 207, 226, 230, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 291, 331, 358, 371, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 397, 399, 400, 402, 405, 410, 411, 414, 416, 419, 420, 421, 422, 423, 425, 428, 429, 433], "span": [122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 291, 387, 397, 401, 423], "speak": 432, "spec": [200, 206, 217], "special": [169, 412, 413, 417, 418, 432, 434], "specif": [87, 142, 148, 189, 197, 200, 213, 230, 269, 300, 387, 388, 402, 412, 415, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 75, 86, 129, 140, 142, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 216, 217, 226, 228, 230, 239, 285, 286, 287, 295, 307, 316, 323, 326, 332, 358, 359, 373, 377, 379, 391, 392, 397, 399, 409, 412, 413, 414, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432], "speed": [203, 382, 384, 385, 409, 410, 422, 427], "speed_fast": 427, "speed_norm": 427, "speed_slow": 427, "speedup": 432, "spell": 415, "spellcheck": 414, "sphinx": [414, 415], "split": [171, 419], "sporad": 414, "spread": 431, "sqrt": 421, "squar": [397, 421], "squash": 415, "stabil": [414, 422], "stabl": [87, 148, 288], "stage": [420, 421, 428], "stand": 414, "standard": [6, 269, 391, 414, 425], "star": 394, "start": [226, 371, 387, 388, 389, 395, 397, 413, 414, 419, 425, 426, 428, 429, 432], "startup": 414, "stat": [289, 389, 395, 397], "state": [164, 166, 167, 168, 169, 388, 394, 414, 417, 420], "stateless": [397, 414], "statement": [333, 402, 412, 417], "static": [197, 203, 245, 412, 415, 432], "statist": [292, 410, 412, 422], "statu": 420, "std_threshold": 269, "stem": [413, 432], "step": [200, 206, 226, 394, 397, 412, 415, 420, 424, 428, 430], "sterl": 416, "steven": 373, "still": [142, 203, 323, 388, 397, 419, 421, 422, 423, 425, 432, 434], "stop": [386, 411, 414, 415], "stop_on_pi": 388, "stoppag": 417, "storag": [420, 422, 428], "store": [22, 124, 269, 275, 389, 394, 397, 412, 414, 420, 434], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 177, 179, 186, 187, 188, 189, 195, 197, 202, 203, 216, 220, 230, 232, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 278, 283, 285, 286, 287, 289, 292, 295, 296, 300, 306, 307, 313, 315, 317, 318, 320, 323, 326, 328, 329, 333, 337, 341, 347, 350, 351, 352, 392, 397, 406, 407, 409, 410], "straightforward": [431, 432], "strategi": [13, 179, 197, 224, 371, 397, 414], "stream": [304, 422], "streamingsequentialmetarecommend": [167, 426], "streamingsequentialstrategi": 414, "streamlin": 415, "streamlit": [412, 414], "streibel": 416, "strict": 306, "strictli": [392, 406, 407], "stride": 379, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 139, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 313, 317, 318, 320, 321, 328, 337, 352, 391, 405, 414, 420, 421, 425, 431, 433], "strip": [226, 374, 419], "strong": 414, "strongli": 420, "strtobool": [414, 422], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 112, 216, 412, 413, 414, 415, 416, 420, 425, 428], "studi": [162, 412, 423, 426, 433], "style": [106, 409, 414, 415], "sub": [189, 414, 423, 428], "subclass": [75, 216, 300, 302, 312, 377, 414, 415, 426, 428], "subfold": 422, "subgraph": 425, "subgroup": 395, "subject": 417, "sublicens": 417, "submiss": [414, 417], "submit": [22, 289, 291, 412, 415, 417], "subpackag": [414, 415, 429], "subselectioncondit": [383, 384, 414, 433], "subsequ": [169, 197, 203, 230, 317, 417, 420, 428, 430], "subset": [27, 109, 114, 119, 140, 197, 303, 332, 358, 420, 421], "subspac": [22, 171, 179, 194, 195, 197, 199, 201, 203, 379, 382, 383, 384, 385, 399, 401, 403, 405, 414, 426, 428, 433, 434], "subspace_json": 428, "subspacecontinu": [27, 122, 136, 197, 199, 401, 414, 427], "subspacediscret": [27, 123, 126, 127, 129, 137, 140, 197, 199, 202, 382, 383, 384, 385, 394, 399, 405, 414, 427, 428, 434], "substanc": [134, 140, 316, 373, 376, 382, 384, 385, 395, 414, 421, 423, 425, 432], "substance_12": 421, "substance_3": 421, "substance_43": 421, "substance_data": 414, "substance_encod": 373, "substanceencod": [140, 316, 318, 382, 383, 384, 385, 414, 425], "substanceparamet": [372, 373, 374, 376, 377, 382, 383, 384, 385, 388, 392, 394, 406, 407, 412, 414, 421, 422, 423, 427, 433], "substanti": [140, 434], "substrat": 432, "subtyp": 428, "success": [277, 358, 397, 428], "success_valu": 277, "suffic": 415, "suffici": [388, 427, 428], "suggest": [423, 429], "suit": 415, "suitabl": [189, 203, 226, 313, 415, 418, 420, 425, 429, 430, 432], "sum": [55, 102, 203, 371, 381, 382, 383, 384, 388, 394, 395, 397, 411, 421, 424, 427], "sum_": [421, 424], "sum_constraint": 394, "sum_constraint_1": 385, "sum_constraint_2": 385, "sum_toler": 394, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 275, 277, 283], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 275, 277, 283, 414, 415], "superior": 418, "supersed": 417, "support": [10, 80, 81, 82, 83, 84, 168, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 344, 377, 382, 383, 384, 385, 388, 389, 391, 394, 399, 405, 414, 415, 416, 417, 421, 423, 425, 426, 427, 429, 430], "supports_transfer_learn": [235, 237, 238, 241, 245, 259, 261, 263, 265, 430], "suppos": [291, 421], "sure": [394, 401, 412, 415], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 66, 82, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 177, 179, 186, 187, 188, 189, 235, 237, 239, 241, 245, 247, 248, 252, 255, 257, 259, 261, 263, 265, 382, 383, 384, 385, 389, 397, 399, 405, 411, 412, 414, 416, 421, 423, 425, 426, 432, 433], "surrogate_model": [177, 179, 377, 389, 391, 392, 397, 406, 407, 414], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 82, 177, 179, 238, 414], "svg": 350, "sw": 383, "swiss": 416, "switch": [49, 165, 168, 169, 269, 377, 382, 383, 384, 385, 397, 399, 405, 412, 414, 421, 426], "switch1": 383, "switch2": 383, "switch2_left": 383, "switch2_right": 383, "switch_1": 421, "switch_2": 421, "switch_aft": [169, 406, 407, 426], "switzerland": 416, "sy": 413, "symmetri": 421, "syntax": [412, 414], "synthet": [379, 380, 389, 409, 410], "system": [373, 397, 412, 413, 417, 422, 429, 432], "t": [267, 268, 305, 313, 372, 373, 374, 376, 377, 384, 389, 409, 410, 428, 429], "t1": [428, 429], "t2": 428, "t3": 428, "t_1": 424, "t_2": 424, "t_3": 424, "t_i": 424, "tabl": [333, 414, 421, 423], "tabular": 429, "tag": [412, 414, 428], "tailor": 420, "take": [45, 94, 123, 137, 142, 235, 237, 238, 241, 245, 255, 259, 261, 263, 265, 278, 387, 394, 414, 419, 420, 421, 424, 425, 426, 432], "taken": [167, 388, 414, 420, 424], "tantamount": 418, "target": [27, 67, 106, 109, 110, 114, 118, 119, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 203, 224, 226, 227, 228, 235, 237, 238, 241, 245, 259, 261, 263, 265, 269, 277, 280, 281, 283, 308, 323, 326, 332, 346, 347, 353, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 388, 389, 391, 392, 397, 402, 403, 405, 406, 407, 409, 410, 411, 412, 414, 419, 420, 422, 423, 428, 429, 430, 433], "target_1": [383, 384, 385, 399, 424, 431], "target_2": [399, 424, 431], "target_3": [399, 424], "target_3a": 431, "target_3b": 431, "target_cumbest": [371, 409, 410], "target_max": 420, "target_transform": 399, "targetmod": [283, 428, 431], "targetnam": 226, "targettransform": [283, 414, 431], "task": [127, 197, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 275, 277, 283, 397, 414, 420, 426, 428, 429, 432], "task_idx": [197, 414], "task_param": [409, 410, 429], "task_paramet": 428, "task_parameter_json": 428, "task_parameter_reconstruct": 428, "taskparamet": [210, 409, 410, 414, 428, 429, 433], "tb": 434, "technic": [203, 419, 429, 432], "techniqu": [189, 426], "technologi": 416, "telemetri": [414, 416, 433], "tell": 290, "temp": [382, 384, 416], "temp_c": [372, 373, 374, 388], "temperatur": [372, 374, 376, 377, 382, 384, 387, 391, 392, 405, 421, 425, 427, 432], "temperature_resolut": 382, "temperature_valu": 388, "temporari": [105, 111, 180, 197, 355, 388, 414, 422, 428], "temporarili": [414, 434], "temporary_se": 434, "tempt": 432, "tenac": 414, "tend": 389, "tensor": [22, 41, 235, 267, 268, 326, 334, 337, 361, 363, 409, 414], "term": [97, 224, 388, 397, 415, 417, 420, 423, 427, 428, 429, 432], "termin": [388, 389, 413, 417], "terminologi": 433, "tert": [372, 373, 374, 376, 377], "test": [203, 226, 241, 323, 397, 409, 410, 412, 413, 414, 415, 420, 423, 429, 434], "test_funct": [379, 380, 389, 402, 403, 409, 410], "test_scenario": [372, 374], "testabl": [72, 226], "testfunct": [379, 380, 402, 403], "testfunctionclass": [379, 380, 402, 403], "text": [30, 351, 391, 417, 421, 422, 424], "th": [296, 421], "than": [27, 58, 71, 137, 167, 168, 169, 195, 197, 210, 296, 312, 352, 359, 373, 384, 388, 395, 418, 421, 422, 423, 425, 428], "thei": [142, 162, 172, 286, 328, 332, 377, 385, 388, 394, 397, 401, 414, 415, 419, 420, 421, 423, 425, 426, 427, 428, 431, 432, 434], "them": [34, 255, 324, 350, 377, 412, 413, 414, 415, 419, 421, 422, 423, 425, 426, 428, 432], "theme": [350, 414], "theori": 417, "therebi": 203, "therefor": [169, 235, 237, 238, 241, 245, 259, 261, 263, 265, 377, 413, 420, 428, 432], "therein": 414, "thereof": 417, "thf": 421, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 224, 228, 230, 232, 235, 237, 238, 239, 240, 241, 245, 255, 259, 261, 263, 265, 269, 292, 295, 308, 309, 312, 317, 323, 325, 327, 329, 331, 333, 350, 371, 387, 388, 389, 391, 392, 394, 395, 397, 401, 405, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434], "think": [397, 425], "third": [399, 417, 429], "thompson": [17, 416], "thomson": 17, "those": [142, 169, 171, 224, 358, 377, 413, 417, 421, 429], "though": 432, "three": [373, 394, 395, 399, 412, 420, 421, 423, 424, 426, 427, 432], "threshold": [38, 129, 140, 169, 269, 329, 379, 384, 385, 388, 394, 414, 421, 425], "thresholdcondit": [54, 55, 379, 384, 385, 394, 433], "through": [27, 197, 285, 295, 323, 332, 392, 394, 397, 399, 412, 414, 415, 417, 421, 428, 429, 433], "throughout": 169, "throw": [317, 421, 425], "thrown": [228, 374, 388, 406, 413, 424], "thu": [179, 308, 332, 372, 373, 379, 380, 382, 383, 384, 385, 391, 392, 394, 397, 399, 402, 403, 405, 413, 415, 420, 422, 425, 426, 428, 429, 432, 434], "tick": 389, "time": [10, 179, 292, 359, 380, 387, 394, 397, 412, 414, 419, 420, 421, 425, 428, 429, 434], "timeout": [414, 422], "timer": 387, "titl": 417, "tl": 409, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 388, 389, 414], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 337], "to_factori": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104], "to_fram": 371, "to_gpytorch": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 150, 152, 153, 154, 155, 156, 157, 158, 414], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 275, 277, 283, 337, 391, 392, 405, 420, 428], "to_keep": 330, "to_ndarrai": 337, "to_object": [275, 277, 283, 371, 379, 380, 389, 397, 402, 403, 409, 410, 424, 429], "to_polar": [36, 37, 38], "to_searchspac": [122, 123, 124, 126, 127, 129, 136, 137, 140, 195, 203, 397, 401, 414], "to_subspac": [122, 123, 126, 127, 129, 136, 137, 140, 414], "to_tensor": [337, 388, 389, 391, 414], "to_tupl": 337, "togeth": [34, 62, 296, 377, 397, 403, 412, 414], "toggl": 27, "toggle_discrete_candid": [27, 414], "toler": [27, 38, 137, 203, 291, 331, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 388, 391, 392, 394, 399, 402, 403, 405, 406, 407, 412, 414, 421, 425], "tolist": 379, "toluen": 425, "toml": 414, "too": [379, 429, 432], "tool": [314, 414, 428], "toolbox": 412, "top": [414, 415], "topic": 420, "topolog": 425, "topologicaltors": 134, "topologicaltorsionfingerprint": 134, "torch": [326, 337, 388, 389, 391, 409, 414], "toronto": 416, "tort": 417, "total": [168, 169, 358, 394, 395, 397, 427], "total_bas": 395, "total_phase_ag": 395, "toward": [8, 18, 152, 323, 421], "tox": [382, 384, 385, 412, 414, 415], "tracebackexcept": 413, "track": [161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 203, 388, 417], "trade": [8, 18, 417], "trademark": 417, "tradit": [373, 393, 394, 411, 412, 414], "train": [68, 82, 161, 167, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 232, 235, 237, 238, 239, 240, 241, 245, 259, 261, 263, 265, 269, 390, 409, 410, 414, 429], "train_i": 391, "train_x": 391, "training_funct": 410, "trajectori": [224, 371, 388, 397, 429], "transfer": [231, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 377, 382, 383, 384, 385, 399, 405, 409, 411, 412, 414, 417, 425, 430, 433], "transform": [27, 68, 109, 114, 119, 123, 124, 126, 127, 129, 137, 140, 195, 197, 203, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 275, 277, 281, 283, 318, 326, 332, 337, 338, 361, 382, 383, 384, 385, 405, 414, 417, 422, 425, 430, 431], "transform_rep_exp2comp": 414, "transit": 414, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 414, 417, 425], "transmiss": 428, "transmit": 292, "travers": 414, "treasur": 433, "treat": [140, 373, 412, 421, 425, 431, 434], "tree": 414, "tremend": 373, "trend": 432, "tri": 427, "triangl": 287, "triangular": [281, 287, 399, 431], "tricki": 423, "tricyclohexylphosphin": [372, 373, 374], "trigger": [167, 295, 388, 392, 397, 414, 415, 419, 424, 428], "trivial": [248, 261, 424, 425], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 203, 245, 277, 286, 291, 301, 302, 306, 312, 313, 330, 331, 352, 373, 377, 379, 380, 382, 383, 384, 385, 389, 391, 392, 394, 397, 399, 402, 403, 405, 406, 407, 409, 410, 414, 420, 421, 422, 423, 425, 428], "truncat": [412, 422], "trust": [391, 422], "truth": 313, "truthi": 422, "try": [323, 372, 373, 374, 388, 391, 392, 407, 413, 414, 434], "tune": 412, "tupl": [27, 37, 41, 89, 90, 91, 94, 96, 98, 99, 100, 102, 103, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 143, 195, 197, 202, 203, 268, 295, 306, 309, 321, 323, 334, 337, 341, 361], "turn": [195, 203, 341, 401, 412, 413, 414, 421, 422], "turnaround": 429, "twice": 424, "two": [30, 51, 57, 58, 115, 169, 179, 224, 296, 299, 326, 346, 358, 371, 372, 374, 377, 387, 394, 397, 399, 403, 409, 410, 412, 414, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431], "twofold": 397, "twophasemetarecommend": [372, 374, 377, 382, 383, 384, 385, 388, 389, 391, 392, 397, 399, 403, 405, 406, 407, 412, 414, 426], "twophasestrategi": 414, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 110, 112, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 139, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 181, 184, 186, 187, 188, 189, 191, 192, 195, 197, 198, 199, 200, 203, 204, 205, 206, 208, 209, 210, 213, 214, 216, 217, 218, 220, 222, 223, 226, 228, 230, 232, 235, 237, 238, 239, 241, 242, 245, 248, 249, 253, 259, 261, 263, 265, 267, 268, 269, 271, 272, 275, 277, 278, 283, 285, 286, 287, 289, 290, 291, 292, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337, 338, 339, 341, 343, 344, 346, 347, 348, 350, 351, 352, 358, 359, 361, 363, 366, 367, 368, 369, 373, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 405, 406, 407, 412, 414, 415, 417, 418, 421, 423, 424, 425, 426, 427, 432, 433], "typealia": 278, "typeerror": [27, 82, 86, 226, 241, 308, 323, 324, 359, 388, 389], "typeguard": 305, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 169, 195, 197, 203, 208, 216, 217, 220, 235, 237, 238, 241, 245, 248, 259, 261, 263, 265, 268, 275, 277, 283, 302, 303, 304, 305, 321, 326, 332, 337], "typic": [13, 308, 352, 373, 412, 419, 420, 423, 425, 428, 434], "typing_extens": 415, "typo": [414, 415], "u": [17, 371, 372, 373, 374, 387, 389, 394, 395, 397, 401, 410, 412, 418, 421, 424], "ucb": [8, 377, 414, 418, 428], "ultim": 415, "ultra": [406, 407], "un": 414, "unabl": 391, "unavail": 414, "unawar": 419, "unbound": [337, 387], "uncaught": 414, "uncertainti": [13, 377, 433], "uncharacter": 432, "uncorrel": [329, 432], "undefin": 235, "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 292, 332, 385, 389, 397, 412, 413, 417, 419, 425], "underflow": 73, "underli": [27, 51, 388, 397, 412, 420, 423, 426, 428], "underscor": 414, "understand": [412, 432], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 421, 425, 434], "undo": 413, "unequ": 385, "unevenli": 425, "unfinish": 419, "unfortun": 432, "unhandl": 414, "uniform": [195, 235, 324, 325, 414], "uniformli": 358, "uniniti": 312, "uninstal": [74, 412], "unintend": [77, 308, 414, 415], "unintention": 434, "union": [115, 226, 230, 285, 286, 287, 347, 403, 417, 427], "uniqu": [52, 142, 394, 414, 425], "unit": [202, 341], "unknown": [168, 358, 371, 397, 414, 430, 432], "unlabel": 326, "unless": [412, 415, 417, 422, 425, 428], "unlik": [12, 14, 394, 434], "unlock": 433, "unmaintain": 414, "unmatch": 306, "unmatchedattributeerror": 306, "unmeasur": [226, 374], "unnecessari": [414, 420], "unpromis": 388, "unreach": 414, "unrealist": 429, "unrecogn": 323, "unrestrict": 308, "unsaf": 414, "unspecifi": [414, 428], "unsqueez": [388, 389], "unstructur": [218, 428], "unstructure_bas": 216, "unsupport": [195, 228], "until": [164, 166, 167, 168, 169, 226, 397, 412, 429], "untouch": 324, "untransform": [27, 430], "unusedobjectwarn": [388, 414], "unveil": 410, "unwant": 34, "up": [27, 203, 226, 228, 371, 372, 373, 374, 375, 382, 384, 387, 389, 393, 394, 395, 403, 409, 410, 412, 413, 414, 418, 421, 434], "updat": [27, 373, 376, 414, 415, 419], "upgrad": 414, "upon": [171, 248, 413, 414, 415, 421, 427, 430, 432], "upper": [8, 18, 158, 197, 203, 285, 286, 287, 337, 377, 389, 399, 409, 410, 414, 431, 434], "upper_bound": [382, 383, 384, 385, 405, 427], "upperconfidencebound": [418, 428], "upstream": 415, "urg": 423, "url": [422, 432], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 65, 82, 94, 114, 115, 129, 134, 137, 140, 142, 161, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 195, 197, 203, 204, 205, 217, 226, 228, 230, 235, 237, 238, 241, 242, 245, 259, 261, 263, 265, 281, 291, 292, 298, 308, 309, 317, 318, 323, 325, 326, 331, 339, 343, 344, 350, 358, 363, 371, 379, 380, 386, 387, 388, 389, 390, 393, 394, 395, 401, 405, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 432, 433, 434], "usa": 416, "usabl": [312, 413, 414, 425, 428], "usag": [340, 412, 414, 421, 422, 426, 433], "use_comp_rep": [82, 86, 423], "use_torch": [326, 379, 380, 389, 402, 403, 409, 410], "user": [48, 49, 60, 69, 77, 129, 132, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 272, 289, 325, 331, 376, 377, 382, 399, 407, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432], "userguid": 288, "usernam": [289, 414, 422], "userwarn": 413, "uses_shap_explain": 82, "usort": 414, "usr": 134, "usrcat": 134, "usrcatfingerprint": 134, "usrfingerprint": 134, "usual": [226, 372, 373, 374, 406, 413, 423, 425], "util": [179, 195, 203, 291, 298, 299, 337, 357, 361, 371, 373, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 397, 399, 402, 403, 409, 410, 412, 414, 418, 419, 423, 424, 425, 426, 428, 429, 430, 432, 433], "uv": 414, "v": 432, "val": [45, 112, 313, 409], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 142, 197, 200, 203, 206, 241, 331, 382, 404, 406, 411, 413, 414, 415, 420, 421, 429], "validate_compat": 241, "validate_config": [27, 407, 414, 420], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 67, 82, 93, 94, 95, 96, 97, 98, 99, 100, 104, 109, 114, 115, 119, 123, 126, 127, 129, 131, 132, 134, 137, 140, 142, 145, 146, 147, 169, 186, 187, 188, 189, 195, 197, 203, 204, 205, 224, 226, 228, 230, 235, 237, 238, 241, 245, 259, 261, 263, 265, 277, 278, 280, 285, 286, 287, 292, 295, 303, 306, 313, 320, 323, 324, 325, 328, 331, 332, 333, 337, 339, 346, 347, 348, 366, 367, 368, 369, 372, 373, 374, 376, 377, 379, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 397, 399, 402, 403, 405, 406, 407, 409, 410, 412, 414, 415, 418, 420, 421, 422, 423, 424, 425, 431, 432, 433, 434], "valuabl": [426, 429], "valueerror": [13, 27, 57, 58, 82, 86, 115, 142, 146, 147, 195, 197, 203, 209, 226, 228, 235, 237, 238, 241, 245, 259, 261, 263, 265, 272, 296, 306, 311, 313, 316, 320, 323, 325, 331, 332, 352, 358, 359, 392, 403, 413], "var": [397, 433], "vari": [27, 203, 373, 424], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 235, 237, 238, 241, 245, 259, 261, 263, 265, 275, 290, 292, 345, 350, 364, 402, 412, 414, 415, 421, 425, 426, 428], "varianc": [8, 13, 18, 93, 261, 327, 414, 418], "variance_initial_valu": 93, "variance_prior": 93, "variant": [377, 409, 423, 432], "varieti": [402, 415, 428, 429], "variou": [337, 394, 400, 414, 419, 423, 426, 429], "varucb": 414, "vector": [30, 391, 416], "vendor": 425, "verbal": 417, "verbos": [392, 414], "veri": [382, 384, 399, 419, 422, 423, 425, 434], "verifi": [312, 379, 382, 383, 384, 385, 394, 395, 401, 403, 405, 412, 415], "versa": [409, 432], "versatil": 426, "version": [197, 289, 344, 382, 384, 385, 394, 397, 401, 409, 410, 412, 413, 414, 415, 417, 428], "vert": 389, "via": [13, 17, 26, 27, 82, 169, 179, 191, 235, 237, 238, 239, 241, 245, 259, 261, 263, 265, 291, 300, 308, 323, 330, 331, 374, 380, 387, 388, 391, 401, 412, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 431, 432, 433], "via_init": 428, "via_json": 428, "viabl": [71, 399], "vice": [409, 432], "view": [195, 203, 389, 427], "view_init": 389, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 389, "virtual": 415, "visibl": 414, "visual": [373, 409, 410, 423, 431], "volum": 432, "vpn": [412, 422], "vsa": 134, "vsafingerprint": 134, "vulner": [414, 415], "w_i": 424, "wa": [13, 63, 66, 67, 74, 77, 142, 169, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 320, 323, 359, 373, 413, 414, 415, 417, 422, 423, 425, 428, 432], "wai": [197, 387, 394, 395, 400, 401, 409, 412, 419, 422, 423, 425, 427, 428, 429, 431, 432, 434], "wall": 10, "want": [48, 377, 382, 394, 397, 403, 410, 412, 415, 421, 422, 423, 425, 426, 428, 431], "warn": [59, 309, 382, 384, 385, 388, 402, 403, 414, 415], "warranti": [412, 417], "watch": 387, "water": [382, 383, 384, 385, 394, 421, 425], "we": [22, 224, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434], "web": 415, "weber": 416, "weight": [106, 114, 115, 348, 399, 424, 428], "weight_kdalton": 425, "welcom": 415, "well": [289, 350, 377, 388, 393, 415, 420, 421, 423, 425, 429], "were": [171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 323, 374, 377, 410, 413, 414, 419, 421, 422, 425, 427], "what": [142, 167, 197, 224, 323, 361, 371, 391, 399, 407, 415, 418, 420, 423, 425, 432, 433], "whatsnew": 299, "when": [27, 49, 137, 167, 168, 169, 177, 179, 197, 203, 235, 237, 238, 241, 242, 245, 259, 261, 263, 265, 272, 306, 308, 312, 323, 326, 352, 359, 377, 382, 383, 385, 387, 392, 394, 395, 397, 399, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 434], "whenev": [22, 167, 323, 428], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 161, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 224, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 295, 323, 358, 372, 373, 374, 377, 382, 384, 394, 397, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432], "wherea": 428, "wherev": [417, 419], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 86, 122, 123, 124, 126, 127, 129, 136, 137, 140, 179, 195, 203, 235, 237, 238, 241, 245, 259, 261, 263, 265, 290, 325, 331, 337, 394, 414, 417, 420, 422, 426, 431], "which": [13, 27, 36, 37, 38, 77, 82, 109, 114, 119, 127, 142, 161, 162, 164, 166, 167, 168, 169, 171, 174, 177, 179, 184, 186, 187, 188, 189, 191, 192, 197, 203, 230, 232, 235, 237, 238, 241, 245, 259, 261, 263, 265, 269, 291, 292, 308, 312, 323, 325, 329, 331, 333, 346, 347, 350, 361, 371, 373, 377, 380, 387, 388, 394, 395, 397, 401, 402, 403, 407, 409, 410, 412, 413, 414, 415, 417, 418, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 434], "while": [197, 200, 206, 388, 397, 399, 410, 413, 417, 418, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432], "whilst": 323, "whim": 134, "whimfingerprint": 134, "whole": 417, "whom": 417, "whose": [115, 142, 197, 228, 303, 306, 326, 371, 387, 394, 419, 429], "wide": 429, "wider": 431, "width": 333, "wieczorek": 416, "william": 432, "willing": 420, "win": [235, 397], "win_rat": 397, "window": [414, 422], "winerror": 413, "wise": 348, "wish": 428, "within": [27, 122, 123, 124, 126, 127, 129, 136, 137, 140, 291, 331, 401, 417, 421, 422, 425, 430, 432, 433, 434], "without": [168, 409, 410, 412, 414, 417, 419, 420, 421, 422, 425, 429, 432, 434], "work": [22, 266, 295, 326, 382, 384, 385, 388, 399, 405, 407, 412, 414, 415, 416, 417, 421, 422, 424, 426, 428, 429], "workaround": [413, 414], "workflow": [391, 412, 420, 426, 428, 433], "world": [412, 420], "worldwid": 417, "worst": [226, 228, 230, 374], "would": [52, 73, 142, 224, 226, 232, 240, 387, 394, 397, 412, 415, 419, 421, 422, 423, 425, 426, 427, 428, 429, 432, 434], "wrap": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 245, 249, 267, 268, 308, 412, 414, 424], "wrapper": [1, 21, 230, 232, 241, 309, 409, 410, 412, 426], "write": [412, 413, 417, 428], "written": [402, 403, 415, 417], "wrong": [407, 414], "wrongli": 413, "www": [412, 417], "x": [22, 110, 199, 226, 228, 249, 305, 309, 321, 334, 346, 361, 371, 372, 373, 374, 382, 383, 384, 385, 388, 389, 394, 399, 405, 409, 410, 412, 414, 427, 430], "x0": 427, "x1": 427, "x2": 427, "x_": [371, 379, 380, 401, 402, 403], "x_1": [379, 380, 401, 402, 403, 421], "x_2": [379, 380, 401, 402, 403, 421], "x_3": [379, 380, 401, 402, 403, 421], "x_4": [379, 380, 401, 402, 403], "x_5": 403, "x_6": 403, "x_i": 421, "x_pend": 22, "xlsx": [372, 373, 374, 388], "xpho": [372, 373, 374], "xxxx": 413, "xylen": [372, 373, 374, 376, 377], "y": [257, 313, 329, 346, 371, 372, 373, 374, 388, 389, 391, 394, 409, 410, 412, 432], "ye": 313, "year": 432, "yet": [22, 414, 419, 426], "yield": [6, 94, 372, 373, 374, 376, 377, 382, 388, 391, 392, 394, 403, 405, 406, 407, 412, 414, 418, 423, 424, 428], "yield_cumbest": [372, 373, 374, 388], "yml": 414, "you": [27, 48, 373, 377, 379, 387, 392, 394, 397, 402, 403, 406, 412, 413, 415, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434], "your": [373, 387, 394, 397, 403, 412, 413, 414, 415, 417, 420, 422, 423, 425, 428, 429, 430, 431, 432, 434], "your_branch_nam": 415, "yourself": 397, "z": [389, 412], "zdir": 389, "zero": [8, 18, 152, 327, 394, 397, 432], "zip": [388, 389], "\u00b5fmt": 414, "\u0161o\u0161i\u0107": [412, 416]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 415, "0": 414, "01": 414, "02": 414, "03": 414, "04": 414, "05": 414, "06": 414, "07": 414, "08": 414, "09": 414, "1": 414, "10": 414, "11": 414, "12": 414, "13": 414, "14": 414, "15": 414, "16": 414, "17": 414, "19": 414, "2": 414, "2022": 414, "2023": 414, "2024": 414, "21": 414, "23": 414, "24": 414, "27": 414, "28": 414, "29": 414, "3": 414, "4": 414, "5": 414, "6": 414, "7": 414, "8": 414, "9": 414, "A": 412, "On": 423, "The": [397, 406, 412, 428, 429, 432], "abbrevi": 428, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 377, 419], "acquisitionfunct": 20, "action": 432, "activ": 418, "ad": [376, 414, 419, 420, 432, 434], "add_fake_measur": 323, "add_noise_to_perturb_degenerate_row": 324, "add_parameter_nois": 325, "addendum": 399, "addit": [394, 426], "additivekernel": 102, "advanc": [412, 430], "altern": 428, "amount": 394, "an": 397, "arm": [396, 397], "arm64": 413, "arrai": 429, "arrays_to_datafram": 326, "assembli": 428, "asynchron": 419, "attr": 415, "augment": [294, 295, 296], "automat": 428, "avail": [377, 430], "avx": 413, "back": 412, "backtest": [370, 409], "bandit": [234, 396, 397], "base": [19, 29, 88, 108, 110, 121, 149, 160, 163, 173, 176, 183, 236, 274, 372, 373, 374, 379, 380, 394, 395, 403, 429], "basesequentialmetarecommend": 166, "basic": [92, 151, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 375, 376, 420, 422, 423, 428], "basickernel": 89, "batch": 420, "batchify_ensemble_predictor": 267, "batchify_mean_var_predict": 268, "batteri": 412, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 101, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 118, 120, 121, 125, 128, 130, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 159, 160, 162, 163, 165, 170, 172, 173, 175, 176, 178, 180, 181, 182, 183, 185, 190, 193, 194, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 240, 242, 243, 244, 246, 249, 250, 251, 253, 254, 256, 258, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 376, 412, 415], "bayesian": [175, 176, 178, 180, 181, 412, 426], "bayesianlinearsurrog": 259, "bayesianrecommend": 177, "bell_transform": 285, "bernoulli": 397, "betabernoullimultiarmedbanditsurrog": 235, "betaprior": 152, "binari": [276, 278], "binarytarget": 277, "black": [371, 397], "block_deserialization_hook": 213, "block_serialization_hook": 214, "bo": 423, "boolean": [310, 311, 312, 313], "both": 405, "botorch": [178, 402], "botorchrecommend": 179, "bound": [387, 424, 427], "box": [371, 397], "break": 414, "build": [397, 427], "bytes_to_human_read": 341, "cach": [420, 422], "callabl": [379, 380, 403, 429], "campaign": [26, 27, 371, 372, 373, 374, 377, 379, 380, 382, 383, 385, 388, 391, 392, 399, 402, 403, 405, 406, 420], "cardinalityconstraint": 30, "case": 397, "catch_constant_target": 269, "categor": 125, "categoricalencod": 131, "categoricalparamet": [126, 425], "chang": 414, "changelog": 414, "check_if_in": 311, "chemic": 412, "chemistri": [314, 315, 316, 317, 318], "choicevalu": 278, "class": 415, "classproperti": 299, "clone": 412, "closer_el": 346, "closest_el": 347, "cluster": [185, 426], "code": 415, "columntransform": 361, "compar": 405, "compon": 387, "composit": 101, "compositekernel": 90, "comput": 423, "condit": [35, 36, 421], "config": [406, 407, 420], "configur": [391, 392, 406, 428], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 378, 379, 380, 381, 382, 383, 384, 385, 394, 395, 421, 427, 434], "construct": [372, 373, 374, 379, 380, 394, 402, 403, 424, 427], "constructor": [427, 428], "continu": [39, 194, 378, 380, 394, 401, 418, 421, 425, 427, 432, 434], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 421], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 122, "contribut": 415, "contributor": 416, "conveni": 424, "convent": 415, "convers": [319, 320, 321, 424, 428], "convert": [215, 391], "convert_acqf": 24, "convert_bound": 338, "copi": 428, "core": [196, 199, 200, 212, 213, 214, 215, 216, 217, 218, 225, 226, 244, 251, 253], "cpu": 413, "creat": [371, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 391, 392, 399, 401, 402, 405, 406, 409, 410, 420, 427], "create_example_plot": 350, "creation": [372, 373, 374, 394, 395, 420, 434], "current": 430, "custom": [128, 240, 242, 371, 382, 386, 387, 390, 391, 392, 430], "customdiscreteparamet": [129, 425], "customencod": 132, "customonnxsurrog": 241, "data": [372, 373, 374, 427, 432], "datafram": [322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 379, 380, 403, 427, 428, 429], "de": [405, 428], "default": [254, 427, 428], "defaultkernelfactori": 255, "defin": [371, 379, 380, 387, 388, 389, 399, 402, 403, 407, 409, 410, 412], "definit": 388, "depend": [383, 412, 425], "deprec": [42, 43, 44, 45, 111, 112, 414], "deprecationerror": 60, "descript": 399, "deseri": 428, "deserialize_datafram": 222, "design": [412, 415], "desir": [113, 115], "desirabilityobject": [114, 424], "develop": 415, "df_apply_dependency_augment": 295, "df_apply_permutation_augment": 296, "df_drop_single_value_column": 327, "df_drop_string_column": 328, "df_uncorrelated_featur": 329, "dictionari": [406, 407], "differ": 377, "dimens": 403, "discret": [46, 201, 204, 205, 206, 381, 382, 383, 384, 394, 402, 421, 425, 426, 427], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 421], "discretedependenciesconstraint": [49, 421], "discreteexcludeconstraint": [50, 421], "discretelinkedparametersconstraint": [51, 421], "discretenolabelduplicatesconstraint": [52, 421], "discreteparamet": 123, "discretepermutationinvarianceconstraint": [53, 421], "discreteproductconstraint": [54, 421], "discretesamplingmethod": 357, "discretesumconstraint": [55, 421], "discuss": 397, "disk": 422, "do": 429, "docstr": 415, "document": 392, "dtypefloatnumpi": 343, "dtypefloatonnx": 344, "dtypefloattorch": 363, "dummi": 298, "duplic": 394, "dure": 434, "edbo": 256, "edbokernelfactori": 257, "effici": 434, "emptysearchspaceerror": 61, "encod": 425, "end": 412, "enum": [116, 130, 279], "environ": 422, "equival": 428, "estim": 434, "exampl": [372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 391, 392, 399, 402, 403, 405, 406, 407, 411, 412, 423], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "exceptiongroup": 413, "exclus": [384, 385], "expect": 432, "expectedimprov": 3, "experi": [382, 383, 384, 385, 391, 392, 399, 405, 412, 419, 429], "experiment": [420, 422, 423], "expir": 414, "explain": [80, 423], "explicit": 427, "extend": 415, "extract": 430, "fake": 434, "farthest_point_sampl": 358, "featur": 422, "field": 428, "file": [406, 407], "filter_df": 330, "find_subclass": 300, "finite_float": 366, "fix": [413, 414], "float": 422, "fpsrecommend": 191, "fraction_to_float": 320, "from": [406, 412, 414, 420, 427, 428], "full": [372, 373, 374, 427], "function": [371, 372, 373, 374, 377, 379, 380, 388, 399, 402, 403, 415, 419], "further": 420, "fuzzy_row_match": 331, "gammaprior": 153, "gaussian_process": [243, 244, 246, 249, 250, 251, 253, 254, 256], "gaussianmixtureclusteringrecommend": 186, "gaussianprocesspreset": 252, "gaussianprocesssurrog": 245, "gener": [409, 410, 415, 426], "geom_mean": 348, "get": [376, 420], "get_base_structure_hook": 216, "get_baseclass": 301, "get_canonical_smil": 315, "get_fingerprint_class": 316, "get_model_params_valid": 271, "get_parameters_from_datafram": 142, "get_subclass": 302, "get_transform_object": 332, "get_transform_paramet": 208, "get_user_detail": 289, "github": 412, "global": 418, "group_duplicate_valu": 303, "guid": 433, "halfcauchyprior": 154, "halfnormalprior": 155, "hilberts_factori": 304, "hook": [386, 387, 388, 389], "hybrid": [379, 403, 421], "imaginari": 397, "implicit": 424, "import": [371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 387, 389, 391, 392, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 409, 410, 423], "improv": 389, "includ": 412, "inclus": 372, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatibleexplainererror": 64, "incompatiblesearchspaceerror": 65, "incomplet": 374, "incorpor": 385, "indent": 351, "independentgaussiansurrog": 237, "index": 412, "indic": 412, "infiniteintervalerror": 336, "influenc": 434, "inform": [420, 426], "initi": [372, 377], "insight": [78, 79, 80, 81, 83, 84, 85, 86, 423], "instal": [412, 413], "instanc": 387, "instead": [391, 392], "instruct": 422, "internet": 422, "interpret": 423, "interrupt": 388, "interv": [335, 336, 337, 338, 339], "invalidsurrogatemodelerror": 66, "invalidtargetvalueerror": 67, "invari": 394, "invok": 428, "irrelev": 432, "is_abstract": 312, "is_all_inst": 305, "is_en": 290, "is_shap_explain": 85, "issu": [412, 413], "iter": [379, 380, 391, 392, 399], "json": [420, 428], "kernel": [87, 88, 91, 92, 101], "kernel_factori": [246, 249], "kernelfactori": 247, "kmeansclusteringrecommend": 187, "known": [412, 413], "leak": 413, "learn": [408, 410, 418, 429, 432], "licens": [412, 417], "limit": [423, 430, 431], "linear": [258, 380], "linear_transform": 286, "linearkernel": 93, "link": 392, "local": [412, 418], "logexpectedimprov": 4, "lognormalprior": 156, "look_up_target": 228, "lookup": [227, 228, 372, 373, 374, 379, 380, 388, 403, 409, 410, 429], "loop": [371, 372, 373, 374, 409, 410, 412], "maco": 413, "maintain": [412, 416], "make_explainer_for_surrog": 86, "make_gp_from_preset": 253, "mandatori": 424, "manual": [382, 383, 384, 385], "mark": 419, "match": 431, "match_attribut": 306, "maternkernel": 94, "max": 431, "mean": 429, "meanpredictionsurrog": 261, "measur": [376, 391, 392, 420, 434], "mechan": [372, 373, 374, 429], "memori": [340, 341, 434], "memorys": 202, "meta": [162, 163, 165, 426], "metarecommend": 164, "method": [387, 415, 418], "min": 431, "miss": 429, "mixin": 219, "mixtur": [393, 394, 395], "mode": [399, 431], "model": [377, 391, 392, 394, 395, 397, 423, 430], "modelnottrainederror": 68, "monitor": 389, "monkeypatch": [387, 388, 389], "multi": [396, 397, 398, 399], "multipl": 429, "naiv": [170, 260], "naivehybridspacerecommend": 171, "name": 425, "name_to_smil": 317, "necessari": [372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 391, 392, 399, 402, 403, 405, 406, 407], "nest": 428, "ngboost": 262, "ngboostsurrog": 263, "nois": 434, "nomcacquisitionfunctionerror": 69, "non_inf_float": 367, "non_nan_float": 368, "non_shap_explain": 81, "none": 429, "nonpredict": [182, 183, 185, 190], "nonpredictiverecommend": 184, "nonstring_to_tupl": 321, "norecommenderslefterror": 70, "normalprior": 157, "notenoughpointslefterror": 71, "nothingtosimulateerror": 72, "numer": [135, 282, 342, 343, 344, 345, 346, 347, 348], "numericalcontinuousparamet": [136, 425], "numericaldiscreteparamet": [137, 425], "numericaltarget": [283, 431], "numericalunderflowerror": 73, "object": [105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 399, 402, 405, 409, 410, 412, 424, 428], "onli": 422, "onnx": 391, "optim": [371, 409, 410, 412, 420, 434], "option": [412, 425, 426], "optionalimporterror": 74, "order": [394, 422], "other": 377, "output": [391, 392], "overrid": 415, "packag": [412, 422], "page": 423, "pamclusteringrecommend": 188, "parallel": 420, "paramet": [120, 121, 124, 125, 128, 130, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 372, 373, 374, 377, 392, 394, 395, 420, 423, 425, 427, 434], "parameter_cartesian_prod_panda": 204, "parameter_cartesian_prod_polar": 205, "parameterencod": 133, "partial": [21, 419], "partialacquisitionfunct": 22, "pass": 392, "pend": 419, "perform": [372, 399, 402, 403], "periodickernel": 95, "permut": 394, "piecewisepolynomialkernel": 96, "plainkernelfactori": 248, "plot": [349, 350, 351, 352, 371, 388, 389, 423], "point": 422, "polar": [413, 422], "polynomialkernel": 97, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 391, "precis": 422, "preset": [250, 251, 253, 254, 256], "pretrain": 391, "pretty_print_df": 333, "print": [382, 383, 385, 399], "prior": [148, 149, 150, 151], "probabilityofimprov": 7, "probabl": 389, "problem": [371, 388, 413], "product": [385, 427], "productkernel": 103, "pull": 415, "pure": [172, 173, 175, 176, 178, 180, 181, 182, 183, 185, 190, 418, 426], "purerecommend": 174, "pycharm": 413, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 412, "qupperconfidencebound": 18, "random": [353, 354, 355], "random_forest": 264, "randomforestsurrog": 265, "randomrecommend": 192, "rbfkernel": 98, "recommend": [159, 160, 162, 163, 165, 170, 172, 173, 175, 176, 178, 180, 181, 182, 183, 185, 190, 376, 377, 391, 392, 402, 403, 405, 419, 420, 426], "recommenderprotocol": 161, "reduct": 418, "refers_to": 307, "regist": 387, "register_custom_architectur": 242, "register_hook": 308, "relat": 413, "remov": 414, "represent": [394, 395, 423, 427], "reproduc": 434, "request": 415, "restrict": 427, "result": [371, 388, 389, 419], "rffkernel": 99, "role": 432, "row": 422, "rqkernel": 100, "run": [371, 379, 380, 397], "sampl": [190, 418, 426], "sample_numerical_df": 359, "sampling_algorithm": [356, 358, 359], "scalar": [115, 117, 430], "scale": 360, "scalekernel": 104, "scenario": [229, 230, 429], "scope": 422, "search": [394, 395, 401, 409, 412, 418, 426, 427, 434], "searchspac": [193, 194, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 372, 374, 377, 379, 380, 382, 383, 384, 385, 399, 400, 402, 403, 410], "searchspacetyp": 198, "see": 432, "select_constructor_hook": 217, "semaphor": 413, "sequenti": [165, 420], "sequential_greedi": [180, 181], "sequentialgreedyrecommend": 181, "sequentialmetarecommend": 167, "serial": [211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 404, 405, 420, 428], "serialize_datafram": 223, "serialmixin": 220, "set": [371, 388, 389, 401, 409, 410], "set_random_se": 354, "setup": [376, 382, 383, 384, 385, 391, 392, 394, 395, 397, 399, 405], "shap": [79, 80, 81, 83, 84, 85, 86, 423], "shap_explain": 83, "shap_plot": 84, "shapinsight": 82, "signatur": 387, "simplex": [394, 427], "simul": [224, 225, 226, 227, 228, 229, 230, 231, 232, 371, 372, 373, 374, 388, 397, 409, 410, 429], "simulate_experi": 226, "simulate_scenario": 230, "simulate_transfer_learn": 232, "singl": [118, 429], "singletargetobject": [119, 424], "sklearnclusteringrecommend": 189, "slot": [394, 395], "smile": 139, "smiles_to_fingerprint_featur": 318, "smoothedboxprior": 158, "some": [379, 380, 399], "sort_paramet": 143, "space": [394, 395, 401, 403, 409, 412, 418, 426, 427, 434], "span": 394, "stage": 391, "start": 412, "stop": 388, "str_to_acqf": 25, "strategi": [377, 412], "streamingsequentialmetarecommend": 168, "string": [406, 428], "strtobool": 313, "structure_constraint": 45, "structure_object": 112, "studi": 430, "sub": 418, "subselectioncondit": [37, 421], "subspac": 427, "subspacecontinu": 195, "subspacediscret": 203, "substanc": [138, 139, 394, 412], "substanceencod": 134, "substanceparamet": [140, 425], "suggest": 413, "suitabl": 377, "sum": 385, "support": [413, 419], "surrog": [233, 234, 236, 238, 240, 242, 243, 244, 246, 249, 250, 251, 253, 254, 256, 258, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 377, 390, 391, 392, 430], "surrogateprotocol": 239, "synchron": 415, "synthet": [402, 403], "tabl": [372, 373, 374, 409, 410, 412], "target": [273, 274, 275, 276, 278, 279, 282, 284, 285, 286, 287, 387, 398, 399, 424, 431, 434], "targetmod": 280, "targettransform": 281, "task": [409, 410], "taskparamet": [127, 425, 432], "technologi": 432, "telemetri": [288, 289, 290, 291, 292, 412, 422], "telemetry_record_recommended_measurement_percentag": 291, "telemetry_record_valu": 292, "temporary_se": 355, "terminologi": [394, 428, 429, 432], "test": [379, 380, 402, 403], "theoret": 394, "thi": [372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 399, 402, 403, 423], "thresholdcondit": [38, 421], "through": 432, "to_kernel_factori": 249, "to_object": 110, "to_searchspac": 199, "to_str": 352, "to_tensor": 334, "to_tupl": 309, "toler": 420, "tool": 415, "torch": [362, 363, 364, 413], "tradit": 395, "train": 391, "transfer": [408, 410, 429, 432], "transfer_learn": [231, 232], "transform": [284, 285, 286, 287, 399], "treasur": 432, "triangular_transform": 287, "trigger": [387, 389], "two": 407, "twophasemetarecommend": 169, "type": 428, "uncertainti": 418, "unidentifiedsubclasserror": 75, "uninstal": 422, "uninterrupt": 388, "unlock": 432, "unmatchedattributeerror": 76, "unreleas": 414, "unstructure_bas": 218, "unusedobjectwarn": 77, "upperconfidencebound": 8, "us": [372, 373, 374, 376, 377, 382, 383, 384, 385, 391, 392, 397, 399, 402, 403, 427, 428, 429, 430], "usag": 423, "use_fallback_constructor_hook": 339, "user": 433, "util": [23, 24, 25, 141, 142, 143, 221, 222, 223, 266, 267, 268, 269, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 434], "v": [387, 394, 413, 420], "valid": [56, 57, 58, 144, 145, 146, 147, 207, 208, 209, 210, 270, 271, 272, 365, 366, 367, 368, 369, 392, 407], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 272, "validate_decorrel": 145, "validate_is_finit": 146, "validate_not_nan": 369, "validate_paramet": 210, "validate_parameter_nam": 209, "validate_searchspace_from_config": 200, "validate_simplex_subspace_from_config": 206, "validate_unique_valu": 147, "valu": [427, 428, 429], "variabl": 422, "varname_numpy_use_single_precis": 345, "varname_torch_use_single_precis": 364, "verif": [382, 383, 384, 385, 394, 395, 407], "verifi": 380, "via": 423, "we": 429, "what": 429, "window": 413, "within": 427, "without": 413, "workflow": [415, 419], "wrap": [379, 380, 403], "write": 415}})
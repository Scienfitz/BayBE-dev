Search.setIndex({"alltitles": {"Acquisition function": [[376, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[417, null]], "Added": [[413, "added"], [413, "id4"], [413, "id8"], [413, "id14"], [413, "id21"], [413, "id30"], [413, "id36"], [413, "id40"], [413, "id47"], [413, "id52"], [413, "id58"], [413, "id64"], [413, "id68"], [413, "id72"], [413, "id76"], [413, "id81"], [413, "id85"], [413, "id88"], [413, "id92"], [413, "id96"], [413, "id100"], [413, "id103"], [413, "id107"], [413, "id111"], [413, "id115"], [413, "id119"], [413, "id125"], [413, "id128"]], "Addendum: Description of transformation functions": [[398, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[433, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[431, null]], "Adding Partial Results": [[418, "adding-partial-results"]], "Adding measurements": [[419, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[425, null]], "AdditiveKernel": [[102, null]], "Advanced Example: Chemical Substances": [[411, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[396, "an-imaginary-use-case"]], "Array-Based Callables": [[428, null]], "Asynchronous Workflows": [[418, null]], "Automatic field conversion": [[427, "automatic-field-conversion"]], "Available Models": [[429, "available-models"]], "Available recommenders suitable for initial recommendation": [[376, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[376, "available-surrogate-models"]], "Backtesting": [[369, null], [408, null]], "Basic Instructions": [[421, "basic-instructions"]], "Basic Usage": [[422, "basic-usage"]], "Basic creation": [[419, "basic-creation"]], "Basic example for using BayBE": [[375, null]], "Basic string assembly": [[427, "basic-string-assembly"]], "BasicKernel": [[89, null]], "Basics": [[374, null], [419, "basics"]], "Batch optimization": [[419, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[411, null]], "Bayesian Recommenders": [[425, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[258, null]], "BayesianRecommender": [[176, null]], "Bernoulli Multi Armed Bandit": [[396, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[234, null]], "BetaPrior": [[152, null]], "BinaryTarget": [[276, null]], "BotorchRecommender": [[178, null]], "Bound methods": [[386, "bound-methods"]], "Breaking Changes": [[413, "breaking-changes"], [413, "id13"], [413, "id20"]], "Building from the Product of Parameter Values": [[426, "building-from-the-product-of-parameter-values"], [426, "id2"]], "Building the Model": [[396, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[412, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[419, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[387, null]], "Campaigns": [[419, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[131, null]], "CategoricalParameter": [[126, null], [424, "categoricalparameter"]], "Changed": [[413, "changed"], [413, "id5"], [413, "id9"], [413, "id15"], [413, "id22"], [413, "id27"], [413, "id31"], [413, "id37"], [413, "id41"], [413, "id44"], [413, "id48"], [413, "id53"], [413, "id59"], [413, "id65"], [413, "id69"], [413, "id73"], [413, "id77"], [413, "id82"], [413, "id86"], [413, "id89"], [413, "id93"], [413, "id97"], [413, "id101"], [413, "id104"], [413, "id108"], [413, "id112"], [413, "id116"], [413, "id120"]], "Changelog": [[413, null]], "Clustering Recommenders": [[425, "clustering-recommenders"]], "Code Design": [[414, "code-design"]], "ColumnTransformer": [[360, null]], "Comparing recommendations in both objects": [[404, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[90, null]], "Condition": [[36, null]], "Conditions": [[420, "conditions"]], "Constraint": [[31, null]], "Constraint Setup": [[393, "constraint-setup"]], "Constraints": [[420, null]], "Constraints Continuous": [[377, null]], "Constraints Discrete": [[380, null]], "Constraints Setup": [[394, "constraints-setup"]], "Construct the campaign and run some iterations": [[378, "construct-the-campaign-and-run-some-iterations"], [379, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[426, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[371, "constructing-campaigns-for-the-simulation-loop"], [372, "constructing-campaigns-for-the-simulation-loop"], [373, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[426, "constructing-from-a-dataframe"], [426, "id1"], [426, "id3"]], "Constructing hybrid recommenders": [[402, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[401, "constructing-the-campaign-and-performing-a-recommendation"], [402, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[402, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[420, "continuous-constraints"]], "Continuous Parameters": [[424, "continuous-parameters"]], "Continuous Subspaces": [[426, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [420, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[122, null]], "Contributing to BayBE": [[414, null]], "Contributors": [[415, null], [415, "id1"]], "Convenience construction and implicit conversion": [[423, null]], "Conventions for attrs classes": [[414, "conventions-for-attrs-classes"]], "Convert model to onnx": [[390, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[390, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[391, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[390, "create-campaign"]], "Creating Continuous Search Spaces": [[400, null]], "Creating a Simplex-Bound Discrete Subspace": [[426, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[419, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[405, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[381, "creating-and-printing-the-campaign"], [382, "creating-and-printing-the-campaign"], [384, "creating-and-printing-the-campaign"], [398, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[370, "creating-the-campaigns"]], "Creating the Objective": [[372, "creating-the-objective"]], "Creating the Optimization Objective": [[408, "creating-the-optimization-objective"], [409, "creating-the-optimization-objective"]], "Creating the Search Space": [[408, "creating-the-search-space"]], "Creating the Searchspace": [[409, "creating-the-searchspace"]], "Creating the campaign": [[376, "creating-the-campaign"], [391, "creating-the-campaign"], [404, "creating-the-campaign"]], "Creating the constraint": [[381, "creating-the-constraint"], [383, "creating-the-constraint"]], "Creating the constraints": [[382, "creating-the-constraints"], [384, "creating-the-constraints"]], "Creating the objective": [[398, "creating-the-objective"]], "Creating the recommender object": [[376, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[371, "creating-the-searchspace-and-the-objective"], [373, "creating-the-searchspace-and-the-objective"], [378, "creating-the-searchspace-and-the-objective"], [379, "creating-the-searchspace-and-the-objective"], [381, "creating-the-searchspace-and-the-objective"], [382, "creating-the-searchspace-and-the-objective"], [383, "creating-the-searchspace-and-the-objective"], [384, "creating-the-searchspace-and-the-objective"], [401, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[419, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[429, null]], "Custom Hooks": [[385, null]], "Custom Surrogates": [[389, null]], "CustomDiscreteParameter": [[129, null], [424, "customdiscreteparameter"]], "CustomEncoding": [[132, null]], "CustomONNXSurrogate": [[240, null]], "Dataframe deserialization": [[427, "dataframe-deserialization"]], "DefaultKernelFactory": [[254, null]], "Defining config dictionaries": [[406, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[387, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[388, "defining-the-hook"]], "Defining the Hooks": [[386, "defining-the-hooks"]], "Defining the Optimization Objective": [[411, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[370, "defining-the-optimization-problem"]], "Defining the Search Space": [[411, "defining-the-search-space"]], "Defining the Tasks": [[408, "defining-the-tasks"], [409, "defining-the-tasks"]], "Defining the targets": [[398, "defining-the-targets"]], "Defining the test function": [[378, "defining-the-test-function"], [379, "defining-the-test-function"], [401, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[402, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[413, "deprecations"], [413, "id11"], [413, "id18"], [413, "id25"], [413, "id34"], [413, "id50"], [413, "id56"], [413, "id62"], [413, "id79"]], "Deserialization from configuration strings": [[427, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[114, null], [423, "desirabilityobjective"]], "Developer Tools": [[414, "developer-tools"]], "Discrete Constraints": [[420, "discrete-constraints"]], "Discrete Parameters": [[424, "discrete-parameters"]], "Discrete Subspaces": [[426, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[393, null]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [420, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [420, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [420, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [420, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [420, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[123, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [420, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[356, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[420, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[396, "discussion"]], "Disk Caching": [[421, "disk-caching"]], "Dummy": [[297, null]], "Duplicate Substances": [[393, "duplicate-substances"]], "EDBOKernelFactory": [[256, null]], "EXPERIMENTAL: Floating Point Precision": [[421, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[433, null]], "Environment Variables": [[421, null]], "Equivalent copies": [[427, null]], "Estimation with Constraints": [[433, null]], "Example Searchspace and objective parameters": [[376, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[378, null]], "Example for creating campaigns from configs": [[405, null]], "Example for custom parameter passing in surrogate models": [[391, null]], "Example for full simulation loop using a table-based lookup mechanism": [[372, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[373, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[371, null]], "Example for linear constraints in a continuous searchspace": [[379, null]], "Example for surrogate model with a custom pretrained model": [[390, null]], "Example for the serialization of a campaign": [[404, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[401, null]], "Example for using custom constraints in discrete searchspaces": [[381, null]], "Example for using dependency constraints in discrete searchspaces": [[382, null]], "Example for using different strategies": [[376, null]], "Example for using exclusion constraints in discrete searchspaces": [[383, null]], "Example for using exclusion constraints incorporating sums and products": [[384, null]], "Example for using synthetic test functions in hybrid spaces": [[402, null]], "Example for using the multi target mode for the objective": [[398, null]], "Example for validation of a config file": [[406, null]], "Examples": [[410, null]], "Examples On This Page": [[422, null]], "Expectations": [[431, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[390, "experiment-setup"], [391, "experiment-setup"]], "Experiment setup": [[381, "experiment-setup"], [382, "experiment-setup"], [383, "experiment-setup"], [384, "experiment-setup"], [404, "experiment-setup"]], "Experiment setup and creating the searchspace": [[398, "experiment-setup-and-creating-the-searchspace"]], "Experimental Representation Limits": [[422, null]], "Experimental and Computational Representations": [[422, "experimental-and-computational-representations"]], "Experimental feature only!": [[421, null]], "Expired Deprecations (from 0.6.*)": [[413, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[413, "expired-deprecations-from-0-7"]], "Explainers": [[422, "explainers"]], "Extending BayBE\u2019s Functionality": [[414, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[429, "extracting-the-model-for-advanced-study"]], "FPSRecommender": [[190, null]], "Fixed": [[413, "fixed"], [413, "id2"], [413, "id6"], [413, "id10"], [413, "id16"], [413, "id24"], [413, "id28"], [413, "id33"], [413, "id38"], [413, "id42"], [413, "id49"], [413, "id54"], [413, "id60"], [413, "id66"], [413, "id74"], [413, "id78"], [413, "id83"], [413, "id90"], [413, "id94"], [413, "id98"], [413, "id105"], [413, "id109"], [413, "id113"], [413, "id117"], [413, "id121"], [413, "id123"], [413, "id126"]], "From GitHub": [[411, "from-github"]], "From Local Clone": [[411, "from-local-clone"]], "From Package Index": [[411, "from-package-index"]], "From the Default Constructor": [[426, "from-the-default-constructor"]], "Further information": [[419, "further-information"]], "GammaPrior": [[153, null]], "GaussianMixtureClusteringRecommender": [[185, null]], "GaussianProcessPreset": [[251, null]], "GaussianProcessSurrogate": [[244, null]], "General Information": [[425, "general-information"]], "General Workflow": [[414, "general-workflow"]], "Generating Lookup Tables": [[408, "generating-lookup-tables"], [409, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[375, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[419, "getting-recommendations"]], "Global Uncertainty Reduction": [[417, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[154, null]], "HalfNormalPrior": [[155, null]], "Hook instance vs. target instance": [[386, null]], "Hybrid constraints": [[420, null]], "Imports": [[370, "imports"], [386, "imports"], [388, "imports"], [393, "imports"], [394, "imports"], [396, "imports"], [400, "imports"], [408, "imports"], [409, "imports"]], "Inclusion of initial data": [[371, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[236, null]], "Indices and Tables": [[411, "indices-and-tables"]], "Influence of Continuous Parameters": [[433, null]], "Insights": [[422, null]], "Installation Related Issues": [[412, "installation-related-issues"]], "Interval": [[336, null]], "Invoking alternative constructors": [[427, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[390, "iterate-with-recommendations-and-measurements"], [391, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[427, "json-de-serialization"]], "KMeansClusteringRecommender": [[186, null]], "Kernel": [[91, null]], "KernelFactory": [[246, null]], "Known Issues": [[412, null]], "License": [[416, null]], "Limitations": [[430, "limitations"]], "LinearKernel": [[93, null]], "Links for documentation": [[391, "links-for-documentation"]], "Local Uncertainty Reduction": [[417, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[156, null]], "Lookup functionality and data creation": [[371, "lookup-functionality-and-data-creation"], [372, "lookup-functionality-and-data-creation"], [373, "lookup-functionality-and-data-creation"]], "MATCH mode": [[430, "match-mode"]], "MIN and MAX mode": [[430, "min-and-max-mode"]], "Maintainers": [[415, "maintainers"]], "Mandatory target bounds": [[423, null]], "Manual verification of the constraint": [[381, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[382, "manual-verification-of-the-constraints"], [383, "manual-verification-of-the-constraints"], [384, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[418, "marking-experiments-as-pending"]], "MaternKernel": [[94, null]], "MeanPredictionSurrogate": [[260, null]], "Memory During Optimization": [[433, null]], "MemorySize": [[201, null]], "Meta Recommenders": [[425, "meta-recommenders"]], "MetaRecommender": [[164, null]], "Method overrides": [[414, "method-overrides"]], "Missing Lookup Values": [[428, null]], "Mixtures": [[392, null]], "Model Interpretation in BO": [[422, null]], "Model Outputs": [[390, "model-outputs"], [391, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[393, null]], "Modeling a Mixture in Traditional Representation": [[394, null]], "Monitoring the Probability of Improvement": [[388, null]], "Monkeypatching": [[386, "monkeypatching"], [387, null], [388, "monkeypatching"]], "Multi Target": [[397, null]], "Multi-Armed Bandit": [[395, null]], "NGBoostSurrogate": [[262, null]], "NaiveHybridSpaceRecommender": [[170, null]], "Necessary imports": [[390, "necessary-imports"], [391, "necessary-imports"], [404, "necessary-imports"], [405, "necessary-imports"], [406, "necessary-imports"]], "Necessary imports for this example": [[371, "necessary-imports-for-this-example"], [372, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [375, "necessary-imports-for-this-example"], [376, "necessary-imports-for-this-example"], [378, "necessary-imports-for-this-example"], [379, "necessary-imports-for-this-example"], [381, "necessary-imports-for-this-example"], [382, "necessary-imports-for-this-example"], [383, "necessary-imports-for-this-example"], [384, "necessary-imports-for-this-example"], [398, "necessary-imports-for-this-example"], [401, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"]], "Nesting objects": [[427, "nesting-objects"]], "NonPredictiveRecommender": [[183, null]], "NormalPrior": [[157, null]], "NumericalContinuousParameter": [[136, null], [424, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[137, null], [424, "numericaldiscreteparameter"]], "NumericalTarget": [[282, null], [430, "numericaltarget"]], "Objective": [[109, null], [423, null]], "Optimizing a Custom Black-Box Function": [[370, null]], "Optional Dependencies": [[411, "optional-dependencies"]], "Optional dependency": [[424, null]], "Optional: Defining the Optimization Strategy": [[411, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[393, null]], "Other parameters": [[376, "other-parameters"]], "PAMClusteringRecommender": [[187, null]], "Parameter": [[124, null]], "Parameter Importance via SHAP": [[422, "parameter-importance-via-shap"]], "Parameter Setup": [[393, "parameter-setup"], [394, "parameter-setup"]], "Parameter encoding": [[424, null]], "Parameter names": [[424, null]], "Parameter tolerances": [[419, null]], "ParameterEncoding": [[133, null]], "Parameters": [[424, null]], "Parameters for a full simulation loop": [[371, "parameters-for-a-full-simulation-loop"], [372, "parameters-for-a-full-simulation-loop"], [373, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[398, "performing-some-iterations"]], "Performing the simulation loop": [[371, "performing-the-simulation-loop"]], "PeriodicKernel": [[95, null]], "Permutation Invariance": [[393, "permutation-invariance"]], "PiecewisePolynomialKernel": [[96, null]], "PlainKernelFactory": [[247, null]], "Plots": [[422, "plots"]], "Plotting the Results": [[370, "plotting-the-results"], [387, "plotting-the-results"], [388, "plotting-the-results"]], "Polars": [[421, "polars"]], "PolynomialKernel": [[97, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[150, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[387, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[103, null]], "Pure Recommenders": [[425, "pure-recommenders"]], "PureRecommender": [[173, null]], "Purely Continuous Search Spaces": [[417, null]], "PyCharm vs. exceptiongroup": [[412, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[98, null]], "RFFKernel": [[99, null]], "RQKernel": [[100, null]], "RandomForestSurrogate": [[264, null]], "RandomRecommender": [[191, null]], "RecommenderProtocol": [[161, null]], "Recommenders": [[425, null]], "Registering Custom Hooks": [[386, null]], "Removed": [[413, "removed"], [413, "id17"], [413, "id23"], [413, "id32"], [413, "id45"], [413, "id55"], [413, "id61"], [413, "id70"]], "Representation of Data within Discrete Subspaces": [[426, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[433, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[426, "restricting-search-spaces-using-constraints"]], "Running the Simulation": [[396, "running-the-simulation"]], "Running the Simulation Loop": [[370, "running-the-simulation-loop"]], "SHAPInsight": [[82, null]], "SKLearnClusteringRecommender": [[188, null]], "Sampling Recommenders": [[425, "sampling-recommenders"]], "Scalarizer": [[117, null]], "ScaleKernel": [[104, null]], "Search Space Creation": [[393, "search-space-creation"], [394, "search-space-creation"]], "Search Space Memory Estimation": [[433, "search-space-memory-estimation"]], "Search Spaces": [[426, null]], "SearchSpace": [[196, null]], "SearchSpaceType": [[197, null]], "Searchspaces": [[399, null]], "Seeing Transfer Learning in Action": [[431, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[419, null]], "SequentialMetaRecommender": [[166, null]], "SerialMixin": [[219, null]], "Serialization": [[403, null], [419, "serialization"], [427, null]], "Serialization and de-serialization": [[404, "serialization-and-de-serialization"]], "Settings": [[370, "settings"], [387, "settings"], [388, "settings"], [400, "settings"], [408, "settings"], [409, "settings"]], "Setup": [[375, "setup"], [396, "setup"]], "Signature components": [[386, null]], "Simplex Construction": [[393, null]], "Simulating Multiple Scenarios": [[428, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[428, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[428, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[387, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[387, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[428, null]], "Simulation Loop": [[408, "simulation-loop"], [409, "simulation-loop"]], "SingleTargetObjective": [[119, null], [423, "singletargetobjective"]], "Slot-based Representation": [[394, null]], "SmoothedBoxPrior": [[158, null]], "StreamingSequentialMetaRecommender": [[167, null]], "Sub-Sampling Method": [[417, null]], "SubSelectionCondition": [[37, null], [420, "subselectioncondition"]], "SubspaceContinuous": [[194, null]], "SubspaceDiscrete": [[202, null]], "Substance Amounts": [[393, "substance-amounts"]], "SubstanceEncoding": [[134, null]], "SubstanceParameter": [[140, null], [424, "substanceparameter"]], "Suggested Fix": [[412, null], [412, null], [412, null], [412, null]], "Supported Acquisition Functions": [[418, null]], "Supported Recommenders": [[418, null]], "Surrogate": [[237, null]], "SurrogateProtocol": [[238, null]], "Surrogates": [[429, null]], "Synchronizing Pull Requests": [[414, "synchronizing-pull-requests"]], "Target": [[274, null]], "TargetMode": [[279, null]], "TargetTransformation": [[280, null]], "Targets": [[430, null]], "TaskParameter": [[127, null], [424, "taskparameter"]], "Technology": [[431, null]], "Telemetry": [[421, "telemetry"]], "Telemetry Scope": [[421, null]], "Terminology": [[393, "terminology"], [427, null], [431, null]], "Terminology Continued": [[431, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[428, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[396, "the-black-box-model"]], "The Lookup Mechanism": [[428, "the-lookup-mechanism"]], "The Optimization Loop": [[411, "the-optimization-loop"]], "The Role of the TaskParameter": [[431, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[405, "the-configuration-dictionary-as-a-string"]], "The type field": [[427, "the-type-field"]], "Theoretical Span": [[393, null]], "ThresholdCondition": [[38, null], [420, "thresholdcondition"]], "Transfer Learning": [[407, null], [409, null], [431, null]], "Triggering the Hook": [[388, "triggering-the-hook"]], "Triggering the Hooks": [[386, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[168, null]], "Uninstalling Internet Packages": [[421, null]], "Unlocking Data Treasures Through Transfer Learning": [[431, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[432, null]], "Using Custom Models": [[429, "using-custom-models"]], "Using Explicit Bounds": [[426, "using-explicit-bounds"]], "Using None": [[428, "using-none"]], "Using a Callable": [[428, "using-a-callable"]], "Using a Dataframe": [[428, "using-a-dataframe"]], "Using abbreviations": [[427, "using-abbreviations"]], "Using configuration instead": [[390, "using-configuration-instead"], [391, "using-configuration-instead"]], "Using default values": [[427, "using-default-values"]], "Utilities": [[433, null]], "Validation of model parameters": [[391, "validation-of-model-parameters"]], "Verification of Constraints": [[393, "verification-of-constraints"], [394, "verification-of-constraints"]], "Verification of Span": [[393, "verification-of-span"]], "Verification of the two dictionaries": [[406, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[379, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[412, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[378, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [379, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [402, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[414, "writing-docstrings"]], "Writing classes": [[414, "writing-classes"]], "[0.1.0] - 2022-10-01": [[413, "id127"]], "[0.10.0] - 2024-08-02": [[413, "id19"]], "[0.11.0] - 2024-09-09": [[413, "id12"]], "[0.11.1] - 2024-10-01": [[413, "id7"]], "[0.11.2] - 2024-10-11": [[413, "id3"]], "[0.11.3] - 2024-11-06": [[413, "id1"]], "[0.2.0] - 2022-11-10": [[413, "id124"]], "[0.2.1] - 2022-12-01": [[413, "id122"]], "[0.2.2] - 2023-01-13": [[413, "id118"]], "[0.2.3] - 2023-03-14": [[413, "id114"]], "[0.2.4] - 2023-03-24": [[413, "id110"]], "[0.3.0] - 2023-06-27": [[413, "id106"]], "[0.3.1] - 2023-07-17": [[413, "id102"]], "[0.3.2] - 2023-07-24": [[413, "id99"]], "[0.4.0] - 2023-08-16": [[413, "id95"]], "[0.4.1] - 2023-08-23": [[413, "id91"]], "[0.4.2] - 2023-08-29": [[413, "id87"]], "[0.5.0] - 2023-09-15": [[413, "id84"]], "[0.5.1] - 2023-10-19": [[413, "id80"]], "[0.6.0] - 2023-11-17": [[413, "id75"]], "[0.6.1] - 2023-11-27": [[413, "id71"]], "[0.7.0] - 2023-12-04": [[413, "id67"]], "[0.7.1] - 2023-12-07": [[413, "id63"]], "[0.7.2] - 2024-01-24": [[413, "id57"]], "[0.7.3] - 2024-02-09": [[413, "id51"]], "[0.7.4] - 2024-02-28": [[413, "id46"]], "[0.8.0] - 2024-02-29": [[413, "id43"]], "[0.8.1] - 2024-03-11": [[413, "id39"]], "[0.8.2] - 2024-03-27": [[413, "id35"]], "[0.9.0] - 2024-05-21": [[413, "id29"]], "[0.9.1] - 2024-06-04": [[413, "id26"]], "[Unreleased]": [[413, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleExplainerError": [[64, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, null]], "baybe.exceptions.InvalidSurrogateModelError": [[66, null]], "baybe.exceptions.InvalidTargetValueError": [[67, null]], "baybe.exceptions.ModelNotTrainedError": [[68, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, null]], "baybe.exceptions.NoRecommendersLeftError": [[70, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, null]], "baybe.exceptions.NothingToSimulateError": [[72, null]], "baybe.exceptions.NumericalUnderflowError": [[73, null]], "baybe.exceptions.OptionalImportError": [[74, null]], "baybe.exceptions.UnidentifiedSubclassError": [[75, null]], "baybe.exceptions.UnmatchedAttributeError": [[76, null]], "baybe.exceptions.UnusedObjectWarning": [[77, null]], "baybe.insights": [[78, null]], "baybe.insights.shap": [[79, null]], "baybe.insights.shap.EXPLAINERS": [[80, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[81, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[83, null]], "baybe.insights.shap.SHAP_PLOTS": [[84, null]], "baybe.insights.shap.is_shap_explainer": [[85, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[86, null]], "baybe.kernels": [[87, null]], "baybe.kernels.base": [[88, null]], "baybe.kernels.basic": [[92, null]], "baybe.kernels.composite": [[101, null]], "baybe.objective": [[105, null]], "baybe.objective.Objective": [[106, null]], "baybe.objectives": [[107, null]], "baybe.objectives.base": [[108, null]], "baybe.objectives.base.to_objective": [[110, null]], "baybe.objectives.deprecation": [[111, null]], "baybe.objectives.deprecation.structure_objective": [[112, null]], "baybe.objectives.desirability": [[113, null]], "baybe.objectives.desirability.scalarize": [[115, null]], "baybe.objectives.enum": [[116, null]], "baybe.objectives.single": [[118, null]], "baybe.parameters": [[120, null]], "baybe.parameters.base": [[121, null]], "baybe.parameters.categorical": [[125, null]], "baybe.parameters.custom": [[128, null]], "baybe.parameters.enum": [[130, null]], "baybe.parameters.numerical": [[135, null]], "baybe.parameters.substance": [[138, null]], "baybe.parameters.substance.Smiles": [[139, null]], "baybe.parameters.utils": [[141, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[142, null]], "baybe.parameters.utils.sort_parameters": [[143, null]], "baybe.parameters.validation": [[144, null]], "baybe.parameters.validation.validate_decorrelation": [[145, null]], "baybe.parameters.validation.validate_is_finite": [[146, null]], "baybe.parameters.validation.validate_unique_values": [[147, null]], "baybe.priors": [[148, null]], "baybe.priors.base": [[149, null]], "baybe.priors.basic": [[151, null]], "baybe.recommenders": [[159, null]], "baybe.recommenders.base": [[160, null]], "baybe.recommenders.meta": [[162, null]], "baybe.recommenders.meta.base": [[163, null]], "baybe.recommenders.meta.sequential": [[165, null]], "baybe.recommenders.naive": [[169, null]], "baybe.recommenders.pure": [[171, null]], "baybe.recommenders.pure.base": [[172, null]], "baybe.recommenders.pure.bayesian": [[174, null]], "baybe.recommenders.pure.bayesian.base": [[175, null]], "baybe.recommenders.pure.bayesian.botorch": [[177, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[179, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[180, null]], "baybe.recommenders.pure.nonpredictive": [[181, null]], "baybe.recommenders.pure.nonpredictive.base": [[182, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[184, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[189, null]], "baybe.searchspace": [[192, null]], "baybe.searchspace.continuous": [[193, null]], "baybe.searchspace.core": [[195, null]], "baybe.searchspace.core.to_searchspace": [[198, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[199, null]], "baybe.searchspace.discrete": [[200, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[203, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[204, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[205, null]], "baybe.searchspace.validation": [[206, null]], "baybe.searchspace.validation.get_transform_parameters": [[207, null]], "baybe.searchspace.validation.validate_parameter_names": [[208, null]], "baybe.searchspace.validation.validate_parameters": [[209, null]], "baybe.serialization": [[210, null]], "baybe.serialization.core": [[211, null]], "baybe.serialization.core.block_deserialization_hook": [[212, null]], "baybe.serialization.core.block_serialization_hook": [[213, null]], "baybe.serialization.core.converter": [[214, null]], "baybe.serialization.core.get_base_structure_hook": [[215, null]], "baybe.serialization.core.select_constructor_hook": [[216, null]], "baybe.serialization.core.unstructure_base": [[217, null]], "baybe.serialization.mixin": [[218, null]], "baybe.serialization.utils": [[220, null]], "baybe.serialization.utils.deserialize_dataframe": [[221, null]], "baybe.serialization.utils.serialize_dataframe": [[222, null]], "baybe.simulation": [[223, null]], "baybe.simulation.core": [[224, null]], "baybe.simulation.core.simulate_experiment": [[225, null]], "baybe.simulation.lookup": [[226, null]], "baybe.simulation.lookup.look_up_targets": [[227, null]], "baybe.simulation.scenarios": [[228, null]], "baybe.simulation.scenarios.simulate_scenarios": [[229, null]], "baybe.simulation.transfer_learning": [[230, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[231, null]], "baybe.surrogates": [[232, null]], "baybe.surrogates.bandit": [[233, null]], "baybe.surrogates.base": [[235, null]], "baybe.surrogates.custom": [[239, null]], "baybe.surrogates.custom.register_custom_architecture": [[241, null]], "baybe.surrogates.gaussian_process": [[242, null]], "baybe.surrogates.gaussian_process.core": [[243, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[245, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[248, null]], "baybe.surrogates.gaussian_process.presets": [[249, null]], "baybe.surrogates.gaussian_process.presets.core": [[250, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[252, null]], "baybe.surrogates.gaussian_process.presets.default": [[253, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[255, null]], "baybe.surrogates.linear": [[257, null]], "baybe.surrogates.naive": [[259, null]], "baybe.surrogates.ngboost": [[261, null]], "baybe.surrogates.random_forest": [[263, null]], "baybe.surrogates.utils": [[265, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[266, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[267, null]], "baybe.surrogates.utils.catch_constant_targets": [[268, null]], "baybe.surrogates.validation": [[269, null]], "baybe.surrogates.validation.get_model_params_validator": [[270, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[271, null]], "baybe.targets": [[272, null]], "baybe.targets.base": [[273, null]], "baybe.targets.binary": [[275, null]], "baybe.targets.binary.ChoiceValue": [[277, null]], "baybe.targets.enum": [[278, null]], "baybe.targets.numerical": [[281, null]], "baybe.targets.transforms": [[283, null]], "baybe.targets.transforms.bell_transform": [[284, null]], "baybe.targets.transforms.linear_transform": [[285, null]], "baybe.targets.transforms.triangular_transform": [[286, null]], "baybe.telemetry": [[287, null]], "baybe.telemetry.get_user_details": [[288, null]], "baybe.telemetry.is_enabled": [[289, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[290, null]], "baybe.telemetry.telemetry_record_value": [[291, null]], "baybe.utils": [[292, null]], "baybe.utils.augmentation": [[293, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[294, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[295, null]], "baybe.utils.basic": [[296, null]], "baybe.utils.basic.find_subclass": [[299, null]], "baybe.utils.basic.get_baseclasses": [[300, null]], "baybe.utils.basic.get_subclasses": [[301, null]], "baybe.utils.basic.group_duplicate_values": [[302, null]], "baybe.utils.basic.hilberts_factory": [[303, null]], "baybe.utils.basic.is_all_instance": [[304, null]], "baybe.utils.basic.match_attributes": [[305, null]], "baybe.utils.basic.refers_to": [[306, null]], "baybe.utils.basic.register_hooks": [[307, null]], "baybe.utils.basic.to_tuple": [[308, null]], "baybe.utils.boolean": [[309, null]], "baybe.utils.boolean.check_if_in": [[310, null]], "baybe.utils.boolean.is_abstract": [[311, null]], "baybe.utils.boolean.strtobool": [[312, null]], "baybe.utils.chemistry": [[313, null]], "baybe.utils.chemistry.get_canonical_smiles": [[314, null]], "baybe.utils.chemistry.get_fingerprint_class": [[315, null]], "baybe.utils.chemistry.name_to_smiles": [[316, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[317, null]], "baybe.utils.conversion": [[318, null]], "baybe.utils.conversion.fraction_to_float": [[319, null]], "baybe.utils.conversion.nonstring_to_tuple": [[320, null]], "baybe.utils.dataframe": [[321, null]], "baybe.utils.dataframe.add_fake_measurements": [[322, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[323, null]], "baybe.utils.dataframe.add_parameter_noise": [[324, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[325, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[326, null]], "baybe.utils.dataframe.df_drop_string_columns": [[327, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[328, null]], "baybe.utils.dataframe.filter_df": [[329, null]], "baybe.utils.dataframe.fuzzy_row_match": [[330, null]], "baybe.utils.dataframe.get_transform_objects": [[331, null]], "baybe.utils.dataframe.pretty_print_df": [[332, null]], "baybe.utils.dataframe.to_tensor": [[333, null]], "baybe.utils.interval": [[334, null]], "baybe.utils.interval.InfiniteIntervalError": [[335, null]], "baybe.utils.interval.convert_bounds": [[337, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[338, null]], "baybe.utils.memory": [[339, null]], "baybe.utils.memory.bytes_to_human_readable": [[340, null]], "baybe.utils.numerical": [[341, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[342, null]], "baybe.utils.numerical.DTypeFloatONNX": [[343, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[344, null]], "baybe.utils.numerical.closer_element": [[345, null]], "baybe.utils.numerical.closest_element": [[346, null]], "baybe.utils.numerical.geom_mean": [[347, null]], "baybe.utils.plotting": [[348, null]], "baybe.utils.plotting.create_example_plots": [[349, null]], "baybe.utils.plotting.indent": [[350, null]], "baybe.utils.plotting.to_string": [[351, null]], "baybe.utils.random": [[352, null]], "baybe.utils.random.set_random_seed": [[353, null]], "baybe.utils.random.temporary_seed": [[354, null]], "baybe.utils.sampling_algorithms": [[355, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[357, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[358, null]], "baybe.utils.scaling": [[359, null]], "baybe.utils.torch": [[361, null]], "baybe.utils.torch.DTypeFloatTorch": [[362, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[363, null]], "baybe.utils.validation": [[364, null]], "baybe.utils.validation.finite_float": [[365, null]], "baybe.utils.validation.non_inf_float": [[366, null]], "baybe.utils.validation.non_nan_float": [[367, null]], "baybe.utils.validation.validate_not_nan": [[368, null]], "classproperty": [[298, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[412, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[390, "pre-training-stage"]], "\u26a1 Quick Start": [[411, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[411, "maintainers"]], "\ud83d\udcbb Installation": [[411, "installation"]], "\ud83d\udcc4 License": [[411, "license"]], "\ud83d\udce1 Telemetry": [[411, "telemetry"]], "\ud83d\udd0b Batteries Included": [[411, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[411, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[82, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[161, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[173, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[196, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[201, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[237, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[238, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[246, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[254, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[256, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[274, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[276, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[282, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[298, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[297, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[335, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[360, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[131, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[132, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[134, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[335, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[158, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[322, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[323, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[324, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[102, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[173, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[173, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[173, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[152, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[325, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[158, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[82, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[104, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[102, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[103, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basickernel (class in baybe.kernels.base)": [[89, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[266, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[267, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[251, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.insights": [[78, "module-baybe.insights", false]], "baybe.insights.shap": [[79, "module-baybe.insights.shap", false]], "baybe.kernels": [[87, "module-baybe.kernels", false]], "baybe.kernels.base": [[88, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[92, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[101, "module-baybe.kernels.composite", false]], "baybe.objective": [[105, "module-baybe.objective", false]], "baybe.objectives": [[107, "module-baybe.objectives", false]], "baybe.objectives.base": [[108, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[111, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[113, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[116, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[118, "module-baybe.objectives.single", false]], "baybe.parameters": [[120, "module-baybe.parameters", false]], "baybe.parameters.base": [[121, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[125, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[128, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[130, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[135, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[138, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[141, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[144, "module-baybe.parameters.validation", false]], "baybe.priors": [[148, "module-baybe.priors", false]], "baybe.priors.base": [[149, "module-baybe.priors.base", false]], "baybe.priors.basic": [[151, "module-baybe.priors.basic", false]], "baybe.recommenders": [[159, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[160, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[162, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[163, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[165, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[169, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[171, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[172, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[174, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[175, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[177, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[179, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[181, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[182, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[184, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[189, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[192, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[193, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[195, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[200, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[206, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[210, "module-baybe.serialization", false]], "baybe.serialization.core": [[211, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[218, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[220, "module-baybe.serialization.utils", false]], "baybe.simulation": [[223, "module-baybe.simulation", false]], "baybe.simulation.core": [[224, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[226, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[228, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[230, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[232, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[233, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[235, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[239, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[242, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[243, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[245, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[249, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[250, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[253, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[255, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[257, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[259, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[261, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[263, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[265, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[269, "module-baybe.surrogates.validation", false]], "baybe.targets": [[272, "module-baybe.targets", false]], "baybe.targets.base": [[273, "module-baybe.targets.base", false]], "baybe.targets.binary": [[275, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[278, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[281, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[283, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[287, "module-baybe.telemetry", false]], "baybe.utils": [[292, "module-baybe.utils", false]], "baybe.utils.augmentation": [[293, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[296, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[309, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[313, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[318, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[321, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[334, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[339, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[341, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[348, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[352, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[355, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[359, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[361, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[364, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[280, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[284, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[152, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[152, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[276, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[212, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[213, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[282, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[340, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[268, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[131, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[126, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[310, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[277, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[298, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[345, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[346, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[360, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[201, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[122, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[124, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[201, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[201, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[173, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[90, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[153, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[196, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[197, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[122, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[337, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[214, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[336, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[349, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[132, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[129, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[132, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_iterator() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.default_iterator", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[254, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[221, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[114, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[294, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[295, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[326, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[196, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[197, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[123, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[356, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[342, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[343, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[362, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[297, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[256, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[197, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[123, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[126, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[196, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[201, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[201, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[201, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[82, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[82, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[80, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[276, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[357, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[299, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[365, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[237, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[238, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[360, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[356, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[319, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[82, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[196, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[89, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[90, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[91, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[93, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[94, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[95, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[97, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[98, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[99, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[100, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[102, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[103, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[104, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[109, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[119, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[122, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[123, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[124, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[126, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[127, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[140, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[150, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[152, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[153, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[154, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[155, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[156, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[157, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[196, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[219, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[237, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[274, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[276, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[282, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[336, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[89, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[90, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[91, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[93, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[94, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[95, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[97, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[98, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[99, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[100, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[102, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[103, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[104, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[109, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[119, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[122, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[123, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[124, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[126, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[127, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[140, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[150, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[152, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[153, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[154, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[155, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[156, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[157, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[196, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[219, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[237, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[274, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[276, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[282, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[336, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[196, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[196, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[82, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[82, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[153, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[251, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[117, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[347, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[215, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[300, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[314, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[196, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[315, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[270, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[196, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[142, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[301, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[331, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[207, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[288, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[302, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[155, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[303, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[197, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleexplainererror": [[64, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[65, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[350, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[335, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[131, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[336, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[66, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[67, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[311, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[122, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[124, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[122, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[124, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[289, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[122, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[123, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[124, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[126, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[336, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[85, "baybe.insights.shap.is_shap_explainer", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[91, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[246, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[94, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[98, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[99, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[100, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[94, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[98, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[99, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[100, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[280, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[285, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[93, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[156, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[157, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[156, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[227, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[336, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[86, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[252, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[360, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[279, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[94, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[279, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[117, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[201, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[164, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[279, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[282, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[68, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [78, "module-baybe.insights", false], [79, "module-baybe.insights.shap", false], [87, "module-baybe.kernels", false], [88, "module-baybe.kernels.base", false], [92, "module-baybe.kernels.basic", false], [101, "module-baybe.kernels.composite", false], [105, "module-baybe.objective", false], [107, "module-baybe.objectives", false], [108, "module-baybe.objectives.base", false], [111, "module-baybe.objectives.deprecation", false], [113, "module-baybe.objectives.desirability", false], [116, "module-baybe.objectives.enum", false], [118, "module-baybe.objectives.single", false], [120, "module-baybe.parameters", false], [121, "module-baybe.parameters.base", false], [125, "module-baybe.parameters.categorical", false], [128, "module-baybe.parameters.custom", false], [130, "module-baybe.parameters.enum", false], [135, "module-baybe.parameters.numerical", false], [138, "module-baybe.parameters.substance", false], [141, "module-baybe.parameters.utils", false], [144, "module-baybe.parameters.validation", false], [148, "module-baybe.priors", false], [149, "module-baybe.priors.base", false], [151, "module-baybe.priors.basic", false], [159, "module-baybe.recommenders", false], [160, "module-baybe.recommenders.base", false], [162, "module-baybe.recommenders.meta", false], [163, "module-baybe.recommenders.meta.base", false], [165, "module-baybe.recommenders.meta.sequential", false], [169, "module-baybe.recommenders.naive", false], [171, "module-baybe.recommenders.pure", false], [172, "module-baybe.recommenders.pure.base", false], [174, "module-baybe.recommenders.pure.bayesian", false], [175, "module-baybe.recommenders.pure.bayesian.base", false], [177, "module-baybe.recommenders.pure.bayesian.botorch", false], [179, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [181, "module-baybe.recommenders.pure.nonpredictive", false], [182, "module-baybe.recommenders.pure.nonpredictive.base", false], [184, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [189, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [192, "module-baybe.searchspace", false], [193, "module-baybe.searchspace.continuous", false], [195, "module-baybe.searchspace.core", false], [200, "module-baybe.searchspace.discrete", false], [206, "module-baybe.searchspace.validation", false], [210, "module-baybe.serialization", false], [211, "module-baybe.serialization.core", false], [218, "module-baybe.serialization.mixin", false], [220, "module-baybe.serialization.utils", false], [223, "module-baybe.simulation", false], [224, "module-baybe.simulation.core", false], [226, "module-baybe.simulation.lookup", false], [228, "module-baybe.simulation.scenarios", false], [230, "module-baybe.simulation.transfer_learning", false], [232, "module-baybe.surrogates", false], [233, "module-baybe.surrogates.bandit", false], [235, "module-baybe.surrogates.base", false], [239, "module-baybe.surrogates.custom", false], [242, "module-baybe.surrogates.gaussian_process", false], [243, "module-baybe.surrogates.gaussian_process.core", false], [245, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [249, "module-baybe.surrogates.gaussian_process.presets", false], [250, "module-baybe.surrogates.gaussian_process.presets.core", false], [253, "module-baybe.surrogates.gaussian_process.presets.default", false], [255, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [257, "module-baybe.surrogates.linear", false], [259, "module-baybe.surrogates.naive", false], [261, "module-baybe.surrogates.ngboost", false], [263, "module-baybe.surrogates.random_forest", false], [265, "module-baybe.surrogates.utils", false], [269, "module-baybe.surrogates.validation", false], [272, "module-baybe.targets", false], [273, "module-baybe.targets.base", false], [275, "module-baybe.targets.binary", false], [278, "module-baybe.targets.enum", false], [281, "module-baybe.targets.numerical", false], [283, "module-baybe.targets.transforms", false], [287, "module-baybe.telemetry", false], [292, "module-baybe.utils", false], [293, "module-baybe.utils.augmentation", false], [296, "module-baybe.utils.basic", false], [309, "module-baybe.utils.boolean", false], [313, "module-baybe.utils.chemistry", false], [318, "module-baybe.utils.conversion", false], [321, "module-baybe.utils.dataframe", false], [334, "module-baybe.utils.interval", false], [339, "module-baybe.utils.memory", false], [341, "module-baybe.utils.numerical", false], [348, "module-baybe.utils.plotting", false], [352, "module-baybe.utils.random", false], [355, "module-baybe.utils.sampling_algorithms", false], [359, "module-baybe.utils.scaling", false], [361, "module-baybe.utils.torch", false], [364, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[122, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[123, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[124, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[126, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[127, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[140, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[274, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[276, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[282, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[316, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[366, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[367, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[81, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[320, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[70, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[157, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[71, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[72, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[94, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[99, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[282, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[73, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[109, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[106, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[97, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[97, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[131, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[74, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[104, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[104, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[124, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[203, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[204, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[133, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[95, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[82, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[97, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[237, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[97, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[332, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[150, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[103, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[173, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[356, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[153, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[161, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[170, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[173, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[183, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[161, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[306, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[241, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[307, "baybe.utils.basic.register_hooks", false]], "rffkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[358, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[115, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[114, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[117, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[154, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[155, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[156, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[157, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[104, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[196, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[197, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[216, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[180, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[222, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[219, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[353, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[83, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[84, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[82, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[158, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[225, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[229, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[231, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[119, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[139, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[317, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[158, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[143, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[312, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[112, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[194, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[134, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[140, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[276, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[274, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[276, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[282, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[237, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[237, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[176, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[178, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[238, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[274, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[279, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[109, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[114, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[119, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[280, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[127, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[290, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[291, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[354, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[237, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[238, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[196, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[219, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[237, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[274, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[276, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[282, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[89, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[90, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[91, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[93, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[94, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[95, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[96, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[97, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[98, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[99, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[100, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[102, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[103, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[104, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[150, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[152, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[153, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[154, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[155, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[156, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[157, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[158, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[164, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[166, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[196, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[219, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[234, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[236, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[237, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[244, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[247, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[258, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[260, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[262, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[264, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[274, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[276, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[282, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[274, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[276, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[282, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[110, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[124, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[198, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[351, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[122, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[136, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[333, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[336, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[308, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[109, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[114, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[119, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[123, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[126, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[127, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[140, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[194, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[196, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[202, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[274, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[276, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[282, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[360, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[282, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[280, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[286, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[168, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[196, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[75, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[76, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[217, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[77, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[336, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[338, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[82, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[240, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[271, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[145, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[146, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[368, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[208, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[209, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[199, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[205, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[147, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[123, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[126, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[127, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[129, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[137, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[140, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[93, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[93, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[344, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[363, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[114, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[134, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [78, 0, 0, "-", "insights"], [87, 0, 0, "-", "kernels"], [105, 0, 0, "-", "objective"], [107, 0, 0, "-", "objectives"], [120, 0, 0, "-", "parameters"], [148, 0, 0, "-", "priors"], [159, 0, 0, "-", "recommenders"], [192, 0, 0, "-", "searchspace"], [210, 0, 0, "-", "serialization"], [223, 0, 0, "-", "simulation"], [232, 0, 0, "-", "surrogates"], [272, 0, 0, "-", "targets"], [287, 0, 0, "-", "telemetry"], [292, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[22, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[24, 5, 1, "", "convert_acqf"], [25, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 6, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 6, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 6, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "toggle_discrete_candidates"], [27, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[27, 4, 1, "", "data"], [27, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[27, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[27, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[27, 4, 1, "", "string"]], "baybe.campaign.Campaign.posterior.params": [[27, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[27, 4, 1, "", "complement"], [27, 4, 1, "", "constraints"], [27, 4, 1, "", "dry_run"], [27, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[27, 4, 1, "", "config_json"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 6, 1, "", "is_continuous"], [30, 6, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[30, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 2, 1, "", "get_valid"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[34, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[34, 4, 1, "", "df"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[36, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[36, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[40, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 6, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[41, 4, 1, "", "idx_offset"], [41, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[43, 5, 1, "", "ContinuousLinearEqualityConstraint"], [44, 5, 1, "", "ContinuousLinearInequalityConstraint"], [45, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 2, 1, "", "get_valid"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[47, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[47, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.validation": [[57, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[57, 4, 1, "", "constraints"]], "baybe.exceptions": [[60, 7, 1, "", "DeprecationError"], [61, 7, 1, "", "EmptySearchSpaceError"], [62, 7, 1, "", "IncompatibilityError"], [63, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 7, 1, "", "IncompatibleExplainerError"], [65, 7, 1, "", "IncompatibleSearchSpaceError"], [66, 7, 1, "", "InvalidSurrogateModelError"], [67, 7, 1, "", "InvalidTargetValueError"], [68, 7, 1, "", "ModelNotTrainedError"], [69, 7, 1, "", "NoMCAcquisitionFunctionError"], [70, 7, 1, "", "NoRecommendersLeftError"], [71, 7, 1, "", "NotEnoughPointsLeftError"], [72, 7, 1, "", "NothingToSimulateError"], [73, 7, 1, "", "NumericalUnderflowError"], [74, 7, 1, "", "OptionalImportError"], [75, 7, 1, "", "UnidentifiedSubclassError"], [76, 7, 1, "", "UnmatchedAttributeError"], [77, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.insights": [[79, 0, 0, "-", "shap"]], "baybe.insights.shap": [[80, 8, 1, "", "EXPLAINERS"], [81, 8, 1, "", "NON_SHAP_EXPLAINERS"], [82, 1, 1, "", "SHAPInsight"], [83, 8, 1, "", "SHAP_EXPLAINERS"], [84, 8, 1, "", "SHAP_PLOTS"], [85, 5, 1, "", "is_shap_explainer"], [86, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "background_data"], [82, 2, 1, "", "explain"], [82, 3, 1, "", "explainer"], [82, 2, 1, "", "from_campaign"], [82, 2, 1, "", "from_recommender"], [82, 2, 1, "", "from_surrogate"], [82, 2, 1, "", "plot"], [82, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[82, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[82, 4, 1, "", "campaign"], [82, 4, 1, "", "explainer_cls"], [82, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[82, 4, 1, "", "explainer_cls"], [82, 4, 1, "", "measurements"], [82, 4, 1, "", "objective"], [82, 4, 1, "", "recommender"], [82, 4, 1, "", "searchspace"], [82, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[82, 4, 1, "", "**kwargs"], [82, 4, 1, "", "data"], [82, 4, 1, "", "explanation_index"], [82, 4, 1, "", "plot_type"], [82, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[86, 4, 1, "", "data"], [86, 4, 1, "", "explainer_cls"], [86, 4, 1, "", "surrogate"], [86, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[88, 0, 0, "-", "base"], [92, 0, 0, "-", "basic"], [101, 0, 0, "-", "composite"]], "baybe.kernels.base": [[89, 1, 1, "", "BasicKernel"], [90, 1, 1, "", "CompositeKernel"], [91, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_dict"], [89, 2, 1, "", "from_json"], [89, 2, 1, "", "to_dict"], [89, 2, 1, "", "to_factory"], [89, 2, 1, "", "to_gpytorch"], [89, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[89, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[89, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[90, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[90, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.basic": [[93, 1, 1, "", "LinearKernel"], [94, 1, 1, "", "MaternKernel"], [95, 1, 1, "", "PeriodicKernel"], [96, 1, 1, "", "PiecewisePolynomialKernel"], [97, 1, 1, "", "PolynomialKernel"], [98, 1, 1, "", "RBFKernel"], [99, 1, 1, "", "RFFKernel"], [100, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"], [93, 3, 1, "", "variance_initial_value"], [93, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 3, 1, "", "lengthscale_initial_value"], [94, 3, 1, "", "lengthscale_prior"], [94, 3, 1, "", "nu"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 3, 1, "", "lengthscale_initial_value"], [95, 3, 1, "", "lengthscale_prior"], [95, 3, 1, "", "period_length_initial_value"], [95, 3, 1, "", "period_length_prior"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 3, 1, "", "q"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 3, 1, "", "offset_initial_value"], [97, 3, 1, "", "offset_prior"], [97, 3, 1, "", "power"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_factory"], [97, 2, 1, "", "to_gpytorch"], [97, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[97, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[97, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 3, 1, "", "lengthscale_initial_value"], [98, 3, 1, "", "lengthscale_prior"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "lengthscale_initial_value"], [99, 3, 1, "", "lengthscale_prior"], [99, 3, 1, "", "num_samples"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "lengthscale_initial_value"], [100, 3, 1, "", "lengthscale_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.composite": [[102, 1, 1, "", "AdditiveKernel"], [103, 1, 1, "", "ProductKernel"], [104, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[102, 2, 1, "", "__init__"], [102, 3, 1, "", "base_kernels"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[103, 2, 1, "", "__init__"], [103, 3, 1, "", "base_kernels"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[104, 2, 1, "", "__init__"], [104, 3, 1, "", "base_kernel"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 3, 1, "", "outputscale_initial_value"], [104, 3, 1, "", "outputscale_prior"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.objective": [[106, 5, 1, "", "Objective"]], "baybe.objectives": [[108, 0, 0, "-", "base"], [111, 0, 0, "-", "deprecation"], [113, 0, 0, "-", "desirability"], [116, 0, 0, "-", "enum"], [118, 0, 0, "-", "single"]], "baybe.objectives.base": [[109, 1, 1, "", "Objective"], [110, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 6, 1, "", "targets"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_json"], [109, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[109, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[109, 4, 1, "", "allow_extra"], [109, 4, 1, "", "allow_missing"], [109, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[112, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[114, 1, 1, "", "DesirabilityObjective"], [115, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "scalarizer"], [114, 6, 1, "", "targets"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_json"], [114, 2, 1, "", "transform"], [114, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[114, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[114, 4, 1, "", "allow_extra"], [114, 4, 1, "", "allow_missing"], [114, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[115, 4, 1, "", "scalarizer"], [115, 4, 1, "", "values"], [115, 4, 1, "", "weights"]], "baybe.objectives.enum": [[117, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[117, 3, 1, "", "GEOM_MEAN"], [117, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[119, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 6, 1, "", "targets"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[119, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[119, 4, 1, "", "allow_extra"], [119, 4, 1, "", "allow_missing"], [119, 4, 1, "", "df"]], "baybe.parameters": [[121, 0, 0, "-", "base"], [125, 0, 0, "-", "categorical"], [128, 0, 0, "-", "custom"], [130, 0, 0, "-", "enum"], [135, 0, 0, "-", "numerical"], [138, 0, 0, "-", "substance"], [141, 0, 0, "-", "utils"], [144, 0, 0, "-", "validation"]], "baybe.parameters.base": [[122, 1, 1, "", "ContinuousParameter"], [123, 1, 1, "", "DiscreteParameter"], [124, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[122, 2, 1, "", "__init__"], [122, 6, 1, "", "comp_rep_columns"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 6, 1, "", "is_continuous"], [122, 6, 1, "", "is_discrete"], [122, 2, 1, "", "is_in_range"], [122, 3, 1, "", "is_numerical"], [122, 3, 1, "", "name"], [122, 2, 1, "", "summary"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "to_searchspace"], [122, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[122, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[122, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[123, 2, 1, "", "__init__"], [123, 6, 1, "", "comp_df"], [123, 6, 1, "", "comp_rep_columns"], [123, 3, 1, "", "encoding"], [123, 2, 1, "", "from_dict"], [123, 2, 1, "", "from_json"], [123, 6, 1, "", "is_continuous"], [123, 6, 1, "", "is_discrete"], [123, 2, 1, "", "is_in_range"], [123, 3, 1, "", "is_numerical"], [123, 3, 1, "", "name"], [123, 2, 1, "", "summary"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "to_json"], [123, 2, 1, "", "to_searchspace"], [123, 2, 1, "", "to_subspace"], [123, 2, 1, "", "transform"], [123, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[123, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[123, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[123, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[123, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "comp_rep_columns"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 6, 1, "", "is_continuous"], [124, 6, 1, "", "is_discrete"], [124, 2, 1, "", "is_in_range"], [124, 3, 1, "", "is_numerical"], [124, 3, 1, "", "name"], [124, 2, 1, "", "summary"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[124, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[124, 4, 1, "", "item"]], "baybe.parameters.categorical": [[126, 1, 1, "", "CategoricalParameter"], [127, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[126, 2, 1, "", "__init__"], [126, 6, 1, "", "comp_df"], [126, 6, 1, "", "comp_rep_columns"], [126, 3, 1, "", "encoding"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 6, 1, "", "is_continuous"], [126, 6, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"], [126, 2, 1, "", "to_subspace"], [126, 2, 1, "", "transform"], [126, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[126, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[126, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[126, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[127, 2, 1, "", "__init__"], [127, 3, 1, "", "active_values"], [127, 6, 1, "", "comp_df"], [127, 6, 1, "", "comp_rep_columns"], [127, 3, 1, "", "encoding"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 6, 1, "", "is_continuous"], [127, 6, 1, "", "is_discrete"], [127, 2, 1, "", "is_in_range"], [127, 3, 1, "", "is_numerical"], [127, 3, 1, "", "name"], [127, 2, 1, "", "summary"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "to_searchspace"], [127, 2, 1, "", "to_subspace"], [127, 2, 1, "", "transform"], [127, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[127, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[127, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[127, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[127, 4, 1, "", "series"]], "baybe.parameters.custom": [[129, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[129, 2, 1, "", "__init__"], [129, 6, 1, "", "comp_df"], [129, 6, 1, "", "comp_rep_columns"], [129, 3, 1, "", "data"], [129, 3, 1, "", "decorrelate"], [129, 3, 1, "", "encoding"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 6, 1, "", "is_continuous"], [129, 6, 1, "", "is_discrete"], [129, 2, 1, "", "is_in_range"], [129, 3, 1, "", "is_numerical"], [129, 3, 1, "", "name"], [129, 2, 1, "", "summary"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "to_searchspace"], [129, 2, 1, "", "to_subspace"], [129, 2, 1, "", "transform"], [129, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[129, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[129, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[129, 4, 1, "", "series"]], "baybe.parameters.enum": [[131, 1, 1, "", "CategoricalEncoding"], [132, 1, 1, "", "CustomEncoding"], [133, 1, 1, "", "ParameterEncoding"], [134, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[131, 3, 1, "", "INT"], [131, 3, 1, "", "OHE"], [131, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[132, 3, 1, "", "CUSTOM"], [132, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[134, 3, 1, "", "ATOMPAIR"], [134, 3, 1, "", "AUTOCORR"], [134, 3, 1, "", "AVALON"], [134, 3, 1, "", "E3FP"], [134, 3, 1, "", "ECFP"], [134, 3, 1, "", "ELECTROSHAPE"], [134, 3, 1, "", "ERG"], [134, 3, 1, "", "ESTATE"], [134, 3, 1, "", "FUNCTIONALGROUPS"], [134, 3, 1, "", "GETAWAY"], [134, 3, 1, "", "GHOSECRIPPEN"], [134, 3, 1, "", "KLEKOTAROTH"], [134, 3, 1, "", "LAGGNER"], [134, 3, 1, "", "LAYERED"], [134, 3, 1, "", "LINGO"], [134, 3, 1, "", "MACCS"], [134, 3, 1, "", "MAP"], [134, 3, 1, "", "MHFP"], [134, 3, 1, "", "MORDRED"], [134, 3, 1, "", "MORGAN_FP"], [134, 3, 1, "", "MORSE"], [134, 3, 1, "", "MQNS"], [134, 3, 1, "", "PATTERN"], [134, 3, 1, "", "PHARMACOPHORE"], [134, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [134, 3, 1, "", "PUBCHEM"], [134, 3, 1, "", "RDF"], [134, 3, 1, "", "RDKIT"], [134, 3, 1, "", "RDKIT2DDESCRIPTORS"], [134, 3, 1, "", "RDKITFINGERPRINT"], [134, 3, 1, "", "SECFP"], [134, 3, 1, "", "TOPOLOGICALTORSION"], [134, 3, 1, "", "USR"], [134, 3, 1, "", "USRCAT"], [134, 3, 1, "", "VSA"], [134, 3, 1, "", "WHIM"], [134, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[136, 1, 1, "", "NumericalContinuousParameter"], [137, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "bounds"], [136, 6, 1, "", "comp_rep_columns"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_df"], [137, 6, 1, "", "comp_rep_columns"], [137, 3, 1, "", "encoding"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"], [137, 3, 1, "", "tolerance"], [137, 2, 1, "", "transform"], [137, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[137, 4, 1, "", "series"]], "baybe.parameters.substance": [[139, 3, 1, "", "Smiles"], [140, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 3, 1, "", "data"], [140, 3, 1, "", "decorrelate"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "kwargs_conformer"], [140, 3, 1, "", "kwargs_fingerprint"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.utils": [[142, 5, 1, "", "get_parameters_from_dataframe"], [143, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[142, 4, 1, "", "df"], [142, 4, 1, "", "factory"], [142, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[145, 5, 1, "", "validate_decorrelation"], [146, 5, 1, "", "validate_is_finite"], [147, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[149, 0, 0, "-", "base"], [151, 0, 0, "-", "basic"]], "baybe.priors.base": [[150, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_gpytorch"], [150, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[150, 4, 1, "", "string"]], "baybe.priors.basic": [[152, 1, 1, "", "BetaPrior"], [153, 1, 1, "", "GammaPrior"], [154, 1, 1, "", "HalfCauchyPrior"], [155, 1, 1, "", "HalfNormalPrior"], [156, 1, 1, "", "LogNormalPrior"], [157, 1, 1, "", "NormalPrior"], [158, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "alpha"], [152, 3, 1, "", "beta"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_gpytorch"], [152, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[152, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "concentration"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 3, 1, "", "rate"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_gpytorch"], [153, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[153, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 3, 1, "", "scale"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 3, 1, "", "scale"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_gpytorch"], [155, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[155, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 3, 1, "", "loc"], [156, 3, 1, "", "scale"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_gpytorch"], [156, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[156, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 3, 1, "", "loc"], [157, 3, 1, "", "scale"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_gpytorch"], [157, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[157, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[158, 2, 1, "", "__init__"], [158, 3, 1, "", "a"], [158, 3, 1, "", "b"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 3, 1, "", "sigma"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_gpytorch"], [158, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[158, 4, 1, "", "string"]], "baybe.recommenders": [[160, 0, 0, "-", "base"], [162, 0, 0, "-", "meta"], [169, 0, 0, "-", "naive"], [171, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[161, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[161, 4, 1, "", "batch_size"], [161, 4, 1, "", "measurements"], [161, 4, 1, "", "objective"], [161, 4, 1, "", "pending_experiments"], [161, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[163, 0, 0, "-", "base"], [165, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[164, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "from_json"], [164, 2, 1, "", "get_current_recommender"], [164, 2, 1, "", "get_next_recommender"], [164, 2, 1, "", "recommend"], [164, 2, 1, "", "select_recommender"], [164, 2, 1, "", "to_dict"], [164, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[164, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[164, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[166, 1, 1, "", "SequentialMetaRecommender"], [167, 1, 1, "", "StreamingSequentialMetaRecommender"], [168, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 2, 1, "", "get_current_recommender"], [166, 2, 1, "", "get_next_recommender"], [166, 3, 1, "", "mode"], [166, 2, 1, "", "recommend"], [166, 3, 1, "", "recommenders"], [166, 2, 1, "", "select_recommender"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[166, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "default_iterator"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "get_current_recommender"], [167, 2, 1, "", "get_next_recommender"], [167, 2, 1, "", "recommend"], [167, 3, 1, "", "recommenders"], [167, 2, 1, "", "select_recommender"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[167, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "get_current_recommender"], [168, 2, 1, "", "get_next_recommender"], [168, 3, 1, "", "initial_recommender"], [168, 2, 1, "", "recommend"], [168, 3, 1, "", "recommender"], [168, 2, 1, "", "select_recommender"], [168, 3, 1, "", "switch_after"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[168, 4, 1, "", "string"]], "baybe.recommenders.naive": [[170, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "allow_recommending_already_measured"], [170, 3, 1, "", "allow_recommending_pending_experiments"], [170, 3, 1, "", "allow_repeated_recommendations"], [170, 3, 1, "", "compatibility"], [170, 3, 1, "", "cont_recommender"], [170, 3, 1, "", "disc_recommender"], [170, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[170, 4, 1, "", "batch_size"], [170, 4, 1, "", "measurements"], [170, 4, 1, "", "objective"], [170, 4, 1, "", "pending_experiments"], [170, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[172, 0, 0, "-", "base"], [174, 0, 0, "-", "bayesian"], [181, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[173, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "allow_recommending_already_measured"], [173, 3, 1, "", "allow_recommending_pending_experiments"], [173, 3, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[173, 4, 1, "", "batch_size"], [173, 4, 1, "", "measurements"], [173, 4, 1, "", "objective"], [173, 4, 1, "", "pending_experiments"], [173, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[175, 0, 0, "-", "base"], [177, 0, 0, "-", "botorch"], [179, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[176, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "acquisition_function"], [176, 3, 1, "", "acquisition_function_cls"], [176, 3, 1, "", "allow_recommending_already_measured"], [176, 3, 1, "", "allow_recommending_pending_experiments"], [176, 3, 1, "", "allow_repeated_recommendations"], [176, 3, 1, "", "compatibility"], [176, 2, 1, "", "get_surrogate"], [176, 2, 1, "", "recommend"], [176, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[176, 4, 1, "", "batch_size"], [176, 4, 1, "", "measurements"], [176, 4, 1, "", "objective"], [176, 4, 1, "", "pending_experiments"], [176, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[178, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "acquisition_function"], [178, 3, 1, "", "acquisition_function_cls"], [178, 3, 1, "", "allow_recommending_already_measured"], [178, 3, 1, "", "allow_recommending_pending_experiments"], [178, 3, 1, "", "allow_repeated_recommendations"], [178, 3, 1, "", "compatibility"], [178, 2, 1, "", "get_surrogate"], [178, 3, 1, "", "hybrid_sampler"], [178, 3, 1, "", "n_raw_samples"], [178, 3, 1, "", "n_restarts"], [178, 2, 1, "", "recommend"], [178, 3, 1, "", "sampling_percentage"], [178, 3, 1, "", "sequential_continuous"], [178, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[180, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[182, 0, 0, "-", "base"], [184, 0, 0, "-", "clustering"], [189, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[183, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[183, 2, 1, "", "__init__"], [183, 3, 1, "", "allow_recommending_already_measured"], [183, 3, 1, "", "allow_recommending_pending_experiments"], [183, 3, 1, "", "allow_repeated_recommendations"], [183, 3, 1, "", "compatibility"], [183, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[183, 4, 1, "", "batch_size"], [183, 4, 1, "", "measurements"], [183, 4, 1, "", "objective"], [183, 4, 1, "", "pending_experiments"], [183, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[185, 1, 1, "", "GaussianMixtureClusteringRecommender"], [186, 1, 1, "", "KMeansClusteringRecommender"], [187, 1, 1, "", "PAMClusteringRecommender"], [188, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[185, 2, 1, "", "__init__"], [185, 3, 1, "", "allow_recommending_already_measured"], [185, 3, 1, "", "allow_recommending_pending_experiments"], [185, 3, 1, "", "allow_repeated_recommendations"], [185, 3, 1, "", "compatibility"], [185, 3, 1, "", "model_cluster_num_parameter_name"], [185, 3, 1, "", "model_params"], [185, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[185, 4, 1, "", "batch_size"], [185, 4, 1, "", "measurements"], [185, 4, 1, "", "objective"], [185, 4, 1, "", "pending_experiments"], [185, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[186, 2, 1, "", "__init__"], [186, 3, 1, "", "allow_recommending_already_measured"], [186, 3, 1, "", "allow_recommending_pending_experiments"], [186, 3, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 3, 1, "", "model_cluster_num_parameter_name"], [186, 3, 1, "", "model_params"], [186, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[187, 2, 1, "", "__init__"], [187, 3, 1, "", "allow_recommending_already_measured"], [187, 3, 1, "", "allow_recommending_pending_experiments"], [187, 3, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 3, 1, "", "model_cluster_num_parameter_name"], [187, 3, 1, "", "model_params"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[188, 2, 1, "", "__init__"], [188, 3, 1, "", "allow_recommending_already_measured"], [188, 3, 1, "", "allow_recommending_pending_experiments"], [188, 3, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "model_cluster_num_parameter_name"], [188, 3, 1, "", "model_params"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[190, 1, 1, "", "FPSRecommender"], [191, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "allow_recommending_already_measured"], [190, 3, 1, "", "allow_recommending_pending_experiments"], [190, 3, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[191, 2, 1, "", "__init__"], [191, 3, 1, "", "allow_recommending_already_measured"], [191, 3, 1, "", "allow_recommending_pending_experiments"], [191, 3, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.searchspace": [[193, 0, 0, "-", "continuous"], [195, 0, 0, "-", "core"], [200, 0, 0, "-", "discrete"], [206, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[194, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[194, 2, 1, "", "__init__"], [194, 6, 1, "", "comp_rep_bounds"], [194, 6, 1, "", "comp_rep_columns"], [194, 6, 1, "", "constraints_cardinality"], [194, 3, 1, "", "constraints_lin_eq"], [194, 3, 1, "", "constraints_lin_ineq"], [194, 3, 1, "", "constraints_nonlin"], [194, 2, 1, "", "empty"], [194, 2, 1, "", "from_bounds"], [194, 2, 1, "", "from_dataframe"], [194, 2, 1, "", "from_dict"], [194, 2, 1, "", "from_json"], [194, 2, 1, "", "from_parameter"], [194, 2, 1, "", "from_product"], [194, 6, 1, "", "full_factorial"], [194, 2, 1, "", "get_parameters_by_name"], [194, 6, 1, "", "is_empty"], [194, 6, 1, "", "parameter_names"], [194, 3, 1, "", "parameters"], [194, 2, 1, "", "sample_from_full_factorial"], [194, 2, 1, "", "sample_uniform"], [194, 2, 1, "", "samples_full_factorial"], [194, 2, 1, "", "samples_random"], [194, 2, 1, "", "to_dict"], [194, 2, 1, "", "to_json"], [194, 2, 1, "", "to_searchspace"], [194, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[194, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[194, 4, 1, "", "df"], [194, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[194, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[194, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[194, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[194, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[194, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[194, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[196, 1, 1, "", "SearchSpace"], [197, 1, 1, "", "SearchSpaceType"], [198, 5, 1, "", "to_searchspace"], [199, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[196, 2, 1, "", "__init__"], [196, 6, 1, "", "comp_rep_bounds"], [196, 6, 1, "", "comp_rep_columns"], [196, 6, 1, "", "constraints"], [196, 6, 1, "", "constraints_augmentable"], [196, 3, 1, "", "continuous"], [196, 3, 1, "", "discrete"], [196, 2, 1, "", "estimate_product_space_size"], [196, 2, 1, "", "from_dataframe"], [196, 2, 1, "", "from_dict"], [196, 2, 1, "", "from_json"], [196, 2, 1, "", "from_parameter"], [196, 2, 1, "", "from_product"], [196, 2, 1, "", "get_comp_rep_parameter_indices"], [196, 2, 1, "", "get_parameters_by_name"], [196, 6, 1, "", "n_tasks"], [196, 6, 1, "", "parameter_names"], [196, 6, 1, "", "parameters"], [196, 6, 1, "", "task_idx"], [196, 2, 1, "", "to_dict"], [196, 2, 1, "", "to_json"], [196, 2, 1, "", "transform"], [196, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[196, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[196, 4, 1, "", "df"], [196, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[196, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[196, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[196, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[196, 4, 1, "", "constraints"], [196, 4, 1, "", "empty_encoding"], [196, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[196, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[196, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[196, 4, 1, "", "allow_extra"], [196, 4, 1, "", "allow_missing"], [196, 4, 1, "", "data"], [196, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[197, 3, 1, "", "CONTINUOUS"], [197, 3, 1, "", "DISCRETE"], [197, 3, 1, "", "EITHER"], [197, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[201, 1, 1, "", "MemorySize"], [202, 1, 1, "", "SubspaceDiscrete"], [203, 5, 1, "", "parameter_cartesian_prod_pandas"], [204, 5, 1, "", "parameter_cartesian_prod_polars"], [205, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[201, 2, 1, "", "__init__"], [201, 3, 1, "", "comp_rep_bytes"], [201, 6, 1, "", "comp_rep_human_readable"], [201, 3, 1, "", "comp_rep_shape"], [201, 3, 1, "", "exp_rep_bytes"], [201, 6, 1, "", "exp_rep_human_readable"], [201, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[202, 2, 1, "", "__init__"], [202, 3, 1, "", "comp_rep"], [202, 6, 1, "", "comp_rep_bounds"], [202, 6, 1, "", "comp_rep_columns"], [202, 3, 1, "", "constraints"], [202, 2, 1, "", "empty"], [202, 3, 1, "", "empty_encoding"], [202, 2, 1, "", "estimate_product_space_size"], [202, 3, 1, "", "exp_rep"], [202, 2, 1, "", "from_dataframe"], [202, 2, 1, "", "from_dict"], [202, 2, 1, "", "from_json"], [202, 2, 1, "", "from_parameter"], [202, 2, 1, "", "from_product"], [202, 2, 1, "", "from_simplex"], [202, 2, 1, "", "get_candidates"], [202, 2, 1, "", "get_parameters_by_name"], [202, 6, 1, "", "is_empty"], [202, 6, 1, "", "metadata"], [202, 6, 1, "", "parameter_names"], [202, 3, 1, "", "parameters"], [202, 2, 1, "", "to_dict"], [202, 2, 1, "", "to_json"], [202, 2, 1, "", "to_searchspace"], [202, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[202, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[202, 4, 1, "", "df"], [202, 4, 1, "", "empty_encoding"], [202, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[202, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[202, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[202, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[202, 4, 1, "", "boundary_only"], [202, 4, 1, "", "constraints"], [202, 4, 1, "", "max_nonzero"], [202, 4, 1, "", "max_sum"], [202, 4, 1, "", "min_nonzero"], [202, 4, 1, "", "product_parameters"], [202, 4, 1, "", "simplex_parameters"], [202, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates.params": [[202, 4, 1, "", "allow_recommending_already_measured"], [202, 4, 1, "", "allow_repeated_recommendations"], [202, 4, 1, "", "exclude"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[202, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[203, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[204, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[207, 5, 1, "", "get_transform_parameters"], [208, 5, 1, "", "validate_parameter_names"], [209, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[211, 0, 0, "-", "core"], [218, 0, 0, "-", "mixin"], [220, 0, 0, "-", "utils"]], "baybe.serialization.core": [[212, 5, 1, "", "block_deserialization_hook"], [213, 5, 1, "", "block_serialization_hook"], [214, 8, 1, "", "converter"], [215, 5, 1, "", "get_base_structure_hook"], [216, 5, 1, "", "select_constructor_hook"], [217, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[215, 4, 1, "", "base"], [215, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[217, 4, 1, "", "base"], [217, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[219, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[219, 2, 1, "", "from_dict"], [219, 2, 1, "", "from_json"], [219, 2, 1, "", "to_dict"], [219, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[219, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[219, 4, 1, "", "string"]], "baybe.serialization.utils": [[221, 5, 1, "", "deserialize_dataframe"], [222, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[224, 0, 0, "-", "core"], [226, 0, 0, "-", "lookup"], [228, 0, 0, "-", "scenarios"], [230, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[225, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[225, 4, 1, "", "batch_size"], [225, 4, 1, "", "campaign"], [225, 4, 1, "", "impute_mode"], [225, 4, 1, "", "initial_data"], [225, 4, 1, "", "lookup"], [225, 4, 1, "", "n_doe_iterations"], [225, 4, 1, "", "noise_percent"], [225, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[227, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[227, 4, 1, "", "impute_mode"], [227, 4, 1, "", "lookup"], [227, 4, 1, "", "queries"], [227, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[229, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[229, 4, 1, "", "batch_size"], [229, 4, 1, "", "groupby"], [229, 4, 1, "", "impute_mode"], [229, 4, 1, "", "initial_data"], [229, 4, 1, "", "lookup"], [229, 4, 1, "", "n_doe_iterations"], [229, 4, 1, "", "n_mc_iterations"], [229, 4, 1, "", "noise_percent"], [229, 4, 1, "", "random_seed"], [229, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[231, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[231, 4, 1, "", "batch_size"], [231, 4, 1, "", "campaign"], [231, 4, 1, "", "groupby"], [231, 4, 1, "", "lookup"], [231, 4, 1, "", "n_doe_iterations"], [231, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[233, 0, 0, "-", "bandit"], [235, 0, 0, "-", "base"], [239, 0, 0, "-", "custom"], [242, 0, 0, "-", "gaussian_process"], [257, 0, 0, "-", "linear"], [259, 0, 0, "-", "naive"], [261, 0, 0, "-", "ngboost"], [263, 0, 0, "-", "random_forest"], [265, 0, 0, "-", "utils"], [269, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[234, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "fit"], [234, 2, 1, "", "from_dict"], [234, 2, 1, "", "from_json"], [234, 2, 1, "", "posterior"], [234, 2, 1, "", "posterior_means"], [234, 2, 1, "", "posterior_modes"], [234, 3, 1, "", "prior"], [234, 3, 1, "", "supports_transfer_learning"], [234, 2, 1, "", "to_botorch"], [234, 2, 1, "", "to_dict"], [234, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[234, 4, 1, "", "measurements"], [234, 4, 1, "", "objective"], [234, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[234, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[234, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[234, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[236, 1, 1, "", "IndependentGaussianSurrogate"], [237, 1, 1, "", "Surrogate"], [238, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[236, 2, 1, "", "__init__"], [236, 2, 1, "", "fit"], [236, 2, 1, "", "from_dict"], [236, 2, 1, "", "from_json"], [236, 2, 1, "", "posterior"], [236, 3, 1, "", "supports_transfer_learning"], [236, 2, 1, "", "to_botorch"], [236, 2, 1, "", "to_dict"], [236, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[236, 4, 1, "", "measurements"], [236, 4, 1, "", "objective"], [236, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[236, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[236, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[236, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "fit"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 2, 1, "", "posterior"], [237, 3, 1, "", "supports_transfer_learning"], [237, 2, 1, "", "to_botorch"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[237, 4, 1, "", "measurements"], [237, 4, 1, "", "objective"], [237, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[237, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[237, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "fit"], [238, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[240, 1, 1, "", "CustomONNXSurrogate"], [241, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "default_model"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 3, 1, "", "onnx_input_name"], [240, 3, 1, "", "onnx_str"], [240, 2, 1, "", "posterior"], [240, 3, 1, "", "supports_transfer_learning"], [240, 2, 1, "", "to_botorch"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"], [240, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[240, 4, 1, "", "measurements"], [240, 4, 1, "", "objective"], [240, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[240, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[240, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[240, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[243, 0, 0, "-", "core"], [245, 0, 0, "-", "kernel_factory"], [249, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[244, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "fit"], [244, 2, 1, "", "from_dict"], [244, 2, 1, "", "from_json"], [244, 2, 1, "", "from_preset"], [244, 3, 1, "", "kernel_factory"], [244, 2, 1, "", "posterior"], [244, 3, 1, "", "supports_transfer_learning"], [244, 2, 1, "", "to_botorch"], [244, 2, 1, "", "to_dict"], [244, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[244, 4, 1, "", "measurements"], [244, 4, 1, "", "objective"], [244, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[244, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[244, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[244, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[246, 1, 1, "", "KernelFactory"], [247, 1, 1, "", "PlainKernelFactory"], [248, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[246, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[247, 2, 1, "", "__init__"], [247, 2, 1, "", "from_dict"], [247, 2, 1, "", "from_json"], [247, 3, 1, "", "kernel"], [247, 2, 1, "", "to_dict"], [247, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[247, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[247, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[250, 0, 0, "-", "core"], [253, 0, 0, "-", "default"], [255, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[251, 1, 1, "", "GaussianProcessPreset"], [252, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[251, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[254, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[254, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[256, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[256, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[258, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 3, 1, "", "model_params"], [258, 2, 1, "", "posterior"], [258, 3, 1, "", "supports_transfer_learning"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[258, 4, 1, "", "measurements"], [258, 4, 1, "", "objective"], [258, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[258, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[260, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 2, 1, "", "posterior"], [260, 3, 1, "", "supports_transfer_learning"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[260, 4, 1, "", "measurements"], [260, 4, 1, "", "objective"], [260, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[260, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[262, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "model_params"], [262, 2, 1, "", "posterior"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[264, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "model_params"], [264, 2, 1, "", "posterior"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[266, 5, 1, "", "batchify_ensemble_predictor"], [267, 5, 1, "", "batchify_mean_var_prediction"], [268, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[266, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[268, 4, 1, "", "cls"], [268, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[270, 5, 1, "", "get_model_params_validator"], [271, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[270, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[271, 4, 1, "", "model_cls"]], "baybe.targets": [[273, 0, 0, "-", "base"], [275, 0, 0, "-", "binary"], [278, 0, 0, "-", "enum"], [281, 0, 0, "-", "numerical"], [283, 0, 0, "-", "transforms"]], "baybe.targets.base": [[274, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "from_dict"], [274, 2, 1, "", "from_json"], [274, 3, 1, "", "name"], [274, 2, 1, "", "summary"], [274, 2, 1, "", "to_dict"], [274, 2, 1, "", "to_json"], [274, 2, 1, "", "to_objective"], [274, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[274, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[274, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[274, 4, 1, "", "series"]], "baybe.targets.binary": [[276, 1, 1, "", "BinaryTarget"], [277, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[276, 2, 1, "", "__init__"], [276, 3, 1, "", "failure_value"], [276, 2, 1, "", "from_dict"], [276, 2, 1, "", "from_json"], [276, 3, 1, "", "name"], [276, 3, 1, "", "success_value"], [276, 2, 1, "", "summary"], [276, 2, 1, "", "to_dict"], [276, 2, 1, "", "to_json"], [276, 2, 1, "", "to_objective"], [276, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[276, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[276, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[276, 4, 1, "", "series"]], "baybe.targets.enum": [[279, 1, 1, "", "TargetMode"], [280, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[279, 3, 1, "", "MATCH"], [279, 3, 1, "", "MAX"], [279, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[280, 3, 1, "", "BELL"], [280, 3, 1, "", "LINEAR"], [280, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[282, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[282, 2, 1, "", "__init__"], [282, 3, 1, "", "bounds"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 3, 1, "", "mode"], [282, 3, 1, "", "name"], [282, 2, 1, "", "summary"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"], [282, 2, 1, "", "to_objective"], [282, 2, 1, "", "transform"], [282, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[282, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[282, 4, 1, "", "series"]], "baybe.targets.transforms": [[284, 5, 1, "", "bell_transform"], [285, 5, 1, "", "linear_transform"], [286, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[284, 4, 1, "", "arr"], [284, 4, 1, "", "lower"], [284, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[285, 4, 1, "", "arr"], [285, 4, 1, "", "descending"], [285, 4, 1, "", "lower"], [285, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[286, 4, 1, "", "arr"], [286, 4, 1, "", "lower"], [286, 4, 1, "", "upper"]], "baybe.telemetry": [[288, 5, 1, "", "get_user_details"], [289, 5, 1, "", "is_enabled"], [290, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [291, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[290, 4, 1, "", "cached_recommendation"], [290, 4, 1, "", "measurements"], [290, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [290, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[291, 4, 1, "", "instrument_name"], [291, 4, 1, "", "value"]], "baybe.utils": [[293, 0, 0, "-", "augmentation"], [296, 0, 0, "-", "basic"], [309, 0, 0, "-", "boolean"], [313, 0, 0, "-", "chemistry"], [318, 0, 0, "-", "conversion"], [321, 0, 0, "-", "dataframe"], [334, 0, 0, "-", "interval"], [339, 0, 0, "-", "memory"], [341, 0, 0, "-", "numerical"], [348, 0, 0, "-", "plotting"], [352, 0, 0, "-", "random"], [355, 0, 0, "-", "sampling_algorithms"], [359, 0, 0, "-", "scaling"], [361, 0, 0, "-", "torch"], [364, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[294, 5, 1, "", "df_apply_dependency_augmentation"], [295, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[294, 4, 1, "", "affected"], [294, 4, 1, "", "causing"], [294, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[295, 4, 1, "", "column_groups"], [295, 4, 1, "", "df"]], "baybe.utils.basic": [[297, 1, 1, "", "Dummy"], [298, 1, 1, "", "classproperty"], [299, 5, 1, "", "find_subclass"], [300, 5, 1, "", "get_baseclasses"], [301, 5, 1, "", "get_subclasses"], [302, 5, 1, "", "group_duplicate_values"], [303, 5, 1, "", "hilberts_factory"], [304, 5, 1, "", "is_all_instance"], [305, 5, 1, "", "match_attributes"], [306, 5, 1, "", "refers_to"], [307, 5, 1, "", "register_hooks"], [308, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[297, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[298, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[300, 4, 1, "", "abstract"], [300, 4, 1, "", "cls"], [300, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[301, 4, 1, "", "abstract"], [301, 4, 1, "", "cls"], [301, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[302, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[305, 4, 1, "", "callable_"], [305, 4, 1, "", "ignore"], [305, 4, 1, "", "object"], [305, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[307, 4, 1, "", "post_hooks"], [307, 4, 1, "", "pre_hooks"], [307, 4, 1, "", "target"]], "baybe.utils.boolean": [[310, 5, 1, "", "check_if_in"], [311, 5, 1, "", "is_abstract"], [312, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[310, 4, 1, "", "allowed"], [310, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[311, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[312, 4, 1, "", "val"]], "baybe.utils.chemistry": [[314, 5, 1, "", "get_canonical_smiles"], [315, 5, 1, "", "get_fingerprint_class"], [316, 5, 1, "", "name_to_smiles"], [317, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[315, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[316, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[317, 4, 1, "", "encoding"], [317, 4, 1, "", "kwargs_conformer"], [317, 4, 1, "", "kwargs_fingerprint"], [317, 4, 1, "", "prefix"], [317, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[319, 5, 1, "", "fraction_to_float"], [320, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[319, 4, 1, "", "value"]], "baybe.utils.dataframe": [[322, 5, 1, "", "add_fake_measurements"], [323, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [324, 5, 1, "", "add_parameter_noise"], [325, 5, 1, "", "arrays_to_dataframes"], [326, 5, 1, "", "df_drop_single_value_columns"], [327, 5, 1, "", "df_drop_string_columns"], [328, 5, 1, "", "df_uncorrelated_features"], [329, 5, 1, "", "filter_df"], [330, 5, 1, "", "fuzzy_row_match"], [331, 5, 1, "", "get_transform_objects"], [332, 5, 1, "", "pretty_print_df"], [333, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[322, 4, 1, "", "bad_intervals"], [322, 4, 1, "", "data"], [322, 4, 1, "", "good_intervals"], [322, 4, 1, "", "good_reference_values"], [322, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[323, 4, 1, "", "df"], [323, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[324, 4, 1, "", "data"], [324, 4, 1, "", "noise_level"], [324, 4, 1, "", "noise_type"], [324, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[325, 4, 1, "", "input_labels"], [325, 4, 1, "", "output_labels"], [325, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[326, 4, 1, "", "df"], [326, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[327, 4, 1, "", "df"], [327, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[328, 4, 1, "", "df"], [328, 4, 1, "", "exclude_list"], [328, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[329, 4, 1, "", "complement"], [329, 4, 1, "", "df"], [329, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[330, 4, 1, "", "left_df"], [330, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [330, 4, 1, "", "parameters"], [330, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[331, 4, 1, "", "allow_extra"], [331, 4, 1, "", "allow_missing"], [331, 4, 1, "", "df"], [331, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[332, 4, 1, "", "df"], [332, 4, 1, "", "max_columns"], [332, 4, 1, "", "max_colwidth"], [332, 4, 1, "", "max_rows"], [332, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[333, 4, 1, "", "*x"]], "baybe.utils.interval": [[335, 7, 1, "", "InfiniteIntervalError"], [336, 1, 1, "", "Interval"], [337, 5, 1, "", "convert_bounds"], [338, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[335, 2, 1, "", "__init__"], [335, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[336, 2, 1, "", "__init__"], [336, 6, 1, "", "center"], [336, 2, 1, "", "contains"], [336, 2, 1, "", "create"], [336, 2, 1, "", "from_dict"], [336, 2, 1, "", "from_json"], [336, 6, 1, "", "is_bounded"], [336, 6, 1, "", "is_degenerate"], [336, 6, 1, "", "is_fully_unbounded"], [336, 6, 1, "", "is_half_bounded"], [336, 6, 1, "", "is_left_bounded"], [336, 6, 1, "", "is_right_bounded"], [336, 3, 1, "", "lower"], [336, 2, 1, "", "to_dict"], [336, 2, 1, "", "to_json"], [336, 2, 1, "", "to_ndarray"], [336, 2, 1, "", "to_tensor"], [336, 2, 1, "", "to_tuple"], [336, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[336, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[336, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[336, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[337, 4, 1, "", "bounds"]], "baybe.utils.memory": [[340, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[340, 4, 1, "", "num"]], "baybe.utils.numerical": [[342, 3, 1, "", "DTypeFloatNumpy"], [343, 3, 1, "", "DTypeFloatONNX"], [344, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [345, 5, 1, "", "closer_element"], [346, 5, 1, "", "closest_element"], [347, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[345, 4, 1, "", "target"], [345, 4, 1, "", "x"], [345, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[346, 4, 1, "", "array"], [346, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[347, 4, 1, "", "arr"], [347, 4, 1, "", "weights"]], "baybe.utils.plotting": [[349, 5, 1, "", "create_example_plots"], [350, 5, 1, "", "indent"], [351, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[349, 4, 1, "", "ax"], [349, 4, 1, "", "base_name"], [349, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[351, 4, 1, "", "*fields"], [351, 4, 1, "", "header"], [351, 4, 1, "", "single_line"]], "baybe.utils.random": [[353, 5, 1, "", "set_random_seed"], [354, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[353, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[354, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[356, 1, 1, "", "DiscreteSamplingMethod"], [357, 5, 1, "", "farthest_point_sampling"], [358, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[356, 3, 1, "", "FPS"], [356, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[357, 4, 1, "", "initialization"], [357, 4, 1, "", "n_samples"], [357, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "method"], [358, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[360, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[360, 2, 1, "", "__init__"], [360, 2, 1, "", "fit"], [360, 3, 1, "", "mapping"], [360, 2, 1, "", "transform"]], "baybe.utils.torch": [[362, 8, 1, "", "DTypeFloatTorch"], [363, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[365, 5, 1, "", "finite_float"], [366, 5, 1, "", "non_inf_float"], [367, 5, 1, "", "non_nan_float"], [368, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 178, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 303, 333, 336, 369, 372, 379, 383, 386, 387, 390, 391, 393, 394, 395, 396, 397, 403, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431], "0": [8, 18, 30, 40, 41, 47, 94, 129, 137, 140, 158, 178, 202, 225, 227, 284, 285, 286, 294, 295, 312, 323, 324, 328, 329, 343, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 416, 417, 420, 423, 424, 426, 427, 428, 430, 433], "00": [402, 426], "000": [383, 404], "000138": 398, "001": [323, 420], "0011061920000088321": 386, "004019": 394, "005": [371, 372, 373, 375, 376], "01": [158, 378, 379, 384, 387, 401, 402, 409], "014144": 376, "02": 409, "021": [256, 328], "025298": 394, "027261": 394, "029894": 394, "03213": [256, 328], "041461": 402, "05": 409, "053246": 401, "057": [371, 372, 373, 375, 376, 386], "057246": 394, "06": [202, 268], "067543": 402, "072884": 375, "073406": 400, "075674": 400, "08": 409, "096398": 400, "09653736976391157": 396, "0f": 387, "1": [22, 27, 40, 94, 115, 129, 140, 166, 168, 178, 194, 225, 227, 229, 231, 284, 285, 286, 291, 294, 295, 302, 312, 324, 329, 343, 347, 357, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 412, 416, 419, 420, 423, 424, 426, 427, 428, 430, 433], "10": [178, 227, 256, 328, 370, 372, 381, 382, 383, 384, 387, 390, 391, 393, 394, 396, 398, 400, 402, 404, 405, 406, 408, 409, 411, 418, 424, 428, 433], "100": [375, 376, 381, 382, 383, 384, 387, 390, 391, 393, 394, 398, 404, 409, 422, 423, 424, 428, 430, 433], "1000": 428, "1024": [134, 413, 424], "1038": [256, 328], "105": [371, 372, 373, 375, 376, 386, 398, 426], "11": [298, 393, 394, 412], "111": 404, "1147": 383, "1148": 383, "1149": 383, "1150": 383, "12": [393, 394, 402, 414, 426], "120": [371, 372, 373, 375, 376, 381, 383, 386, 424], "120000": 401, "120637": 400, "122": 404, "123335": 400, "124948": 400, "125": 401, "125222": 402, "126": [381, 383, 384, 412], "126160": 398, "1268824": [371, 372, 373], "128": 10, "13": [393, 394, 408, 426], "1337": [387, 388, 433], "136085": 400, "138561": 400, "139383": 394, "14": [393, 426], "14448993259018328": 396, "1454": 413, "15": [227, 383, 393, 394, 408, 409, 411, 419, 426], "150": [381, 384, 420], "1500": 424, "151": 383, "151666": 400, "153": [371, 372, 373, 375, 376, 386, 402], "154272": 398, "16": [332, 343, 393, 394], "160": 402, "166887": 394, "17": [393, 394], "170696": 400, "173": 401, "177": [398, 404], "18": [393, 394, 419], "180": 381, "183034": 394, "183863": 376, "188": 404, "19": [393, 394], "191193": 398, "192": 383, "193024": 398, "1e": [202, 268], "2": [8, 18, 94, 96, 115, 227, 294, 295, 302, 322, 329, 347, 357, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 416, 419, 420, 422, 423, 424, 426, 427, 428, 430], "20": [140, 227, 370, 371, 372, 373, 387, 388, 393, 394, 398, 413, 424, 431, 433], "200": [372, 381, 383, 390, 391, 396, 404], "2004": 416, "2007": 431, "2021": 372, "2022": 411, "2024": 411, "208286": 394, "21": [393, 394, 405], "213664": 394, "217458": 394, "22": [393, 394, 398], "221": 413, "222": 404, "222551": 394, "226204": 376, "23": [393, 394, 428], "230": 401, "232538": 394, "232582": 394, "239071": 400, "24": [382, 393, 426], "241": 424, "245841": 398, "25": [387, 393, 394, 408, 426], "250": 417, "254266": 394, "255632": 394, "26": [393, 402, 426], "261131": 402, "27": [393, 394, 426], "270523": 394, "272588": 400, "276041": 400, "277": 398, "278": 398, "279": 398, "279531": 394, "28": [393, 394, 398], "280": 398, "283810": 394, "289": 376, "29": [390, 393, 394, 398, 411], "298881": 398, "3": [227, 294, 295, 298, 302, 329, 332, 350, 371, 372, 373, 376, 379, 381, 382, 383, 384, 386, 388, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 408, 409, 411, 412, 414, 416, 419, 420, 422, 424, 426, 427, 428, 430, 431], "30": [370, 384, 388, 393, 398, 424], "3078f3": 413, "309425": 394, "31": [393, 405], "312744": 400, "319758": 394, "32": [375, 382, 393, 424], "322535": 394, "322697": 400, "325965": 394, "33": [382, 393, 398], "334669": 398, "34": 382, "342016": 394, "344": 376, "35": [382, 393], "351863": 375, "352714": 398, "353270": 394, "361124": 398, "365240": 398, "365989": 398, "369135": 400, "37": 398, "383": 375, "388": 376, "388817": 402, "39": [398, 424], "391500": 394, "396760": 400, "398735": 394, "3d": 388, "4": [134, 294, 295, 332, 378, 379, 381, 382, 383, 384, 388, 393, 394, 396, 398, 400, 401, 402, 411, 416, 419, 420, 424, 426], "40": [393, 423, 424], "401313": 394, "403": 375, "41": 398, "42": 396, "421964": 394, "425410": 402, "425813": 398, "428819": 400, "434570": 394, "44": 398, "444938": 394, "447": 381, "448": 381, "449": 381, "45": [393, 394, 398, 430], "450": 381, "458680": 400, "46": 394, "468328": 394, "47": [394, 398], "470595": 394, "476306": 400, "48": 398, "480088": 400, "483199": 400, "49": 398, "493377": 394, "493972": 394, "497257": 398, "5": [94, 140, 294, 295, 371, 373, 378, 381, 382, 383, 384, 387, 390, 391, 393, 394, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 416, 417, 418, 419, 420, 422, 424, 426, 428, 431, 433], "50": [384, 391, 393, 396, 408, 409, 416, 417, 424, 426, 430], "500": [388, 424], "500374": 400, "5066666666666667": 396, "51": 398, "511686": 394, "511754": 394, "518020": 398, "52": 398, "53": 398, "5313": 308, "532098": 394, "533869": 402, "54": [394, 398, 411], "543671": 400, "55": [394, 398, 430], "552643": 400, "555867": 398, "559335": 394, "56": [398, 428], "561906": 398, "564713": 398, "566141": 394, "57": 398, "570601": 398, "577129": 394, "587120": 400, "59": [394, 404, 411], "590": 372, "590575": 394, "592690": 394, "592906": 400, "594693": 398, "6": [294, 295, 332, 371, 372, 373, 381, 382, 383, 384, 393, 394, 396, 398, 400, 402, 404, 416, 420, 426], "60": [398, 423], "604032": 394, "605161": 398, "605189": 400, "607306": 398, "61": 402, "613794": 398, "615345": 398, "616745": 394, "619616": 398, "62": 396, "622180": 398, "625907": 394, "638087": 394, "638854": 394, "638917": 398, "64": 178, "640843": 394, "647934": 402, "65": 396, "66": 398, "66368270ffd51418ec58bd793f2d9b1b": 431, "670731": 400, "674969": 400, "676225": 398, "677137": 394, "682839": 398, "69": [371, 372, 373, 394], "691900": 398, "695024": 398, "7": [140, 294, 295, 328, 382, 384, 388, 393, 394, 398, 400, 408, 416, 424, 426], "70": [393, 394], "701663": 394, "706088": 402, "706667": 401, "71": 424, "710652": 400, "722216": 400, "722811": 402, "725418": 394, "726554": 394, "729559": 400, "73": 398, "730442": 401, "74": 398, "741925": 400, "742369": 394, "744958": 394, "745": 433, "75": [393, 401, 426], "755425": 394, "77": 398, "773873": 398, "778": 404, "782210": 394, "783131": 400, "786205": 398, "79": 411, "791694": 394, "797376": 402, "7gz": 424, "7hf": 424, "8": [295, 371, 373, 376, 381, 383, 384, 393, 394, 396, 398, 400, 411, 416, 420], "80": [394, 398, 420], "805742": 394, "81": 398, "810932": 394, "821238": 394, "827486": 394, "830106": 394, "8389": 308, "840228": 394, "8417": 308, "843673": 394, "845464": 394, "849951": 394, "857": 383, "861": 384, "862": 384, "863": 384, "864": 384, "87": 404, "871787": 394, "875589": 394, "879268": 394, "88": 404, "881539": 394, "8859": 390, "889": 404, "89": [372, 401, 404], "8jq": 424, "9": [375, 384, 388, 393, 394, 398, 400, 416, 419, 426, 427], "90": [371, 372, 373, 375, 376, 386, 404, 426], "902026": 400, "906775": 394, "912229": 398, "920052": 394, "931077": 394, "939427": 394, "939718": 398, "940750": 402, "95": 398, "951441": 394, "954884": 400, "96": 372, "964639": 394, "968163": 400, "97": 398, "979430": 400, "980825": 394, "993056": 394, "994763": 394, "998028": 400, "999": 420, "999081": 398, "A": [0, 8, 18, 22, 27, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 68, 69, 70, 73, 75, 77, 82, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 114, 115, 119, 123, 126, 127, 129, 137, 140, 142, 151, 152, 153, 154, 155, 156, 157, 158, 161, 166, 167, 168, 170, 173, 176, 178, 180, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 203, 204, 219, 220, 225, 227, 229, 231, 234, 236, 237, 240, 244, 246, 247, 254, 256, 258, 260, 262, 264, 270, 274, 276, 282, 284, 285, 286, 294, 298, 300, 301, 302, 305, 315, 322, 328, 329, 331, 340, 347, 355, 357, 360, 370, 382, 391, 393, 394, 396, 398, 405, 406, 412, 413, 414, 416, 420, 422, 424, 425, 426, 427, 430, 431], "AND": [50, 383, 416, 420], "AS": [411, 416], "And": 390, "As": [371, 372, 373, 388, 396, 398, 408, 409, 411, 412, 413, 420, 422, 425, 426, 428], "At": 430, "But": 430, "By": [82, 114, 127, 142, 202, 311, 329, 394, 414, 421, 425, 426], "FOR": 416, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 148, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 225, 231, 234, 236, 237, 238, 240, 244, 247, 254, 256, 258, 260, 262, 264, 274, 276, 282, 287, 307, 330, 336, 349, 360, 371, 372, 373, 375, 376, 382, 386, 387, 388, 393, 394, 396, 398, 402, 408, 409, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 82, 86, 109, 114, 115, 119, 142, 146, 147, 166, 167, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 208, 209, 225, 227, 229, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 285, 290, 295, 300, 301, 305, 307, 310, 312, 315, 319, 322, 323, 324, 328, 329, 330, 331, 349, 351, 357, 358, 376, 378, 387, 393, 401, 402, 405, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 433], "In": [27, 41, 53, 164, 166, 167, 168, 178, 196, 223, 225, 305, 332, 371, 372, 373, 375, 387, 388, 390, 393, 394, 396, 398, 401, 402, 405, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "It": [22, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 223, 239, 260, 322, 371, 375, 376, 382, 391, 393, 396, 398, 402, 404, 405, 406, 408, 411, 418, 419, 420, 421, 424, 425, 426, 428, 433], "Its": [227, 390], "No": [400, 413], "Not": [416, 420], "OF": [411, 416], "OR": [411, 416], "Of": [376, 385, 410, 427], "On": [390, 396], "One": [131, 371, 373, 411], "Or": 421, "Such": [376, 420, 428], "That": [196, 227, 234, 236, 237, 240, 244, 258, 260, 262, 264, 285, 376, 381, 393, 414, 426, 428, 431], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 82, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 148, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 214, 215, 217, 219, 223, 225, 227, 229, 234, 236, 237, 238, 240, 244, 247, 258, 260, 262, 264, 266, 268, 270, 271, 274, 276, 279, 282, 284, 285, 286, 288, 290, 291, 294, 295, 298, 300, 301, 302, 305, 307, 310, 311, 312, 315, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 345, 346, 347, 349, 351, 353, 354, 357, 358, 371, 372, 373, 376, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 398, 401, 402, 406, 408, 409, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433], "Then": 388, "There": [72, 268, 343, 393, 400, 411, 412, 414, 418, 426], "These": [288, 369, 372, 373, 374, 377, 380, 385, 389, 392, 395, 397, 399, 403, 407, 414, 418, 420, 421, 424, 426], "To": [371, 376, 387, 388, 394, 396, 404, 408, 409, 411, 412, 414, 418, 419, 421, 424, 428], "Will": 417, "With": [322, 387, 388, 393, 396, 408, 409, 411, 418, 420, 424, 427], "_": [146, 147, 199, 205, 212, 349, 378, 387, 409], "__class__": [386, 396], "__excepthook__": 412, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 234, 236, 237, 238, 240, 244, 246, 247, 254, 256, 258, 260, 262, 264, 274, 276, 282, 297, 298, 335, 336, 360, 426, 427], "__name__": [386, 396], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 131, 132, 134, 335], "__str__": 413, "__version__": 413, "_amount": 393, "_arraylik": 325, "_c": 301, "_cumbest": 225, "_default_my_attribut": 414, "_fit": 271, "_iterbest": 225, "_label": 393, "_measur": 225, "_n_last_measur": 166, "_nbase": 317, "_nestedsequ": [115, 284, 285, 286, 346], "_no_tl": 408, "_option": 413, "_posterior": 271, "_step": 166, "_supportsarrai": [115, 284, 285, 286, 346], "_surrogate_model": [387, 388], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 207, 215, 216, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 302, 303, 304, 320, 331, 336], "_target": 413, "_tparamet": 142, "_tsurrog": 267, "_u": 302, "_validate_my_attribut": 414, "a1": 295, "a2": 295, "ab": [384, 393], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 299, 306, 413, 432], "abc": [20, 30, 31, 32, 33, 34, 36, 89, 90, 91, 109, 123, 124, 150, 164, 173, 176, 183, 188, 236, 237, 274, 311], "abil": [417, 431], "abl": [388, 412, 418, 420, 424, 427, 433], "about": [22, 27, 124, 140, 274, 291, 371, 372, 373, 393, 401, 402, 411, 413, 414, 422, 424, 426], "abov": [268, 286, 311, 328, 370, 376, 383, 384, 386, 387, 394, 400, 411, 414, 416, 417, 418, 419, 420, 421, 424, 427, 428, 431], "absenc": 423, "absolut": [137, 324, 411], "abstract": [20, 30, 31, 32, 33, 34, 36, 89, 90, 91, 109, 122, 123, 124, 150, 164, 173, 176, 183, 237, 274, 300, 301, 311, 413, 420, 431], "abstractli": 396, "acceler": [411, 413, 415, 431], "accept": [27, 166, 244, 325, 330, 387, 388, 413, 416, 421, 423, 424, 428, 430], "access": [194, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 371, 372, 373, 381, 386, 409, 413, 420, 427], "accord": [40, 162, 394, 417, 420, 421, 425, 433], "accordingli": [178, 419, 427], "account": 418, "accumul": [152, 396, 431], "accur": 419, "acet": [371, 372, 373, 375, 376], "aceton": 393, "achiev": [17, 202, 388, 393, 396, 411, 414, 417, 419, 420], "ack": 411, "acq_funct": 376, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 387, 388, 396], "acqf1": 427, "acqf2": 427, "acqf_valu": 387, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 69, 176, 178, 381, 382, 383, 384, 387, 388, 396, 398, 404, 411, 413, 417, 425, 427, 429], "acquisition_funct": [176, 178, 376, 396, 405, 406, 413], "acquisition_function_cl": [176, 178, 413], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 176, 178, 396, 427], "across": [393, 396, 408, 418, 425, 431], "act": [393, 413, 416, 420, 428], "action": [17, 386, 396, 413, 432], "activ": [13, 30, 127, 168, 387, 388, 396, 411, 412, 413, 414, 420, 421, 422, 423, 425, 431, 432, 433], "active_dim": [89, 90, 91, 94, 96, 98, 99, 100], "active_valu": [127, 408, 409, 431], "actual": [166, 196, 223, 401, 413, 422, 426, 428, 431, 433], "ad": [27, 202, 290, 294, 322, 357, 393, 394, 414, 417, 421, 422, 423, 424, 429, 430, 432], "adapt": [256, 312, 328], "add": [27, 217, 227, 322, 323, 376, 390, 391, 393, 398, 408, 411, 416, 418, 419, 420, 426, 431, 433], "add_collection3d": 388, "add_fake_measur": [375, 376, 381, 382, 383, 384, 390, 391, 398, 413, 418, 428, 433], "add_fake_result": 413, "add_measur": [27, 375, 376, 378, 379, 381, 382, 383, 384, 388, 390, 391, 396, 398, 401, 402, 411, 413, 418, 419, 421], "add_noise_to_perturb_degenerate_row": 413, "add_parameter_nois": [413, 433], "add_subplot": 388, "addendum": 416, "addit": [27, 82, 109, 114, 119, 166, 178, 196, 217, 225, 227, 229, 324, 371, 372, 373, 394, 401, 409, 411, 413, 415, 416, 419, 420, 421, 422, 423, 424, 426, 427, 428, 431, 433], "addition": [386, 394, 411, 422], "additiveexplain": [80, 83], "additivekernel": 413, "address": 428, "adher": [413, 414], "adjust": [372, 376, 401, 413], "adopt": 376, "adrian": [411, 415], "advanc": [396, 412, 413, 421, 427, 431, 432], "advantag": [393, 414], "advic": 414, "advis": [416, 428], "affect": [27, 49, 178, 294, 386, 404, 412, 420], "affected_paramet": [49, 381, 382, 383, 384, 393, 420], "affili": [411, 421], "afford": 419, "aforement": [196, 421], "after": [168, 202, 307, 375, 376, 381, 382, 383, 384, 388, 398, 404, 411, 419, 422, 427], "afterward": 427, "again": [387, 418, 420, 425, 431], "against": [76, 290, 305, 393, 416, 431], "agent": 394, "agraw": 415, "agre": [411, 416, 422], "agreement": 416, "ai": [87, 148, 343], "aim": [419, 422], "akin": 418, "al": [372, 411, 424], "aldrich": 415, "alex": 415, "alexand": [411, 415], "algorithm": [171, 178, 322, 355, 357, 370, 393, 398, 411, 413, 418, 422, 425], "alia": [139, 180, 424], "alias": 413, "align": [82, 194, 307, 387, 426, 431], "all": [19, 20, 29, 31, 36, 49, 51, 88, 89, 90, 91, 108, 109, 114, 121, 124, 127, 129, 133, 140, 149, 150, 160, 163, 164, 166, 172, 173, 175, 178, 182, 183, 196, 203, 204, 227, 234, 235, 237, 273, 274, 294, 304, 305, 322, 371, 372, 373, 376, 378, 379, 381, 382, 386, 387, 388, 393, 394, 396, 398, 400, 401, 408, 409, 411, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "allclos": [378, 379, 394], "alleg": 416, "allow": [17, 30, 40, 47, 51, 109, 114, 119, 137, 142, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 202, 229, 291, 310, 330, 331, 371, 372, 373, 376, 393, 394, 408, 409, 411, 413, 417, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 433], "allow_extra": [109, 114, 119, 194, 196, 202, 207, 331, 398, 413], "allow_miss": [109, 114, 119, 194, 196, 202, 207, 331, 413], "allow_recommending_already_measur": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 376, 387, 396, 405, 406, 413, 425], "allow_recommending_pending_experi": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 413, 418, 425], "allow_repeated_recommend": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 376, 387, 396, 405, 406, 413, 425], "almost": 372, "alon": [413, 416], "along": [347, 416, 424, 431], "alongsid": 416, "alpha": [152, 388], "alphabet": [143, 413], "alreadi": [27, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 376, 393, 402, 411, 413, 417, 418, 425, 426, 428, 429, 431, 433], "also": [53, 82, 142, 234, 236, 237, 240, 244, 258, 260, 262, 264, 291, 305, 307, 322, 323, 324, 371, 378, 379, 387, 388, 390, 391, 393, 398, 401, 402, 404, 408, 409, 411, 413, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "alter": [393, 413, 419], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 268, 347, 386, 393, 394, 400, 411, 413, 432, 433], "although": [393, 402, 405, 426, 428], "alwai": [13, 27, 36, 212, 213, 390, 393, 394, 411, 417, 419, 420, 428, 429, 431, 433], "ambigu": [137, 426], "amend": 420, "among": [30, 393, 411, 431], "amount": [295, 350, 358, 394, 408, 409, 418, 422, 424, 433], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 69, 74, 76, 77, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 110, 112, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 215, 217, 219, 223, 225, 227, 229, 234, 236, 237, 240, 241, 244, 247, 258, 260, 262, 264, 266, 267, 274, 276, 282, 294, 303, 305, 307, 310, 316, 320, 328, 329, 330, 332, 335, 336, 337, 346, 349, 351, 357, 358, 371, 373, 374, 376, 383, 384, 386, 387, 390, 391, 394, 398, 400, 404, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "analog": [196, 322, 426, 427], "analogi": [162, 425], "analysi": [411, 422, 429], "analyt": [3, 4, 7, 8, 69, 428, 431], "analyz": [411, 414, 422], "angl": 388, "ani": [57, 58, 82, 115, 122, 123, 124, 126, 127, 129, 140, 142, 145, 146, 147, 202, 212, 213, 217, 221, 222, 229, 258, 262, 264, 284, 285, 286, 291, 294, 304, 305, 307, 308, 310, 311, 330, 336, 338, 346, 351, 365, 366, 367, 368, 386, 393, 408, 409, 411, 412, 413, 414, 416, 418, 419, 421, 424, 427, 428, 431], "annot": [307, 386, 416], "anonym": [411, 421], "anoth": [49, 337, 372, 382, 383, 390, 391, 393, 402, 414, 420, 431], "ansatz": 413, "answer": 419, "anti": 329, "anymor": [413, 431], "anyth": 312, "anywai": 429, "anywher": 378, "apach": [411, 416], "apart": [414, 419], "api": [41, 411, 412, 427], "aplei": 422, "appar": 427, "appdata": 412, "appear": [305, 412, 413, 416, 427], "append": [388, 409], "appendix": 416, "appli": [27, 36, 37, 38, 53, 178, 196, 223, 225, 305, 316, 324, 360, 376, 377, 380, 381, 383, 384, 386, 387, 393, 408, 412, 413, 416, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431], "applic": [351, 411, 414, 416, 424, 425, 428], "approach": [202, 387, 396, 411, 414, 417, 419, 425, 427, 431], "appropri": [43, 44, 106, 202, 396, 414, 416, 426], "approxim": [10, 17, 422], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 70, 71, 72, 82, 109, 114, 115, 119, 127, 140, 142, 147, 161, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 225, 227, 229, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 286, 288, 290, 291, 294, 295, 300, 301, 302, 304, 305, 307, 311, 312, 322, 323, 325, 326, 330, 331, 349, 357, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 391, 393, 394, 396, 398, 400, 401, 404, 405, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "arang": [378, 388, 424], "arbitrari": [167, 196, 338, 413, 420, 424, 425, 428, 431, 433], "arbitrarili": [423, 427], "architectur": [271, 413, 429, 431], "ard_num_dim": [89, 90, 91, 94, 96, 98, 99, 100], "area": 388, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 93, 95, 97, 102, 103, 104, 150, 152, 153, 154, 155, 156, 157, 158, 161, 180, 238, 241, 246, 335, 414], "argu": 393, "argument": [77, 82, 87, 140, 142, 148, 164, 166, 167, 168, 194, 202, 238, 307, 329, 376, 391, 398, 413, 420, 422, 424, 425, 426, 427, 428, 431], "aris": [52, 393, 413, 416, 420, 427, 433], "arithmet": [117, 423], "arizona": 415, "arm": [233, 234, 410, 415], "arm_index": 396, "around": [187, 229, 231, 398, 413, 425, 427, 433], "arr": [284, 285, 286, 347], "arrai": [115, 284, 285, 286, 297, 325, 333, 342, 346, 347, 357, 388, 413, 425, 429], "arrays_to_datafram": [378, 379, 388, 401, 402, 408, 409, 413, 428], "arriv": 411, "artifici": 433, "aryl": [371, 372, 373, 375, 411, 424], "ascend": 398, "ask": [393, 411, 413, 414, 419], "aspect": [374, 378, 379, 402, 418, 421], "assembl": [393, 427], "assembli": 432, "assert": [58, 381, 382, 383, 384, 390, 391, 393, 394, 400, 404, 413, 416, 419, 420, 427], "assess": 428, "assign": [322, 387, 394, 400, 424], "associ": [196, 396, 416, 419, 421, 423, 431], "assum": [22, 41, 239, 307, 331, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 390, 391, 393, 396, 398, 401, 402, 404, 411, 416, 420, 424, 427, 429, 430, 433], "assumpt": 428, "assur": 420, "asynchron": [411, 425, 432], "atol": [378, 379], "atompair": 134, "atompairfingerprint": 134, "attach": [22, 307, 386, 387, 388, 416], "attempt": [68, 74, 239, 349, 396, 412, 413, 418, 420, 425], "attent": 168, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 234, 236, 237, 240, 244, 247, 254, 256, 258, 260, 262, 264, 274, 276, 282, 305, 308, 336, 360, 368, 413], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 79, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 138, 140, 142, 145, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 201, 202, 211, 215, 217, 234, 236, 237, 240, 244, 247, 251, 254, 256, 258, 260, 262, 264, 271, 274, 275, 276, 279, 280, 282, 305, 320, 331, 336, 341, 356, 360, 361, 364, 365, 366, 367, 368, 400, 413, 414, 416, 425, 427, 429, 430], "audit": [411, 413, 414], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 196, 266, 267, 268, 413, 419], "author": 416, "authorship": 416, "auto": [12, 14, 413, 415], "auto_tutori": 343, "autocorr": 134, "autocorrfingerprint": 134, "autodoc": 413, "automat": [27, 112, 178, 244, 330, 370, 388, 401, 412, 413, 414, 422, 423, 425, 426, 431, 432], "avaialbl": 422, "avail": [2, 117, 129, 131, 132, 134, 140, 164, 166, 167, 168, 202, 225, 227, 251, 279, 280, 291, 356, 357, 358, 373, 375, 378, 379, 393, 398, 401, 402, 411, 412, 413, 414, 416, 418, 419, 421, 422, 424, 425, 426, 427, 428, 431, 432], "available_acq_funct": 376, "avalon": 134, "avalonfingerprint": 134, "averag": [260, 387, 388, 409, 424, 428], "avoid": [196, 308, 347, 413, 414, 418, 419, 424, 426], "awai": 430, "awar": [393, 408, 409, 417, 427], "ax": [82, 349, 370, 372, 387, 388, 408, 409], "axes3d": [349, 388], "axi": [194, 225, 347, 370, 378, 379, 384, 387, 388, 393, 394, 396, 398, 401, 402, 408, 409, 426], "azim": 388, "azur": 413, "b": [52, 158, 256, 294, 302, 328, 329, 372, 382, 391, 396, 405, 406, 411, 414, 416, 419, 424, 427], "b1": 295, "b2": 295, "back": [0, 404, 414], "backend": 291, "background": [82, 86, 422], "background_data": 82, "backport": 412, "backtest": [223, 224, 230, 371, 372, 373, 387, 407, 410, 411, 413, 425, 428], "backtick": 414, "backward": [105, 111, 179, 180, 196, 413], "bad": [398, 419, 421, 430], "bad_interv": 322, "badg": 413, "bai": 411, "baird": 415, "balanc": [114, 396, 411], "banana": 414, "bandit": [234, 376, 410, 411, 413, 415], "banner": 413, "bar": [82, 84, 390, 391, 393, 404, 405, 406, 411, 413, 422, 429], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 170, 173, 176, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 201, 202, 215, 217, 219, 234, 236, 237, 238, 239, 240, 244, 246, 247, 251, 254, 256, 258, 260, 262, 264, 268, 270, 274, 276, 279, 280, 282, 297, 298, 299, 300, 301, 325, 329, 336, 349, 356, 357, 360, 370, 375, 376, 387, 388, 390, 392, 396, 410, 411, 413, 416, 417, 420, 421, 422, 424, 425, 426, 427, 429], "base1": 394, "base2": 394, "base_data": 387, "base_kernel": [102, 103, 104], "base_nam": [349, 370, 372, 387, 388, 408, 409], "base_predictor": 266, "base_smil": 387, "basefingerprinttransform": 315, "baselin": [370, 372, 408, 411, 424], "bashrc": 421, "basi": [98, 411, 416, 422], "basic": [89, 93, 94, 95, 96, 97, 98, 99, 100, 152, 153, 154, 155, 156, 157, 158, 225, 297, 298, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 398, 401, 402, 403, 404, 407, 410, 413, 414, 423, 424, 428, 432], "basic_transfer_learn": 409, "basickernel": [93, 94, 95, 96, 97, 98, 99, 100, 413], "batch": [27, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 228, 266, 267, 376, 381, 382, 383, 384, 388, 398, 401, 402, 404, 408, 409, 413, 418, 425, 428], "batch_quant": 413, "batch_shap": [89, 90, 91, 94, 96, 98, 99, 100], "batch_siz": [27, 40, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 225, 229, 231, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 394, 396, 398, 401, 402, 404, 405, 408, 409, 411, 413, 418, 419, 421, 428], "batchnr": 398, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 201, 202, 219, 234, 236, 237, 238, 240, 244, 246, 247, 251, 254, 256, 258, 260, 262, 264, 274, 276, 279, 280, 282, 297, 298, 336, 356, 360, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "baybe_cach": 421, "baybe_cache_dir": [413, 421], "baybe_deactivate_polar": [413, 421], "baybe_debug_fake_hosthash": 413, "baybe_debug_fake_userhash": 413, "baybe_numpy_use_single_precis": [344, 413, 421], "baybe_telemetry_en": [411, 421], "baybe_telemetry_endpoint": [413, 421], "baybe_telemetry_host": 413, "baybe_telemetry_hostnam": [413, 421], "baybe_telemetry_usernam": [413, 421], "baybe_telemetry_vpn_check": [413, 421], "baybe_telemetry_vpn_check_timeout": [413, 421], "baybe_torch_use_single_precis": [363, 413, 421], "bayesian": [0, 170, 176, 178, 223, 225, 229, 231, 239, 258, 396, 413, 417, 419, 422, 429, 432], "bayesian_recommend": 388, "bayesianlinearmodel": 391, "bayesianlinearsurrog": [376, 429], "bayesianrecommend": [170, 178, 239, 413, 425], "bayesianridg": 390, "bcw07": 431, "becaus": [72, 137, 196, 202, 231, 311, 386, 387, 393, 409, 414, 417, 419, 420, 421, 422, 423, 424, 427, 428, 431], "becom": [196, 393, 417, 419, 420, 427, 430, 433], "been": [22, 68, 69, 164, 166, 167, 168, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 330, 371, 372, 376, 411, 412, 413, 416, 418, 425, 431], "beeswarm": [82, 84, 422], "befor": [68, 168, 225, 234, 236, 237, 240, 244, 258, 260, 262, 264, 307, 370, 373, 376, 382, 387, 411, 413, 414, 421, 424, 426], "begin": [166, 381, 383, 400, 404, 425], "behalf": 416, "behav": [388, 404, 427], "behavior": [178, 411, 413, 421, 423, 425, 426, 431], "behind": [423, 427, 428, 430], "being": [104, 322, 349, 396, 412, 413, 420, 421, 424, 426], "bell": [280, 284, 398, 430], "belong": [386, 427], "below": [268, 286, 383, 386, 387, 393, 414, 416, 417, 419, 420, 423, 427, 429, 430, 431], "benchmark": [411, 413, 415], "benefici": [416, 417, 421], "benefit": [420, 431], "benzo": 431, "bernoulli": [234, 395, 410, 415], "besid": [411, 423, 430], "best": [12, 14, 225, 227, 229, 373, 396, 411, 421, 425], "bet": 419, "beta": [8, 18, 152, 234, 376, 413, 417], "betabernoullimultiarmedbanditsurrog": [376, 396, 413], "betaprior": [234, 413], "better": [10, 322, 372, 413, 419, 420, 424], "between": [30, 49, 137, 167, 194, 202, 254, 329, 386, 388, 393, 396, 398, 402, 408, 409, 411, 413, 414, 418, 419, 420, 421, 424, 425, 426, 427, 430, 431], "beyond": [411, 422], "bias": 424, "bin": 393, "binar": 413, "binari": [276, 404, 412, 413, 427], "binarytarget": [277, 396, 413], "bind": [386, 388, 416], "bit": [413, 424], "black": [223, 428, 431], "blackbox": [369, 370, 410], "blank": 414, "blob": 256, "block": [387, 393, 411, 412, 413, 421, 427], "bodi": 386, "bonilla": 431, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 85, 86, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 207, 234, 236, 237, 240, 244, 258, 260, 262, 264, 276, 277, 284, 285, 286, 289, 290, 300, 301, 305, 306, 311, 312, 325, 329, 330, 331, 336, 346, 351, 396], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 122, 123, 124, 126, 127, 129, 136, 137, 140, 331, 376, 421], "boost": [262, 409], "both": [10, 142, 196, 202, 231, 286, 307, 370, 382, 387, 390, 393, 394, 396, 398, 408, 409, 411, 414, 417, 420, 422, 424, 426, 427, 430, 433], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 170, 178, 180, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 378, 379, 388, 402, 408, 409, 413, 421, 425], "botorch_acqf": [22, 387, 388], "botorch_function_wrapp": 413, "botorchrecommend": [170, 180, 376, 381, 382, 383, 384, 387, 388, 390, 391, 396, 398, 402, 404, 405, 406, 411, 413, 418, 419, 425], "bottom": 419, "bound": [8, 18, 30, 136, 142, 158, 194, 196, 202, 207, 267, 282, 283, 301, 307, 331, 336, 337, 370, 376, 378, 379, 388, 394, 398, 400, 401, 402, 408, 409, 413, 424, 427, 430, 432, 433], "boundari": [202, 284, 285, 398], "boundary_onli": [202, 393], "bounded": 413, "bounds_transform_func": 413, "box": [158, 223, 428, 431], "brain": [428, 431], "branch": [411, 414], "break": [239, 427], "brettpho": [371, 372, 373, 375, 376], "briefli": [428, 431], "bring": [411, 413], "bro": 256, "broad": 427, "brute": [178, 425], "bu": [371, 372, 373, 375, 376], "bucket": 393, "budget": 419, "bug": [413, 414], "build": [194, 202, 239, 387, 393, 412, 413, 414, 420, 427, 431, 432, 433], "built": [202, 390, 411, 414, 419, 425], "builtin": 298, "bump": 413, "button": 413, "butyl": [371, 372, 373, 375, 376], "butylphenylphosphin": [371, 372, 373, 375, 376], "butyornitril": [371, 372, 373, 375, 376], "bypass": [142, 387], "byte": [115, 201, 240, 284, 285, 286, 340, 346, 413, 433], "c": [52, 294, 302, 371, 372, 373, 375, 376, 381, 382, 383, 384, 391, 393, 405, 406, 411, 412, 416, 419, 424, 426, 427], "c1": [371, 372, 373, 375, 376, 381, 382, 383, 384, 424], "c1c2": [371, 372, 373, 375, 376], "c1ccccc1": [371, 372, 373, 381, 383], "c1ccoc1": 420, "c2": [371, 372, 373, 375, 376, 381, 383, 384], "c2ccccc2": [371, 372, 373], "c2oc": [371, 372, 373, 375, 376], "c2p": [371, 372, 373, 375, 376], "c3": [371, 372, 373, 375, 376, 381, 383], "c3c": [371, 372, 373], "c3ccccc3": [371, 372, 373, 375, 376], "c4": [371, 372, 373, 381, 383], "c4ccccc4": [371, 372, 373, 375, 376], "c5": [381, 383], "c6": [381, 383], "c_g2_min": 394, "c_g3_max": 394, "c_i": 420, "c_total_sum": 394, "cach": [290, 413, 427, 432], "cached_recommend": 290, "calcul": [290, 347, 378, 388, 408, 421, 424, 426], "calibr": 431, "call": [41, 77, 164, 166, 167, 168, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 290, 291, 307, 325, 371, 372, 373, 386, 391, 393, 394, 405, 406, 411, 412, 413, 417, 419, 420, 421, 422, 424, 427, 428, 431], "callabl": [48, 76, 142, 215, 223, 225, 227, 229, 231, 266, 267, 270, 271, 298, 303, 305, 307, 325, 370, 386, 413, 432], "callable_": 305, "campaign": [82, 225, 228, 229, 231, 322, 324, 374, 375, 383, 385, 388, 396, 406, 408, 409, 410, 411, 413, 417, 418, 420, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433], "campaign1": 428, "campaign2": 428, "campaign_json": 419, "campaign_oh": 372, "campaign_rand": [371, 372, 373], "campaign_recr": 404, "campaign_stop": 387, "campaign_with_hook": 387, "campaignstoppedexcept": 387, "can": [13, 17, 22, 27, 30, 36, 37, 38, 52, 82, 123, 129, 137, 140, 161, 170, 171, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 223, 227, 234, 236, 237, 238, 239, 240, 244, 258, 260, 262, 264, 268, 277, 289, 291, 305, 307, 311, 322, 324, 325, 330, 343, 370, 371, 372, 373, 376, 377, 380, 381, 382, 383, 386, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 405, 408, 409, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "canada": 415, "candid": [12, 14, 27, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 202, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 387, 409, 413, 417, 418, 419, 425, 426], "candidates_comp_rep": 387, "cannot": [13, 75, 76, 82, 239, 240, 268, 312, 349, 396, 413, 416, 418, 420, 421, 424, 425, 427, 429, 431], "canon": [314, 427], "capabl": [369, 395, 397, 403, 407, 409, 413, 415, 419, 431], "captur": 424, "cardin": [30, 40, 47, 57, 58, 194, 413, 415], "cardinalityconstraint": [40, 47, 413], "care": [45, 393, 414, 420, 422, 423], "carefulli": 421, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 229, 370, 372, 373, 387, 396, 408, 409, 418, 428], "carri": [307, 386, 416], "cartesian": [196, 202, 203, 204, 411, 413, 426], "case": [164, 166, 167, 168, 231, 268, 307, 322, 332, 387, 392, 393, 401, 402, 405, 411, 412, 414, 417, 418, 419, 420, 421, 424, 427, 428, 430, 431, 433], "cast": [41, 413], "cat": 329, "cat_1": 398, "cat_1_22": 398, "cat_1_33": 398, "cat_2": 398, "catch_constant_target": 413, "categor": [27, 126, 127, 131, 202, 209, 330, 411, 413, 424, 426, 430], "categori": [372, 387, 411, 413, 427, 430], "categorical_1": [398, 419], "categorical_2": [398, 419], "categorical_paramet": 427, "categorical_parameter_json": 427, "categorical_parameter_reconstruct": 427, "categoricalencod": [126, 127, 381, 382, 383, 384, 398, 404], "categoricalparamet": [127, 202, 372, 381, 382, 383, 384, 391, 396, 398, 404, 405, 406, 411, 413, 422, 426, 427, 432], "cattr": [214, 215, 217, 406, 412, 413, 414], "cauchi": 154, "caus": [137, 294, 298, 413, 416], "caution": 431, "cc": [371, 372, 373, 375, 376, 381, 383, 384, 393, 424, 431], "cc1": [371, 372, 373, 375, 376, 424], "ccc": [381, 383, 391, 411], "cccc": [371, 372, 373, 375, 376, 381, 383], "ccccc": [381, 383, 405, 406], "cccccc": [381, 383], "cccccccco": [420, 424], "ccccoc": [371, 372, 373, 375, 376], "cco": 393, "ccoccoccn": [405, 406], "cdot": [420, 423], "ceil": 387, "cell": [390, 424, 428, 431], "cell_lin": 431, "center": [284, 286, 336, 398, 419], "central": [413, 419], "certain": [27, 49, 76, 168, 215, 217, 223, 291, 304, 322, 350, 382, 387, 396, 411, 414, 420, 425, 427, 431, 433], "cesium": [371, 372, 373, 375, 376], "ch": 350, "chai": 431, "chain": [34, 298, 420], "challeng": [414, 427], "chanc": 412, "chang": [49, 166, 322, 323, 324, 376, 393, 401, 411, 412, 414, 416, 419, 421, 422, 424, 426, 431], "charact": 416, "characterist": 298, "charg": 416, "check": [27, 122, 123, 124, 126, 127, 129, 136, 137, 140, 290, 304, 306, 309, 310, 311, 312, 330, 336, 345, 401, 402, 404, 411, 413, 414, 421, 422, 426, 427], "checker": 413, "checkout": 414, "chem": [411, 413, 424], "chemic": [316, 372, 375, 393, 413, 415, 420, 422, 424, 431], "cheminformat": [140, 411, 413], "chemistri": [129, 381, 383, 384], "child": [185, 186, 187, 188, 414], "chocol": 414, "choic": [225, 227, 357, 386, 393, 396, 402, 413, 420, 423, 424, 425, 426, 427, 430], "choos": [162, 393, 394, 396, 398, 400, 401, 402, 411, 416, 417, 419, 425, 429, 430], "chose": [401, 427], "chosen": [66, 170, 225, 227, 231, 353, 354, 376, 396, 413, 417, 420, 424, 426], "christoph": 431, "ci": [379, 408, 409, 413, 414], "circular": 424, "circumv": [412, 427], "cl": [45, 112, 212, 216, 268, 300, 301, 306, 311, 338], "claim": 416, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 75, 79, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 215, 217, 218, 219, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 296, 297, 298, 299, 300, 301, 306, 311, 315, 334, 336, 351, 355, 356, 359, 360, 376, 386, 387, 390, 396, 405, 413, 419, 420, 422, 423, 424, 425, 426, 427, 429], "classic": [396, 423], "classifi": 424, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 298, 336, 413], "classvalidationerror": [406, 412], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 234, 236, 237, 240, 244, 258, 260, 262, 264], "clean": [326, 327, 328, 412, 413, 414], "clear": [343, 431], "click": [396, 424], "clone": 414, "close": [225, 231, 279, 370, 387, 408, 409, 428], "closer": [345, 424], "closest": [290, 330, 346], "closest_el": 413, "closur": [223, 428], "cluster": [185, 186, 187, 188, 376, 413, 415, 432], "clustering_x": 413, "cmap": 388, "cn": [371, 372, 373, 375, 376], "co": 393, "co1": [371, 372, 373], "co2": [371, 372, 373], "co3": [371, 372, 373], "coars": [391, 404, 405, 406, 411], "coc": [391, 405, 406, 411], "cococ": [405, 406], "code": [239, 372, 391, 396, 401, 405, 406, 411, 412, 413, 416, 420, 421, 424, 428, 431, 433], "coeffici": [41, 43, 44, 378, 379, 394, 420], "coerc": 413, "collect": [27, 57, 58, 92, 102, 103, 142, 143, 151, 166, 168, 194, 202, 208, 209, 220, 227, 292, 294, 296, 304, 305, 322, 331, 355, 357, 370, 376, 388, 393, 396, 408, 409, 411, 413, 419, 421], "color": 388, "column": [36, 37, 38, 82, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 225, 227, 229, 231, 294, 295, 323, 325, 326, 327, 328, 329, 331, 332, 360, 372, 375, 381, 382, 383, 384, 387, 393, 398, 404, 408, 409, 413, 419, 426, 427, 428], "column_group": 295, "com": [256, 308, 328, 411, 413], "comb": 393, "combin": [50, 142, 196, 202, 203, 204, 298, 316, 371, 372, 373, 381, 383, 386, 387, 393, 398, 411, 412, 416, 420, 422, 423, 425, 426, 428, 431, 433], "combinatori": 433, "combine_func": 106, "come": [396, 411, 419, 422, 427, 431, 433], "command": 412, "comment": 413, "commerci": 416, "commit": [411, 413, 414], "common": [151, 390, 394, 413, 414, 416, 419, 420, 424, 427], "commonli": 423, "commun": [416, 423, 431], "comp_df": [123, 126, 127, 129, 137, 140, 413], "comp_rep": [202, 388, 390, 413, 426], "comp_rep_bound": [194, 196, 202, 413], "comp_rep_byt": [201, 433], "comp_rep_column": [122, 123, 124, 126, 127, 129, 136, 137, 140, 194, 196, 202, 413], "comp_rep_human_read": [201, 433], "comp_rep_shap": [201, 433], "comp_rep_tensor": [387, 388], "compar": [142, 166, 370, 393, 394, 396, 408, 411, 413, 414, 424, 430], "comparison": [387, 408, 409, 425, 427], "compat": [105, 111, 142, 170, 173, 176, 178, 179, 180, 183, 185, 186, 187, 188, 190, 191, 196, 197, 227, 240, 307, 331, 368, 376, 381, 382, 383, 384, 386, 388, 398, 404, 413, 425], "compens": 413, "compil": [412, 416], "complain": 414, "complaint": 414, "complement": [27, 329], "complet": [388, 393, 418, 420, 423, 427], "complex": [115, 284, 285, 286, 346, 393, 404, 408, 409, 414, 417, 418, 420, 428, 431], "compli": 416, "complianc": 411, "complic": [393, 431], "compon": [62, 393, 394, 414, 417, 419, 420, 421, 427, 431], "compos": [101, 427], "composit": [90, 102, 103, 104], "compositekernel": [102, 103, 104, 413], "compound": 316, "comprehens": [411, 429], "compress": 427, "comput": [22, 27, 73, 82, 86, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 194, 196, 201, 202, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 268, 274, 276, 282, 317, 347, 381, 382, 383, 384, 386, 393, 394, 398, 404, 413, 416, 417, 419, 421, 424, 426, 427, 428, 432, 433], "computation": 178, "concat": [378, 379, 387, 388, 398, 401, 402, 408, 409], "concentr": [152, 153, 371, 372, 373, 375, 376, 381, 386, 387, 420], "concentrati": 381, "concentration_valu": 387, "concept": [294, 393, 423, 424, 427], "concis": 413, "concret": [413, 427], "conda": 413, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 322, 329, 372, 378, 382, 383, 384, 393, 411, 413, 416, 431, 432], "conduct": [27, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 229, 234, 236, 237, 240, 244, 258, 260, 262, 264, 371, 372, 373, 411, 414, 419, 431], "confid": [8, 18, 376], "config": [390, 391, 403, 410, 413, 432], "config_json": 27, "configur": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 71, 72, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 223, 225, 231, 234, 236, 237, 238, 240, 244, 250, 258, 260, 262, 264, 322, 349, 357, 374, 375, 393, 399, 402, 406, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431, 432, 433], "confirm": 388, "conflict": [411, 414, 423], "conform": [140, 317, 424], "confront": [396, 411], "conjunct": 429, "connect": [53, 322, 413, 421, 424, 430], "consecut": [164, 166, 167, 168], "consequ": [167, 373, 412, 420, 421, 425, 426, 428], "consequenti": 416, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 114, 127, 166, 196, 202, 229, 290, 322, 330, 331, 370, 393, 396, 398, 408, 409, 411, 413, 414, 418, 420, 422, 423, 424, 425, 427, 433], "consider": [196, 418], "consist": [162, 201, 388, 414, 416, 422], "consol": 412, "consolid": [413, 425], "consortium": 415, "conspicu": 416, "constant": [260, 268, 285, 398, 413, 414, 424, 426], "constitut": 416, "constrain": [413, 420, 430, 431], "constraint": [27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 124, 194, 196, 202, 297, 390, 391, 398, 404, 405, 406, 410, 411, 413, 415, 421, 424, 432], "constraint_1": 383, "constraint_2": 383, "constraint_3": 383, "constraints_augment": 196, "constraints_cardin": 194, "constraints_lin_eq": 194, "constraints_lin_ineq": 194, "constraints_nonlin": 194, "constru": 416, "construct": [27, 194, 196, 202, 240, 270, 370, 400, 408, 409, 411, 413, 417, 427, 432], "constructor": [185, 186, 187, 188, 196, 216, 258, 262, 264, 393, 400, 405, 406, 413, 417, 419, 423, 424, 432, 433], "consult": 411, "consum": [166, 386], "consumpt": 421, "cont_ind": 402, "cont_indic": [401, 402], "cont_paramet": 402, "cont_recommend": [170, 402], "contact": [411, 415], "contain": [27, 30, 36, 37, 38, 58, 61, 65, 82, 109, 114, 115, 119, 123, 126, 127, 129, 137, 140, 142, 146, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 203, 204, 208, 223, 225, 227, 229, 234, 236, 237, 240, 244, 258, 260, 262, 264, 274, 276, 282, 284, 285, 286, 294, 295, 307, 317, 322, 324, 329, 336, 347, 349, 351, 357, 372, 373, 387, 388, 394, 396, 402, 408, 409, 412, 413, 414, 416, 419, 420, 422, 425, 426, 427, 428, 433], "content": [142, 166, 196, 227, 323, 358, 413, 416, 427], "context": [164, 166, 167, 168, 223, 238, 354, 386, 396, 400, 408, 409, 413, 419, 422, 424, 427, 428, 431, 433], "contextu": 431, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 178, 194, 196, 197, 202, 203, 204, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 376, 378, 381, 382, 383, 384, 394, 398, 399, 402, 404, 410, 411, 413, 419, 421, 425, 427, 428, 432], "continuous_subspac": 426, "continuouscardinalityconstraint": [57, 194, 413], "continuousconstraint": [33, 41, 194, 413, 420], "continuouslinearconstraint": [194, 378, 379, 394, 413, 432], "continuouslinearequalityconstraint": 413, "continuouslinearinequalityconstraint": 413, "continuousnonlinearconstraint": [40, 194, 413], "continuousparamet": [136, 194, 413], "contract": 416, "contrast": [202, 311, 394, 396], "contribut": [411, 413, 416, 433], "contributor": [411, 416], "contributori": 416, "control": [13, 17, 142, 152, 178, 194, 202, 331, 398, 401, 411, 413, 416, 417, 421, 423, 424, 425, 430], "convei": 427, "conveni": [413, 426, 427], "convent": 196, "converg": 422, "convers": [27, 167, 390, 400, 413, 416, 422, 432], "convert": [24, 110, 198, 211, 308, 312, 316, 319, 320, 332, 333, 337, 340, 343, 391, 405, 406, 413, 419, 421, 427, 428], "convert_sklearn": 390, "convert_sklearn_bayesian_ridg": 390, "cooki": 414, "coordin": 357, "copi": [387, 411, 413, 416, 433], "copyright": [411, 416], "core": [27, 194, 196, 197, 202, 229, 231, 234, 236, 237, 238, 240, 244, 251, 258, 260, 262, 264, 376, 411, 413, 430], "coregion": 431, "coretest": [413, 414], "corpu": 424, "correct": [27, 271, 388, 411, 413, 414, 427], "correctli": [393, 402, 413], "correl": [129, 140, 328, 424, 431], "correspond": [22, 27, 40, 109, 114, 119, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 215, 223, 225, 227, 234, 236, 237, 240, 244, 258, 260, 262, 264, 284, 290, 307, 310, 312, 315, 316, 322, 325, 331, 332, 370, 375, 376, 393, 396, 402, 408, 409, 411, 413, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "correspondingli": 27, "corrupt": 324, "cost": [372, 396], "costli": [196, 199, 205, 419], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 137, 319, 376, 386, 387, 393, 394, 409, 413, 418, 420, 424, 428, 430, 431], "count": [291, 387, 393, 420], "counterclaim": 416, "counterpart": [307, 426], "coupl": 388, "cours": [408, 409, 414, 427, 431], "cov": [413, 414], "cover": [311, 322], "coverag": [413, 414], "cp": [371, 372, 373], "craft": 428, "crash": [412, 413], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 203, 204, 219, 227, 234, 236, 237, 238, 240, 244, 247, 252, 258, 260, 262, 264, 274, 276, 282, 322, 325, 336, 349, 351, 357, 375, 386, 387, 388, 393, 394, 402, 403, 410, 411, 412, 413, 414, 420, 421, 422, 427, 428, 429, 430, 432, 433], "create_example_plot": [370, 372, 387, 388, 408, 409], "create_from_config": [390, 391], "create_pi_plot": 388, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 142, 199, 202, 205, 382, 384, 390, 391, 426, 427, 432], "criteria": 388, "criterion": [387, 417], "critic": 413, "cross": [408, 416], "crucial": [411, 430], "cube": 420, "cuda": 412, "cultur": [424, 431], "curran": 431, "current": [10, 27, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 229, 231, 239, 289, 343, 387, 388, 393, 417, 419, 420, 421, 424, 428, 430, 431, 433], "curv": [284, 388, 398, 420, 430], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 122, 123, 124, 126, 127, 129, 132, 136, 137, 140, 142, 240, 271, 274, 276, 282, 307, 332, 369, 376, 380, 387, 396, 402, 410, 411, 413, 420, 424, 425, 428, 431, 432, 433], "custom_blackbox": 370, "custom_conversion_funct": 390, "custom_filt": 420, "custom_funct": 381, "customari": 416, "customconstraint": 381, "customdiscreteparamet": [413, 422, 432], "customencod": 129, "customonnxsurrog": [376, 390, 413], "cycl": [166, 411], "cyclic": 166, "d": [22, 52, 115, 294, 302, 347, 357, 388, 391, 405, 406, 408, 409, 411, 416, 426, 431], "d401": 381, "damag": 416, "daniel": 415, "darmstadt": [411, 415, 421], "dashboard": 413, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 82, 86, 114, 119, 129, 137, 140, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 225, 229, 231, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 276, 282, 291, 293, 297, 322, 324, 330, 342, 343, 358, 362, 369, 370, 375, 376, 378, 379, 381, 382, 383, 384, 387, 391, 393, 398, 401, 404, 405, 406, 408, 409, 410, 411, 413, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 432, 433], "data_typ": 390, "databas": [27, 398, 411, 427], "dataclass": [386, 396], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 109, 114, 119, 123, 126, 127, 129, 137, 140, 142, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 203, 204, 207, 221, 222, 225, 227, 229, 231, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 276, 282, 290, 294, 295, 316, 317, 358, 370, 371, 375, 376, 381, 382, 383, 384, 387, 388, 390, 391, 393, 394, 398, 401, 404, 408, 409, 413, 418, 419, 420, 424, 432, 433], "datapoint": 413, "dataset": [166, 223, 428], "datatyp": 413, "date": 416, "dditiv": 422, "de": [214, 403, 411, 412, 413, 414, 419, 420, 425, 432], "deactiv": [411, 413, 421], "deal": [373, 418, 424, 428], "debug": 413, "decid": [137, 330, 393, 396, 402, 417], "declar": [49, 53, 58, 188, 382, 414, 420], "decod": 390, "decor": [104, 268, 298, 325, 386, 413, 414, 428], "decorrel": [129, 140, 145, 405, 406, 424], "decreas": [166, 285, 398, 427, 431], "deduc": [378, 379, 401], "dedupl": 413, "deep": 387, "deepcopi": 413, "deeper": 422, "def": [370, 381, 386, 387, 388, 393, 396, 408, 414, 420, 428], "default": [38, 82, 114, 127, 129, 140, 142, 170, 185, 186, 187, 188, 194, 196, 202, 214, 234, 251, 254, 329, 370, 371, 373, 376, 391, 398, 402, 411, 413, 414, 419, 421, 422, 423, 424, 432], "default_campaign": 370, "default_iter": 167, "default_model": 240, "defaultkernelfactori": [376, 381, 382, 383, 384, 398, 404], "defaultscal": 413, "defend": 416, "defin": [22, 27, 37, 41, 48, 132, 161, 166, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 223, 244, 246, 247, 271, 324, 328, 329, 360, 371, 372, 373, 375, 381, 382, 383, 384, 390, 391, 396, 400, 413, 414, 416, 419, 420, 424, 427, 428, 430], "definit": [194, 202, 311, 394, 411, 413, 416, 423, 426], "degener": [323, 336, 413], "degr": 404, "degre": 427, "degree_c": [390, 391, 404], "deliber": 416, "delici": 414, "deliveri": 424, "demand": 409, "demo": 413, "demonstr": [369, 370, 371, 374, 377, 380, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 403, 404, 407, 408, 409, 413, 423, 426, 427, 431], "denot": 22, "densiti": 388, "depend": [49, 53, 74, 106, 196, 202, 223, 285, 294, 372, 376, 380, 393, 394, 400, 410, 412, 413, 414, 420, 421, 422, 426, 428, 430, 431, 433], "dependenciesconstraint": 413, "deprec": [60, 134, 176, 178, 194, 202, 207, 241, 298, 381, 383, 384], "deprecationwarn": [381, 383, 384, 387], "depth": 426, "deriv": [185, 186, 187, 188, 202, 311, 416, 420, 426], "descend": 285, "describ": [127, 185, 186, 187, 188, 234, 236, 237, 240, 244, 258, 260, 262, 264, 376, 381, 386, 387, 394, 396, 398, 414, 416, 418, 419, 420, 423, 424, 427, 428], "descript": 414, "descriptor": [140, 317, 413, 422, 424, 431], "deseri": [212, 216, 221, 404, 412, 413, 419, 432], "deserialize_datafram": 427, "design": [0, 17, 22, 225, 325, 386, 390, 393, 396, 416, 417, 422, 423, 425, 427], "desir": [106, 114, 117, 397, 398, 410, 411, 413, 417, 419, 421, 422, 423, 425, 427, 430, 433], "desirabilityobject": [27, 398, 411, 413, 427, 429, 432], "desktop": 413, "despit": 413, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 148, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 225, 229, 234, 236, 237, 238, 240, 244, 247, 254, 256, 258, 260, 262, 264, 274, 276, 282, 287, 288, 329, 336, 360, 371, 373, 378, 379, 398, 402, 411, 412, 413, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431], "detect": [297, 330, 412, 414], "determin": [27, 82, 112, 202, 311, 329, 340, 345, 357, 371, 393, 396, 416, 421, 425], "determinist": 357, "detriment": 424, "dev": [381, 383, 384, 411, 413, 414], "develop": [411, 413, 418, 424, 428], "deviat": [6, 268, 390, 413], "df": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 109, 114, 119, 142, 194, 196, 202, 207, 222, 227, 294, 295, 316, 323, 326, 327, 328, 329, 331, 332, 358, 370, 381, 396, 411, 420, 426, 427, 428], "dfa": [294, 295], "di": [371, 372, 373, 375, 376, 415], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 185, 186, 187, 188, 194, 196, 199, 202, 205, 215, 216, 217, 219, 229, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 288, 302, 305, 317, 322, 336, 360, 387, 390, 408, 409, 413], "dict_bas": [371, 372, 373, 375, 376], "dict_ligand": [371, 372, 373, 375, 376], "dict_solv": [371, 372, 373, 375, 376, 381, 382, 383, 384, 393, 420], "dictat": [109, 114, 119, 196, 408, 409], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 215, 217, 219, 229, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 268, 274, 276, 282, 302, 305, 322, 336, 371, 372, 373, 375, 424, 428], "diff": 414, "differ": [51, 114, 178, 194, 196, 197, 202, 223, 231, 290, 295, 322, 324, 360, 372, 381, 386, 393, 396, 398, 401, 402, 408, 409, 411, 413, 414, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431], "differenti": [428, 431], "difficult": 431, "digit": 332, "dilemma": 396, "dim": [22, 378, 379, 388, 390, 401, 402, 408, 409], "dimens": [22, 357, 370, 378, 379, 388, 390, 400, 401, 408, 409, 413, 424, 426, 431], "dimension": [115, 122, 123, 124, 126, 127, 129, 136, 137, 140, 254, 325, 357, 370, 408, 409, 413], "dimethylisoxazol": 431, "direct": [371, 372, 373, 375, 411, 416, 424, 433], "directli": [311, 409, 411, 413, 420, 423, 427, 429], "directori": [349, 402, 413], "disabl": [289, 381, 383, 384, 413, 419], "disadvantag": 427, "disappear": 413, "disc_ind": 402, "disc_indic": [401, 402], "disc_paramet": 402, "disc_recommend": [170, 402], "discard": 393, "disclaim": 416, "discourag": 419, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 201, 202, 231, 356, 375, 378, 384, 387, 388, 390, 398, 399, 402, 404, 409, 410, 411, 413, 417, 419, 422, 427, 428, 432, 433], "discrete_param": [388, 408, 409], "discrete_spac": [378, 379, 402], "discrete_subspac": 426, "discretecardinalityconstraint": 413, "discreteconstraint": [27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 202, 413, 420], "discretecust": 381, "discretecustomconstraint": [381, 413, 432], "discretedep": 382, "discretedependenciesconstraint": [53, 58, 382, 393, 432], "discreteexcl": 383, "discreteexcludeconstraint": [383, 413, 432], "discretelinkedparametersconstraint": [413, 432], "discretenolabelduplicatesconstraint": [53, 393, 413, 432], "discreteparamet": [126, 129, 137, 140, 202, 413], "discretepermutationinvarianceconstraint": [393, 432], "discreteprod": 384, "discreteproductconstraint": [384, 413, 432], "discretesamplingmethod": [13, 178, 358, 413, 417], "discretesumc": 384, "discretesumconstraint": [378, 384, 393, 413, 432], "discuss": [398, 416, 420, 426, 428], "disjoint": 202, "disk": [413, 432], "dispatch": 105, "displai": [332, 387, 416], "distanc": [137, 290, 330, 357], "distinct": [386, 419, 425], "distinguish": [323, 393, 413, 420, 424, 431], "distribut": [27, 148, 151, 234, 236, 237, 240, 244, 258, 260, 262, 264, 393, 398, 402, 411, 413, 416, 417, 418], "distutil": 312, "div": 390, "divers": 429, "divid": 394, "divis": 347, "dll": 412, "dmac": [371, 372, 373, 375, 376], "dmf": 420, "do": [196, 202, 239, 386, 390, 391, 393, 396, 402, 404, 405, 406, 408, 411, 412, 416, 418, 420, 421, 422, 424, 425, 427, 431, 432, 433], "do_baybe_work": 421, "doc": [87, 148, 298, 381, 383, 384, 411, 413], "doc101": 414, "doc103": 414, "docstr": 413, "doctest": 413, "document": [343, 390, 411, 413, 414, 415, 416, 419, 422, 428], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 178, 223, 225, 227, 229, 234, 236, 237, 239, 240, 244, 258, 260, 262, 264, 271, 307, 316, 343, 373, 376, 387, 390, 391, 393, 405, 406, 408, 409, 413, 414, 416, 420, 423, 425, 428, 429, 431, 433], "doi": [256, 328], "domain": [234, 236, 237, 240, 244, 258, 260, 262, 264, 370, 411, 426, 428], "done": [27, 329, 373, 375, 381, 382, 383, 384, 390, 391, 398, 404, 413, 417, 420, 421], "doubl": [343, 414, 421], "down": [427, 433], "downsid": 167, "draft": 413, "dramat": 431, "drastic": 424, "draw": [10, 99, 194, 394, 396, 400], "draw_arm": 396, "drawn": [17, 178], "drive": [388, 431], "driven": [322, 417], "driver": 412, "drop": [326, 327, 328, 387, 413, 420], "dry_run": 27, "dtype": [115, 284, 285, 286, 346], "due": [291, 409, 411, 413, 417, 420, 421, 424, 425, 426, 427, 430], "duplic": [53, 147, 297, 302, 413, 420], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 196, 202, 223, 305, 357, 393, 396, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 422, 426, 427, 428, 429], "dynam": [396, 413, 427], "d\u00fcbendorf": 415, "e": [17, 22, 27, 30, 49, 51, 52, 65, 82, 85, 129, 142, 168, 196, 202, 223, 291, 297, 300, 301, 317, 322, 329, 330, 336, 365, 371, 372, 373, 391, 393, 394, 396, 411, 412, 413, 414, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 431, 433], "e3fp": 134, "e3fpfingerprint": 134, "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 109, 114, 119, 142, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 225, 227, 229, 231, 239, 295, 317, 322, 323, 349, 370, 372, 373, 376, 388, 393, 394, 396, 398, 402, 408, 409, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433], "eagerli": 413, "earli": [387, 413], "earlier": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 412], "earn": 396, "earned_reward": 396, "easi": [316, 414, 427], "easier": [414, 433], "easiest": [411, 414], "easili": [387, 411, 414, 419, 424, 426, 427, 431], "ecfp": [134, 372, 413, 424], "ecfpfingerprint": 134, "ecosystem": 427, "edbo": [254, 256, 328, 413], "edbokernelfactori": [254, 413], "edit": [411, 414], "editor": 431, "editori": 416, "edwin": 431, "effect": [51, 231, 386, 387, 396, 409, 413, 417, 420, 424, 425, 428, 431, 433], "effici": [202, 393, 411, 413, 426], "effortlessli": 428, "ei": [3, 376], "either": [22, 27, 197, 225, 231, 244, 268, 372, 383, 398, 402, 411, 416, 423, 424, 425, 426, 428], "elabor": 416, "elaps": 386, "elapsedtimeprint": 386, "electron": [415, 416], "electroshap": 134, "electroshapefingerprint": 134, "eleg": [408, 427], "element": [36, 37, 38, 48, 231, 290, 297, 304, 310, 330, 345, 346, 351, 393, 408, 409, 413, 420, 428], "elev": 388, "elif": [401, 402], "elimin": [414, 417], "els": [311, 312, 370, 371, 372, 373, 378, 379, 381, 382, 384, 387, 388, 396, 401, 402, 408, 409], "elsewher": 390, "emd": 415, "emdgroup": [287, 411], "emelin": 415, "emerg": 419, "empir": 396, "emploi": [27, 396, 425], "employe": [411, 421], "empow": 429, "empti": [86, 194, 196, 202, 209, 295, 307, 316, 329, 332, 393, 398, 402, 404, 413, 426], "empty_encod": [196, 202], "emptysearchspaceerror": 209, "emul": [17, 412, 413], "en": [87, 148], "enabl": [289, 290, 371, 372, 373, 393, 408, 411, 412, 413, 419, 420, 421, 422, 423, 425, 427, 428, 430, 431], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 196, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 315, 317, 371, 372, 373, 375, 376, 381, 382, 383, 384, 387, 391, 393, 396, 398, 404, 405, 406, 408, 409, 411, 413, 420, 426, 427, 431], "encompass": 419, "encount": [357, 412, 413, 414, 423], "end": [0, 286, 336, 387, 391, 396, 398, 404, 416, 420, 427], "endeavor": 417, "endpoint": [413, 421], "enforc": [344, 363, 413, 414], "engin": [412, 425, 427, 428, 433], "enhanc": [22, 411], "enlarg": 424, "enough": [194, 427], "ensembl": 266, "ensur": [142, 371, 372, 373, 393, 394, 411, 420, 427, 428], "enter": [67, 202, 426], "entir": [290, 336, 358, 413, 414, 417, 421, 433], "entiti": 416, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 217, 234, 236, 237, 240, 244, 258, 260, 262, 264, 290, 295, 322, 330, 358, 373, 381, 382, 383, 384, 393, 413, 420, 421, 422, 430, 433], "enum": [117, 131, 132, 133, 134, 197, 251, 279, 280, 356, 413, 427], "enumer": [116, 130, 278, 388, 408, 409, 423], "env": [413, 414], "envar_nam": 421, "environ": [289, 344, 363, 370, 371, 372, 373, 379, 381, 382, 384, 387, 388, 390, 396, 408, 409, 411, 412, 413, 414, 432], "envvar": 287, "envvar_nam": 421, "eq": [381, 393], "equal": [41, 114, 168, 194, 396, 398, 404, 413, 420, 423, 426, 427, 430], "equat": [41, 420, 428], "equidist": 424, "equip": 420, "equival": [17, 30, 53, 379, 400, 417, 420, 428], "erg": 134, "ergfingerprint": 134, "erron": 413, "error": [166, 176, 178, 225, 227, 229, 241, 305, 347, 373, 391, 396, 412, 413, 420, 423, 424, 425], "esian": 411, "especi": 414, "essenti": [419, 425], "establish": [387, 408, 409, 431], "estat": 134, "estatefingerprint": 134, "ester": [371, 372, 373, 375, 376], "estim": [196, 201, 202, 234, 396, 413, 429, 432], "estimate_product_space_s": [196, 202, 433], "estimated_win_r": 396, "estimation_bia": 396, "estimation_vari": 396, "et": [372, 411, 424], "etc": [36, 37, 38, 124, 196, 274, 431], "ethanol": [393, 420], "euclidean": 357, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 266, 267, 312, 401, 402, 413, 419, 421, 425, 428, 431], "even": [268, 327, 408, 409, 416, 418, 419, 421, 424, 428, 429, 431, 433], "event": [27, 290, 387, 416], "everi": [418, 433], "everyth": [414, 420], "evolv": [388, 414], "ex": 422, "exabyt": 433, "exact": [27, 330, 386, 412, 413, 418, 420, 424, 425], "exactexplain": [80, 83, 422], "exactli": [109, 114, 119, 196, 393, 413, 418, 419, 426, 427], "exampl": [142, 227, 294, 295, 302, 311, 329, 369, 370, 374, 377, 380, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 403, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "example_input_nam": 390, "exceed": 387, "exceedingli": 428, "except": [307, 316, 320, 334, 335, 371, 372, 373, 387, 391, 405, 406, 411, 412, 413, 416], "excepthook": 412, "exceptiongroup": 413, "excess": 433, "exclud": [27, 52, 202, 326, 381, 382, 383, 384, 398, 404, 413, 416, 420], "exclude_list": 328, "exclus": [50, 380, 410, 413, 416, 420, 428], "execut": [27, 60, 225, 307, 370, 372, 412, 413, 414, 416, 421, 427, 428, 431], "exemplari": 419, "exercis": 416, "exhaust": [166, 422, 425], "exist": [104, 196, 290, 298, 307, 393, 412, 413, 414, 417, 419, 420, 427, 431], "exp_rep": [202, 381, 382, 383, 384, 393, 426], "exp_rep_byt": [201, 433], "exp_rep_human_read": [201, 433], "exp_rep_shap": [201, 433], "expect": [3, 4, 9, 11, 12, 14, 48, 238, 246, 307, 325, 376, 382, 388, 390, 393, 394, 396, 406, 413, 414, 419, 420, 423, 424, 427, 428, 430, 433], "expens": [10, 178, 378, 428], "experi": [0, 27, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 223, 225, 234, 236, 237, 240, 244, 258, 260, 262, 264, 371, 372, 373, 375, 376, 401, 402, 413, 417, 419, 420, 422, 423, 424, 425, 430, 431, 432], "experiment": [27, 86, 109, 114, 119, 123, 126, 127, 129, 137, 140, 161, 164, 165, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 201, 202, 223, 234, 236, 237, 240, 244, 258, 260, 262, 264, 274, 276, 282, 322, 324, 381, 382, 383, 384, 388, 398, 404, 411, 413, 417, 418, 420, 423, 424, 426, 427, 428, 430, 431, 432, 433], "explain": [64, 81, 82, 83, 85, 86, 388, 413, 415, 429, 432], "explainer_cl": [82, 86, 422], "explan": [82, 86, 413, 419, 429], "explanation_index": [82, 422], "explicit": [142, 167, 386, 387, 391, 393, 400, 405, 406, 413, 414, 427, 431, 432], "explicitli": [194, 202, 386, 402, 409, 416, 426, 431], "exploit": [8, 17, 18, 396], "explor": [8, 18, 27, 396, 417, 425, 426, 431], "exploratori": 417, "exponenti": 202, "expos": [27, 386, 413], "exposur": 413, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 411, 413, 416, 420], "extend": [424, 431], "extens": [413, 425], "extra": [372, 412, 413], "extract": [27, 331, 388, 408, 432], "extract_pi": 388, "f": [312, 370, 371, 372, 373, 378, 379, 381, 382, 383, 384, 386, 387, 388, 393, 394, 398, 400, 401, 402, 408, 409, 433], "f1": 428, "f2": 428, "fabian": 415, "face": [234, 236, 237, 240, 244, 258, 260, 262, 264, 394, 396], "facilit": 425, "fact": [17, 388, 393, 420, 423], "factor": [142, 419, 433], "factori": [142, 194, 244, 245, 246, 247, 248, 254, 256, 303, 376, 381, 382, 383, 384, 398, 404, 413], "fail": [402, 406, 412, 413], "failur": [276, 416], "failure_valu": 276, "fairli": 423, "fake": [227, 322, 375, 376, 390, 391, 398, 413, 418, 428, 432], "fall": [387, 419, 430], "fallback": [112, 202, 338, 349, 390, 413, 426], "fals": [6, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 207, 234, 240, 258, 260, 262, 264, 276, 285, 290, 300, 301, 305, 311, 312, 325, 329, 330, 331, 351, 376, 381, 382, 383, 384, 398, 404, 405, 406, 411, 418, 421], "famili": 420, "familiar": [371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 390, 391, 398, 401, 402, 404], "fang": 415, "fantasi": 10, "farthest": [190, 356, 357, 376, 411, 413, 415, 417, 425], "farthest_point_sampl": 413, "fashion": [284, 286], "fast": [381, 383, 384, 426, 430], "faster": 202, "fault": 77, "faulti": 412, "favicon": 413, "fc": [371, 372, 373], "feasibl": 419, "featur": [82, 99, 140, 328, 411, 412, 414, 420, 422, 429, 431], "fed": [411, 422], "feder": 415, "fee": 416, "feed": [411, 431], "feedback": 415, "feel": 387, "few": [370, 396, 413, 414, 417, 424, 427, 431, 433], "field": [216, 320, 351, 413, 431, 432], "fifti": 416, "fig": 388, "figur": [349, 388], "file": [349, 371, 372, 373, 390, 391, 402, 411, 413, 416, 421, 427, 431], "filenotfounderror": [371, 372, 373, 387], "fill": [27, 227, 388], "filler": 420, "filter": [27, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 196, 202, 326, 329, 381, 393, 413, 420, 426, 431, 433], "filter_attribut": 413, "filter_df": [27, 413], "filterwarn": 387, "final": [370, 372, 375, 387, 393, 409], "find": [196, 305, 346, 349, 411, 417, 419, 420, 431], "fine": [391, 404, 405, 406, 411], "finer": [142, 411], "fingerprint": [134, 140, 315, 317, 411, 413, 415, 424], "finish": 418, "finit": [166, 223, 231, 335, 365, 396, 424, 428], "first": [196, 229, 345, 357, 370, 372, 375, 376, 381, 386, 387, 390, 391, 393, 398, 402, 406, 408, 409, 411, 412, 413, 419, 420, 423, 424, 425, 426, 431, 433], "fit": [27, 188, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 358, 360, 371, 372, 373, 381, 382, 383, 384, 390, 398, 404, 413, 416, 420, 424, 429], "fit_gpytorch_ml": 413, "fit_gpytorch_mll_torch": 413, "fitnr": 398, "fitzner": [411, 415], "fix": [223, 247, 387, 388, 393, 396, 401, 402, 414, 419, 424, 428, 431, 433], "flag": [22, 27, 49, 82, 86, 109, 114, 119, 178, 196, 197, 202, 325, 330, 331, 413, 418, 419, 421, 425], "flake8": 413, "flexibl": [386, 400, 413, 427, 428], "flexibli": 425, "float": [8, 13, 18, 38, 41, 43, 44, 93, 94, 95, 96, 97, 98, 99, 100, 104, 106, 114, 115, 129, 136, 137, 140, 145, 146, 152, 153, 154, 155, 156, 157, 158, 178, 201, 202, 225, 229, 234, 268, 276, 277, 284, 285, 286, 291, 319, 322, 323, 324, 328, 336, 340, 342, 343, 345, 346, 347, 362, 365, 366, 367, 386, 388, 390, 396, 398, 413, 414, 432], "float64": 362, "floattensortyp": 390, "fly": 427, "fn": 298, "focu": [8, 18, 419], "focus": [119, 402, 411], "folder": [372, 411, 414, 421, 429], "follow": [196, 225, 227, 229, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 386, 387, 391, 396, 398, 402, 405, 406, 408, 409, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "footprint": [10, 196], "forbid": 368, "forc": [82, 84, 178, 413, 414, 422, 425], "forest": [263, 264], "forgiv": 430, "fork": 414, "form": [202, 223, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 322, 411, 416, 417, 419, 423, 424, 425, 426, 427, 428, 433], "formal": 394, "format": [41, 288, 332, 337, 340, 390, 391, 404, 405, 411, 412, 413, 414, 419, 421, 427, 428], "format_except": 412, "former": [393, 413], "formul": 431, "formula": 393, "forrest": 413, "found": [75, 142, 194, 202, 305, 315, 343, 346, 349, 387, 393, 398, 411, 412, 414, 419, 420, 425, 431], "foundat": 425, "four": 393, "fourier": 99, "fourth": [420, 422], "fp": [356, 413, 417], "fp_size": [134, 424], "fpsrecommend": [376, 390, 391, 404, 405, 406, 411, 418, 425], "frac": [409, 423], "frac1": 382, "fraction": [13, 94, 319, 387, 417, 420, 421], "fraction1": 382, "fraction_1": 420, "fraction_2": 420, "fraction_3": 420, "frame": [324, 422, 433], "frame1": 382, "frame2": 382, "frame_1": 420, "frame_2": 420, "framea": 382, "framea_a": 382, "frameb": 382, "framework": [419, 424], "free": [414, 416, 421], "freedom": 427, "freeli": 393, "frequenc": 99, "frequent": 396, "fresh": 387, "frictionless": 427, "friendli": 413, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 134, 136, 137, 140, 142, 148, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 219, 227, 229, 231, 234, 236, 237, 240, 244, 247, 252, 256, 258, 260, 262, 264, 268, 274, 276, 282, 285, 286, 307, 311, 312, 316, 324, 325, 326, 328, 336, 347, 349, 358, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 403, 404, 406, 408, 409, 410, 412, 414, 416, 417, 418, 420, 422, 423, 424, 425, 428, 430, 431, 432, 433], "from_bound": [194, 413, 426], "from_campaign": [82, 422], "from_config": [27, 405, 406, 419], "from_datafram": [194, 196, 202, 413, 426, 427, 433], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 336, 390], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 336, 390, 391, 404, 419, 427], "from_paramet": [194, 196, 202, 413], "from_preset": 244, "from_product": [194, 196, 202, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 413, 420, 426, 427, 428], "from_recommend": [82, 422], "from_record": [427, 428], "from_simplex": [202, 393, 413, 426, 433], "from_surrog": [82, 422], "frozenset": 393, "fsspec": 413, "fulfil": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 387, 393, 394], "full": [22, 194, 343, 369, 410, 413, 419, 422, 424, 431, 432], "full_factori": 194, "full_lik": 388, "full_lookup": [371, 372, 373], "fulli": [393, 411, 413, 421, 428], "fulltest": 414, "func": 414, "func_nam": 408, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 69, 77, 79, 82, 98, 105, 108, 111, 113, 118, 141, 144, 176, 178, 179, 195, 200, 206, 210, 211, 219, 220, 223, 224, 226, 228, 229, 230, 235, 239, 245, 250, 265, 269, 270, 273, 280, 283, 284, 285, 286, 287, 290, 291, 293, 296, 309, 313, 318, 321, 324, 331, 332, 334, 339, 341, 348, 349, 352, 355, 364, 375, 381, 382, 383, 384, 386, 388, 393, 396, 404, 408, 409, 411, 412, 413, 417, 419, 420, 423, 425, 426, 428, 429, 430, 431, 433], "function_nam": [408, 409], "functionalgroup": 134, "functionalgroupsfingerprint": 134, "fundament": [424, 427], "furo": 413, "further": [393, 394, 404, 411, 418, 425, 426, 429, 431, 432], "furthermor": 398, "furyl": [371, 372, 373], "futur": [53, 196, 239, 381, 383, 384, 387, 408, 422, 430], "fuzzi": 290, "fuzzy_row_match": 290, "g": [49, 51, 52, 65, 82, 85, 129, 142, 196, 202, 297, 317, 330, 396, 411, 412, 413, 414, 417, 418, 420, 421, 422, 424, 425, 426, 428, 433], "g1": 394, "g2": 394, "g3": 394, "gain": [202, 419, 422], "gamma": 153, "gammaprior": 413, "garbag": 413, "gather": [168, 408, 409, 417, 431], "gaussian": [87, 185, 236, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 284, 376, 398, 413, 420, 425, 431], "gaussian_kd": 388, "gaussian_process": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 244, 246, 247, 251, 254, 256, 376, 413], "gaussianmixtureclusteringrecommend": 425, "gaussianprocesspreset": [244, 252], "gaussianprocesssurrog": [252, 376, 381, 382, 383, 384, 388, 398, 404, 405, 406, 413, 429], "gcf": [371, 373], "ge": 379, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 133, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 234, 236, 237, 240, 244, 247, 254, 256, 258, 260, 262, 264, 274, 276, 282, 288, 311, 317, 323, 336, 352, 360, 370, 376, 386, 393, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 428, 429, 430, 431, 432, 433], "geom_mean": [106, 114, 117, 398, 423], "geometr": [117, 347, 398, 423], "germani": [411, 415, 421], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 164, 166, 167, 168, 176, 178, 194, 244, 322, 376, 387, 393, 401, 402, 411, 413, 418, 432, 433], "get_candid": [202, 387], "get_cmap": 388, "get_comp_rep_parameter_indic": [196, 413], "get_current_recommend": [164, 166, 167, 168], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 387, "get_next_recommend": [164, 166, 167, 168], "get_parameters_by_nam": [194, 196, 202], "get_parameters_from_datafram": [194, 202], "get_subclass": 376, "get_surrog": [27, 82, 176, 178, 413, 422, 429], "get_transform_object": 413, "get_transform_paramet": 413, "get_valid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 413], "getawai": 134, "getawayfingerprint": 134, "ghosecrippen": 134, "ghosecrippenfingerprint": 134, "git": [411, 414], "github": [256, 287, 308, 328, 390, 413, 414, 415], "give": [390, 391, 393, 409, 416, 419, 423, 427], "given": [25, 27, 30, 36, 37, 38, 58, 75, 82, 85, 86, 109, 114, 119, 127, 140, 142, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 208, 223, 227, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 268, 279, 291, 295, 300, 301, 305, 306, 307, 310, 311, 314, 315, 319, 322, 325, 331, 336, 337, 345, 347, 350, 351, 357, 360, 381, 382, 383, 384, 387, 393, 396, 398, 402, 408, 409, 419, 426, 428], "glass_transition_tempc": 424, "global": [13, 353, 413, 432, 433], "gmean": 347, "gmm": 185, "go": [294, 393, 411], "goal": [370, 396, 423, 431], "goe": 429, "good": [322, 387, 398, 419, 421, 430], "good_interv": 322, "good_reference_valu": 322, "goodwil": 416, "googl": [413, 414], "govern": 411, "gp": [234, 236, 237, 240, 244, 258, 260, 262, 264, 413], "gpytorch": [87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 148, 150, 152, 153, 154, 155, 156, 157, 158, 413], "gradient": [10, 178, 262, 413, 421, 425], "grant": [413, 416], "granular": [391, 404, 405, 406, 411], "granularity_coar": 404, "granularity_fin": 404, "great": [396, 427], "greater": 168, "greatli": 414, "greedi": [178, 413, 425], "grid": [408, 409], "grid_d": [408, 409], "grossli": 416, "group": [295, 302, 360, 394, 411, 413, 419, 422], "groupbi": [229, 231], "grow": 433, "gt": [384, 393], "gu16": 424, "guarante": [420, 421, 425], "guid": [375, 411, 412, 413, 414, 417, 419, 423, 426, 428, 431], "guidelin": [413, 414, 417], "ha": [27, 49, 68, 69, 82, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 294, 305, 307, 311, 323, 330, 357, 358, 372, 376, 382, 393, 398, 402, 411, 413, 414, 416, 418, 419, 420, 422, 424, 426, 427, 428, 430, 431], "had": [223, 420, 424, 428], "half": [137, 154, 155, 336, 402, 418], "halfcauchyprior": 413, "halfnormalprior": 413, "hamster": 431, "hand": [41, 140, 394, 396, 408, 409, 411, 419, 427], "handl": [82, 124, 225, 227, 268, 334, 381, 382, 396, 398, 413, 419, 423, 433], "happen": [166, 398, 402, 409, 412, 413, 414, 426, 427, 431], "happili": 423, "hard": [413, 431, 433], "harmless": 416, "hartmann": [388, 408, 409], "hasattr": [378, 379, 401, 402], "hash": [288, 411, 421, 424], "hashabledict": 413, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 109, 114, 119, 140, 188, 196, 202, 223, 239, 271, 295, 302, 305, 322, 330, 331, 343, 371, 372, 375, 376, 381, 382, 386, 388, 393, 394, 396, 398, 401, 402, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 431, 433], "head": 413, "header": 351, "heart": 431, "heatmap": [82, 84], "help": [396, 427, 428, 431], "helper": [386, 388, 390, 393, 427], "henc": [316, 393, 396, 404, 420, 424, 433], "here": [52, 343, 371, 373, 375, 378, 379, 386, 387, 391, 393, 394, 401, 402, 404, 408, 409, 411, 412, 418, 420, 423, 424, 425, 426, 427, 428, 430, 431], "herebi": 416, "herein": [416, 419], "heurist": 178, "hierarch": 427, "hierarchi": [75, 413, 414, 419, 427], "high": [254, 370, 396, 413, 414, 417, 419, 420, 424, 427], "higher": [8, 18, 140, 396, 412, 420, 422, 425], "highest": [417, 427], "highlight": 431, "hint": 414, "histogram": 291, "histori": 414, "hold": [40, 302, 416, 427], "home": [381, 383, 384], "homepag": [411, 413], "hood": 424, "hook": [45, 112, 202, 211, 215, 307, 410, 412, 413, 414], "hopp": [411, 415], "host": [411, 413, 421], "hostnam": [288, 421], "hot": [131, 372, 396, 411, 413, 424], "how": [50, 225, 227, 357, 370, 371, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 402, 404, 405, 406, 409, 411, 419, 420, 421, 423, 428, 429, 430, 431], "howev": [142, 202, 239, 307, 386, 393, 396, 401, 402, 412, 414, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 431, 433], "hrovatin": 415, "html": [41, 87, 148, 287, 298, 343, 390, 413], "http": [41, 87, 148, 256, 287, 298, 308, 328, 343, 411, 413, 416, 431], "hue": [370, 371, 372, 373, 387, 408, 409], "human": [201, 340, 404, 413, 415, 427], "hybrid": [21, 22, 65, 169, 170, 178, 191, 196, 197, 376, 377, 381, 382, 383, 384, 398, 399, 404, 410, 411, 413, 425, 426], "hybrid_recommend": 402, "hybrid_sampl": [178, 425], "hyperparamet": 376, "hyperrectangl": [194, 426], "hypothesi": [411, 413, 414], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 65, 67, 68, 69, 70, 72, 82, 85, 86, 101, 104, 115, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 209, 223, 225, 227, 229, 231, 234, 236, 237, 238, 239, 240, 244, 254, 258, 260, 262, 264, 268, 271, 279, 284, 285, 286, 289, 290, 291, 295, 298, 300, 301, 305, 307, 308, 310, 311, 312, 315, 316, 322, 323, 324, 325, 329, 330, 331, 332, 335, 336, 343, 345, 346, 349, 351, 357, 358, 365, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 401, 402, 404, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "ideal": [418, 420, 428], "ident": [142, 294, 295, 422, 424, 427, 431], "identif": 396, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 229, 302, 316, 330, 331, 387, 413, 420, 424, 426, 427, 428, 431], "idx_offset": 41, "ignor": [109, 114, 119, 166, 178, 196, 203, 204, 225, 227, 229, 305, 328, 373, 387, 402, 413, 420, 427, 433], "ignore_exampl": 413, "ignore_list": 327, "ii": 416, "iii": 416, "illustr": 400, "iloc": 418, "imag": [396, 413], "imagin": [393, 396], "immedi": [349, 386, 419], "immut": 413, "impact": [372, 409, 421], "imperfect": 324, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 161, 171, 231, 238, 309, 381, 387, 393, 408, 413, 414, 415, 417, 422, 425, 426, 428, 431], "impli": [393, 411, 416, 420, 424], "implicitli": 427, "import": [74, 82, 114, 227, 387, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "impos": [393, 394, 420], "imposs": [411, 421, 427], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 376, 379, 385, 387, 410, 411, 413, 416, 421], "imput": [225, 227, 369, 373, 410, 411], "impute_mod": [225, 227, 229, 373, 428], "inabl": [411, 416], "inaccuraci": 411, "inact": 40, "inc": 431, "incident": 416, "includ": [58, 109, 114, 119, 168, 225, 300, 301, 327, 371, 382, 391, 393, 405, 406, 409, 413, 414, 416, 417, 418, 420, 433], "inclus": 416, "incom": 427, "incompat": [62, 63, 64, 65, 86, 240, 383, 420], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 418, "incompatibleexplainererror": 422, "incomplet": 413, "inconsist": 413, "incorpor": [416, 418, 429, 433], "incorrect": 413, "incorrectli": 413, "increas": [10, 166, 229, 285, 286, 398, 408, 409, 413, 417, 424, 431], "increment": 202, "incur": 416, "indefinit": [166, 225], "indemn": 416, "indemnifi": 416, "indent": 351, "independ": [170, 236, 260, 390, 413, 425, 428], "independentgaussiansurrog": [240, 258, 260, 262, 413], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 196, 229, 294, 295, 329, 330, 390, 391, 398, 402, 404, 413, 424, 426, 428], "indexkernel": 413, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 82, 85, 122, 123, 124, 126, 127, 129, 136, 137, 140, 196, 294, 295, 325, 357, 393, 402, 413, 416, 425, 428, 429], "indirect": [300, 301, 416], "indistinguish": 393, "individu": [49, 50, 102, 103, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 225, 332, 387, 394, 416, 419, 423, 425, 431], "induc": 396, "industri": 431, "ineffici": 202, "inequ": [41, 194, 426], "inf": [381, 382, 383, 384, 404], "infer": [142, 240, 408, 409, 413, 422, 426], "inferencesess": 240, "infin": 146, "infinit": [166, 167, 303, 335, 365, 366, 413, 424], "influenc": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191], "influenti": 431, "info": [291, 413], "inform": [22, 124, 274, 331, 371, 372, 373, 388, 393, 401, 402, 409, 411, 413, 414, 416, 418, 421, 424, 426, 431, 432], "infring": 416, "ingest": [202, 225, 424, 425], "ingredi": [393, 394, 420], "inher": [17, 393], "inherit": 414, "init": 270, "initi": [93, 94, 95, 96, 97, 98, 99, 100, 104, 167, 168, 170, 178, 185, 186, 187, 188, 190, 202, 225, 229, 290, 357, 369, 381, 382, 383, 384, 387, 388, 398, 404, 409, 410, 413, 415, 419, 421, 424, 425, 427, 428, 431], "initial_data": [225, 229, 371, 409, 428], "initial_recommend": [168, 376, 387, 388, 390, 391, 396, 404, 405, 406, 411, 425], "initial_recommender_cl": 413, "initial_strategi": 413, "initial_typ": 390, "inject": 427, "inner": [162, 329, 422, 425, 427], "inplac": [372, 408, 409, 433], "input": [36, 37, 38, 115, 123, 126, 127, 129, 137, 140, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 274, 276, 282, 284, 302, 319, 320, 324, 325, 329, 330, 336, 338, 345, 357, 370, 390, 398, 408, 409, 413, 427, 428, 431], "input_dim": 390, "input_label": 325, "inputtransform": 360, "insid": [387, 390, 391, 412, 427], "insight": [82, 387, 411, 413, 415, 432], "inspect": [311, 386, 393], "instabl": 420, "instal": [413, 414, 421, 422, 424, 433], "instanc": [36, 37, 38, 49, 52, 82, 164, 166, 167, 168, 196, 202, 322, 382, 387, 393, 394, 411, 412, 414, 418, 419, 420, 421, 422, 424, 426, 427, 428, 433], "instanti": [240, 387, 419], "instead": [166, 290, 316, 325, 381, 383, 384, 411, 412, 413, 419, 420, 423, 424, 427, 428, 430, 431, 433], "institut": [415, 416], "instruct": [411, 413, 430, 432], "instrument_nam": 291, "int": [10, 13, 17, 27, 30, 40, 41, 47, 82, 89, 90, 91, 94, 96, 97, 98, 99, 100, 115, 131, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 225, 229, 231, 276, 277, 284, 285, 286, 291, 332, 346, 350, 353, 354, 357, 358, 360, 381, 383, 384, 393, 396, 398, 409, 414, 424], "integ": [30, 131, 196, 229, 402, 413, 414, 424], "integr": [13, 413, 414, 417, 419], "intend": [375, 386, 408, 414, 425], "intens": 424, "intention": 416, "interact": [26, 27, 375, 411, 412, 419, 427], "interchang": 393, "interconnect": 419, "interest": [422, 423, 433], "interfac": [161, 238, 246, 386, 388, 413, 416, 419, 422], "intermedi": [188, 357], "intern": [27, 41, 53, 166, 370, 387, 398, 413, 420, 421, 424, 425, 426, 427], "internet": 411, "internship": 415, "interplai": 413, "interpol": [94, 254, 413], "interpret": [196, 223, 319, 391, 393, 405, 406, 409, 421, 426, 428], "interrupt": 60, "intersect": 402, "interv": [136, 282, 284, 285, 286, 398, 413, 419, 424, 427, 430], "intrins": 431, "introduc": [412, 413, 420, 424, 425, 428], "intuit": [419, 422], "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 66, 202, 316, 330, 358, 391, 405, 412, 419, 420, 426], "invalid_config": 406, "invalid_surrogate_model": 391, "invalid_typ": 406, "invari": [49, 52, 53, 294, 295, 420], "invers": [215, 427], "invert": [27, 329], "investig": [223, 428, 429], "invok": [428, 432, 433], "involv": [27, 202, 386, 393, 411, 421, 422, 423, 424, 427, 431], "io": 287, "irrelev": [393, 420], "irrespect": [290, 330], "irrevoc": 416, "is_bound": [336, 413], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140], "is_degener": 336, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140], "is_empti": [194, 202, 413], "is_eq": 41, "is_finit": 413, "is_fully_unbound": 336, "is_half_bound": 336, "is_in_rang": [122, 123, 124, 126, 127, 129, 136, 137, 140], "is_left_bound": 336, "is_numer": [122, 123, 124, 126, 127, 129, 136, 137, 140, 413], "is_right_bound": 336, "iso": 390, "isoxazol": 431, "issu": [239, 298, 308, 413, 416, 428, 433], "item": [37, 122, 123, 124, 126, 127, 129, 136, 137, 140, 393, 396, 408, 409, 424], "iter": [27, 136, 166, 167, 196, 202, 225, 239, 282, 303, 324, 337, 371, 381, 382, 383, 384, 387, 388, 396, 408, 409, 411, 413, 417, 419, 424, 425, 428, 429, 433], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 194, 196, 202, 219, 231, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 291, 294, 299, 307, 311, 322, 336, 340, 370, 376, 386, 388, 393, 394, 396, 409, 411, 412, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 431, 433], "itself": [386, 408, 412, 431], "j": [372, 411, 424, 431], "jackiepho": [371, 372, 373], "januari": 416, "javadi": 415, "jin": 415, "join": [329, 412], "joint": 419, "jointli": 419, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 336, 349, 390, 391, 404, 405, 413, 432], "json_str": 427, "juli": 415, "julian": 415, "jump": [413, 431], "jupyt": 390, "just": [396, 414, 427], "k": [137, 186, 357, 370, 371, 372, 373, 375, 376, 378, 379, 387, 393, 400, 401, 402, 413, 425, 433], "karin": 415, "kde": 388, "keep": [48, 140, 194, 202, 387, 413, 414], "kei": [302, 322, 372, 414, 422], "kept": [329, 424, 429], "kernel": [89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 244, 245, 246, 247, 248, 254, 256, 376, 381, 382, 383, 384, 398, 404, 413, 420, 431], "kernel_factori": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 244, 246, 247], "kernel_or_factori": 244, "kernelexplain": [80, 82, 83, 86, 422], "kernelfactori": [244, 247, 248, 254, 256, 413], "keyword": [82, 140, 373, 376, 402, 409, 413, 418, 420, 426, 428], "kgaa": [411, 415, 421], "kian": 431, "kickstart": 427, "kind": [178, 411, 413, 416, 420, 424, 425], "kiter": [381, 382, 383, 384, 398], "klekotaroth": 134, "klekotarothfingerprint": 134, "kmean": 376, "kmeansclusteringrecommend": [376, 425], "knob": 411, "know": [396, 405, 411, 412, 427, 431], "knowledg": [10, 411, 413, 431], "known": [420, 431], "koller": 431, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 93, 95, 97, 102, 103, 104, 150, 152, 153, 154, 155, 156, 157, 158, 161, 180, 238, 241, 246, 317, 335], "kwargs_conform": [140, 317, 424], "kwargs_fingerprint": [140, 317, 424], "l0": 30, "l1": 424, "l664": 256, "label": [52, 53, 129, 140, 291, 325, 393, 394, 411, 413, 420, 424, 426, 428], "labelpad": 388, "laggner": 134, "laggnerfingerprint": 134, "lambda": [381, 383, 384, 387, 393, 408, 429], "lanat": 422, "land": 413, "languag": [298, 394, 411], "larg": [140, 202, 378, 379, 394, 413, 421, 424, 428, 433], "larger": [94, 137, 358, 376, 383, 419, 420, 427, 431], "largest": [357, 396, 417], "last": [27, 166, 396, 414, 419, 425], "last_call_tim": 386, "lastli": 388, "latent": 424, "later": [137, 412, 419, 427], "latest": [411, 414, 419], "latter": [17, 27, 294, 311, 387, 393, 419, 431], "law": [411, 416], "lawsuit": 416, "layer": 134, "layeredfingerprint": 134, "layout": 413, "lazi": [204, 361, 413], "lazili": [413, 421], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 204], "le": 379, "le_method": 414, "lead": [73, 398, 413, 427], "lean": 414, "learn": [13, 230, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 376, 381, 382, 383, 384, 396, 398, 404, 408, 410, 411, 413, 420, 422, 424, 429, 430, 432], "least": [166, 394, 411, 416, 418, 419], "leav": 427, "lee": 415, "left": [70, 71, 158, 225, 323, 330, 336, 382, 413, 423], "left_df": 330, "leftov": 413, "legal": 416, "legend": [371, 373], "len": [382, 387, 388, 393, 394, 396], "length": [95, 166, 167, 234], "lengthi": 419, "lengthscal": [94, 95, 96, 98, 99, 100], "lengthscale_initial_valu": [94, 95, 96, 98, 99, 100], "lengthscale_prior": [94, 95, 96, 98, 99, 100], "leq": 30, "less": [295, 387, 388, 396, 419, 433], "let": [370, 372, 386, 387, 388, 390, 391, 393, 394, 400, 409, 411, 420, 423, 427], "level": [324, 413, 414, 418, 419, 420, 425, 427], "leverag": [387, 419, 425], "li": 424, "liabil": 416, "liabl": 416, "lib": [381, 383, 384, 412], "librari": 412, "licensor": 416, "lie": [27, 234, 236, 237, 240, 244, 258, 260, 262, 264, 322], "liebig": 415, "life": [411, 414, 415, 433], "lifecycl": 419, "ligand": [371, 372, 373, 375, 376, 387, 411, 422, 424], "ligand_data": 387, "ligand_smil": 387, "like": [188, 229, 297, 388, 393, 396, 411, 412, 413, 414, 418, 419, 420, 424, 427, 428, 431, 433], "likelihood": 234, "lime": [82, 85, 422], "limetabular": [80, 81, 422], "limit": [254, 291, 388, 411, 415, 416, 420, 426, 432], "line": [336, 351, 371, 373, 387, 396, 413, 414, 417, 419, 424, 428, 431], "linear": [41, 93, 194, 258, 280, 285, 376, 377, 398, 410, 413, 414, 422, 426, 430], "linear_model": 390, "linear_regressor": 390, "linearkernel": 413, "linearli": [254, 285, 286, 398, 413], "lineplot": [370, 371, 372, 373, 387, 408, 409], "lingo": 134, "lingofingerprint": 134, "link": [51, 412, 413, 416, 424], "linspac": [381, 382, 383, 384, 388, 390, 391, 393, 401, 402, 404, 408, 409, 433], "lint": [411, 413, 414], "linter": [413, 414], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 106, 127, 142, 147, 166, 167, 194, 196, 202, 203, 204, 207, 208, 209, 225, 229, 231, 290, 300, 301, 302, 310, 317, 322, 326, 327, 328, 330, 331, 357, 371, 376, 381, 382, 383, 384, 388, 393, 394, 396, 398, 401, 402, 409, 411, 414, 416, 420, 423, 424, 425, 426, 428], "liter": [82, 106, 166, 225, 227, 229, 324, 357, 414], "literatur": 413, "litig": 416, "littl": 412, "liver": [428, 431], "load": [349, 361, 387, 390, 405, 406, 412, 413], "loc": [156, 157, 371, 373], "local": [412, 414, 421, 422, 432], "locat": [156, 157, 418, 421, 431], "lockfil": 413, "log": [156, 291, 376, 411, 421], "logarithm": [4, 11, 12, 347], "logei": [4, 413], "logic": [162, 322, 325, 370, 413, 420, 425, 428, 433], "lognormalprior": 413, "logo": 413, "long": [419, 427, 428], "longer": 413, "look": [227, 376, 393, 396, 412, 417, 419, 420, 422, 427, 428, 430], "look_up_target": 225, "lookup": [223, 225, 229, 231, 325, 330, 369, 370, 388, 401, 410, 413, 422, 432], "lookup_df": 227, "lookup_test_task": 409, "lookup_training_task": 409, "lookup_valu": [378, 379, 388, 401, 402], "lookup_withmiss": 373, "loop": [223, 225, 231, 381, 382, 383, 384, 387, 398, 413, 418, 422, 428, 433], "loss": 416, "lost": 427, "lot": 400, "low": [254, 396, 412, 413, 422, 424, 427], "lower": [158, 284, 285, 286, 336, 371, 373, 388, 398, 408, 409, 424, 430], "lower_bound": 426, "lst_exclud": 326, "lt": 412, "luxuri": 419, "m": 393, "m1": 412, "mac": 412, "macc": 134, "maccsfingerprint": 134, "machin": [396, 411, 412, 414, 417, 421, 424, 430, 431], "machineri": [17, 178, 412, 414, 431, 433], "made": [74, 202, 225, 357, 373, 411, 412, 416, 420, 421, 428], "magic": 431, "magnitud": [323, 324, 433], "mai": [27, 109, 114, 119, 196, 307, 411, 416, 419, 427, 428], "mail": 416, "main": [26, 27, 411, 413], "maintain": [268, 414], "major": [413, 428], "make": [8, 18, 53, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 266, 267, 268, 298, 323, 325, 371, 373, 376, 378, 393, 394, 411, 412, 414, 416, 419, 420, 422, 424, 427, 431, 433], "make_explainer_for_surrog": 82, "malfunct": 416, "manag": [26, 194, 195, 196, 202, 354, 413, 416, 428], "mandatori": [413, 430], "mani": [358, 393, 401, 402, 411, 419, 424, 427, 430, 431], "manner": 421, "manual": [402, 412, 413, 427], "map": [129, 134, 140, 227, 229, 284, 285, 286, 305, 325, 360, 371, 372, 373, 398, 428, 430], "mapfingerprint": 134, "mapl": [80, 81, 82, 85, 422], "margin": 413, "mark": [416, 425, 431, 432], "markdown": [391, 405, 406, 413], "marker": [370, 371, 372, 373, 387, 408, 409, 413], "markers": [370, 372, 387, 408, 409], "market": 396, "marketplac": 413, "martin": [411, 415], "mask_bad1": 381, "mask_bad2": 381, "mask_bad3": 381, "mask_good": [381, 420], "mass": 152, "master": 256, "match": [27, 76, 123, 126, 127, 129, 137, 140, 142, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 274, 276, 279, 282, 290, 305, 307, 330, 331, 386, 388, 398, 402, 411, 413, 418, 419, 423, 425, 427, 428, 432], "match_attribut": 413, "match_targeta": 430, "match_targetb": 430, "materi": [396, 415, 431], "matern": 94, "maternkernel": 413, "math": [387, 393], "mathemat": 413, "matmin": 412, "matplotlib": [371, 373, 388, 413], "matter": [393, 400, 414, 423], "max": [227, 279, 323, 371, 372, 373, 375, 376, 381, 382, 383, 384, 387, 388, 390, 391, 396, 398, 404, 405, 406, 411, 413, 423, 427, 428, 432], "max_cardin": [30, 40, 47], "max_column": [332, 393], "max_colwidth": 332, "max_nonzero": 202, "max_row": [332, 393], "max_sum": [202, 393, 426], "max_target": 430, "max_yield": [371, 373], "maxim": [6, 279, 375, 388, 396, 398, 411, 413, 422, 430], "maximum": [6, 30, 40, 47, 140, 194, 196, 202, 284, 332, 393, 394, 398, 413, 420, 424, 426], "mc": [396, 418], "md": 413, "me2pph": [371, 372, 373], "mean": [5, 8, 17, 18, 27, 53, 106, 117, 164, 166, 167, 168, 186, 223, 225, 227, 229, 234, 260, 268, 347, 373, 376, 390, 396, 398, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 427, 429, 432], "meaning": 423, "meaningless": [393, 417], "meanpredictionsurrog": [268, 376, 429], "meantim": [414, 420], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 82, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 223, 225, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 274, 276, 282, 290, 322, 330, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 398, 401, 402, 404, 411, 413, 414, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432], "mechan": [8, 18, 27, 60, 114, 115, 117, 223, 226, 227, 231, 307, 329, 338, 357, 370, 386, 387, 388, 408, 409, 413, 416, 422, 426, 427, 431, 432], "mechanist": 411, "media": [416, 424, 431], "mediocr": 430, "medium": [391, 404, 411, 416, 424], "medoid": [187, 413, 425], "meet": [322, 416], "mem_estim": 433, "member": [311, 420, 424], "memori": [10, 196, 201, 202, 413, 421, 432], "memorys": [196, 202, 433], "mention": 417, "merchant": 416, "merck": [411, 415, 421], "mere": [416, 423], "merg": 414, "meshgrid": [408, 409], "messag": 387, "meta": [70, 164, 166, 167, 168, 171, 381, 382, 383, 384, 398, 404, 411, 413, 432], "metadata": [27, 194, 202, 288, 413], "metarecommend": [166, 167, 168, 413], "methanol": 393, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 219, 234, 236, 237, 238, 240, 244, 246, 247, 254, 256, 258, 260, 262, 264, 267, 270, 271, 274, 276, 282, 297, 298, 307, 311, 336, 349, 356, 357, 358, 360, 388, 391, 405, 406, 413, 415, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431], "methodtyp": [386, 387, 388], "methyldiphenylphosphin": [371, 372, 373], "methylisoxazol": 431, "metric": [396, 411, 421, 424], "mhfp": 134, "mhfpfingerprint": 134, "micromamba": 413, "midpoint": 430, "might": [49, 53, 140, 196, 372, 376, 378, 382, 402, 409, 412, 418, 419, 420, 421, 422, 426, 428, 431, 433], "mimic": [87, 148, 420], "min": [279, 323, 370, 378, 379, 388, 398, 401, 402, 408, 409, 411, 413, 423, 427, 432], "min_cardin": [30, 40, 47], "min_nonzero": 202, "min_target": 430, "mind": [396, 429], "miniconda": 413, "minim": [6, 279, 398, 408, 409, 413, 426, 430], "minimum": [30, 40, 47, 137, 194, 196, 202], "minor": 413, "mirror": [419, 427], "miss": [27, 225, 227, 373, 413, 414], "mistak": 414, "mix": [231, 393, 394, 411, 420, 424, 427, 431], "mixin": 219, "mixtur": [185, 410, 413, 420, 424, 425, 431, 433], "mobil": 413, "mode": [106, 129, 140, 166, 225, 234, 279, 282, 285, 305, 322, 369, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 387, 388, 390, 391, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 423, 425, 427, 432], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 82, 86, 87, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 234, 236, 237, 238, 239, 240, 244, 258, 260, 262, 264, 268, 270, 271, 343, 378, 379, 389, 408, 409, 411, 413, 415, 417, 418, 419, 420, 424, 425, 427, 428, 430, 431, 432], "model_cl": 271, "model_cluster_num_parameter_nam": [185, 186, 187, 188], "model_from_config": 390, "model_from_python": 390, "model_init": 270, "model_json": 390, "model_param": [185, 186, 187, 188, 258, 262, 264, 391, 413], "modelnottrainederror": [234, 236, 237, 240, 244, 258, 260, 262, 264], "modif": [412, 416], "modifi": [27, 227, 268, 322, 323, 324, 413, 416, 433], "modul": [0, 1, 28, 78, 79, 87, 107, 120, 138, 148, 159, 162, 171, 174, 181, 192, 210, 211, 223, 232, 242, 249, 272, 275, 292, 341, 361, 364, 411, 412, 413, 414], "modular": 414, "molecul": [51, 140, 316, 393, 424], "molecular": [317, 424], "moment": [231, 254, 414, 430], "monitor": [413, 421], "monkeypatch": 412, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 229, 370, 372, 373, 387, 396, 408, 409, 418, 428], "monte_carlo_run": [229, 387], "mordr": [134, 140, 371, 372, 373, 375, 376, 382, 387, 391, 393, 405, 406, 411, 413, 420, 424], "mordredcommun": 413, "mordredfingerprint": [134, 424], "more": [8, 10, 18, 53, 58, 71, 140, 166, 167, 194, 196, 202, 209, 225, 268, 287, 290, 311, 351, 373, 376, 388, 393, 394, 408, 411, 412, 413, 414, 416, 418, 419, 420, 421, 423, 424, 426, 427, 428, 430, 433], "morgan": 424, "morgan_fp": [134, 413], "mors": 134, "morsefingerprint": 134, "most": [202, 225, 374, 396, 411, 414, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433], "motiv": 413, "move": [413, 427], "mpl_toolkit": 388, "mplot3d": 388, "mqn": 134, "mqnsfingerprint": 134, "mse": 396, "mu": [156, 157], "much": [372, 423, 424], "multi": [233, 234, 410, 413, 415, 418, 431], "multiarmedbandit": 396, "multipl": [36, 114, 164, 166, 167, 168, 228, 229, 324, 371, 372, 373, 382, 393, 396, 411, 413, 418, 420, 423, 430, 431, 432], "multipli": 103, "multitask": 413, "must": [49, 109, 114, 119, 196, 202, 227, 231, 307, 324, 376, 386, 387, 393, 396, 398, 413, 414, 416, 417, 420, 421, 423, 424, 428], "mutual": 428, "my_attribut": 414, "my_valu": 421, "mypi": [298, 308, 411, 413, 414], "mystr": 414, "n": [22, 234, 295, 312, 357, 371, 372, 373, 375, 376, 381, 382, 383, 384, 391, 393, 396, 398, 401, 402, 404], "n_arm": 396, "n_batches_don": 27, "n_cluster": [186, 187], "n_combin": 393, "n_combinations_actu": 393, "n_combinations_expect": 393, "n_compon": 185, "n_doe_iter": [225, 229, 231, 370, 371, 372, 373, 387, 388, 408, 409, 428], "n_duplic": 393, "n_estim": 391, "n_fits_don": 27, "n_interrupted_campaign": 387, "n_iter": [378, 379, 381, 382, 383, 384, 396, 398], "n_mc_iter": [229, 231, 370, 372, 373, 387, 408, 409, 428], "n_mc_run": 396, "n_mc_sampl": 17, "n_permut": 393, "n_pis_ov": 387, "n_pis_over_requir": 387, "n_point": [194, 358], "n_raw_sampl": [178, 413, 425], "n_restart": [178, 413, 425], "n_sampl": 357, "n_task": 196, "n_task_param": 413, "n_wrong_sum": 393, "naiv": [170, 260, 268, 376, 413, 426], "naivehybridrecommend": 413, "naivehybridspacerecommend": [402, 413, 425], "nake": [290, 421], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 143, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 208, 217, 229, 240, 274, 276, 282, 294, 299, 305, 306, 307, 316, 317, 322, 326, 331, 344, 349, 351, 363, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 413, 414, 416, 418, 420, 421, 423, 426, 427, 428, 429, 430, 431, 433], "name_or_abbr": [299, 306], "namedtupl": 396, "namespac": [179, 413, 414], "nan": [27, 146, 234, 365, 367, 368, 398], "nativ": [390, 413], "natur": [262, 372, 414, 420, 425, 427, 430], "navig": [411, 419], "nbase": 317, "nbviewer": 390, "nd": 411, "ndarrai": [115, 284, 285, 286, 325, 333, 336, 347, 357, 388, 396, 413, 428], "ne": 393, "nearli": 430, "necessari": [331, 386, 414, 419, 420, 423, 424, 426, 428], "necessarili": [416, 419, 420, 426, 431], "need": [22, 27, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 231, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 307, 330, 331, 371, 372, 373, 376, 381, 384, 386, 388, 390, 393, 396, 398, 408, 409, 411, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433], "neg": [13, 413], "negat": [6, 41, 409, 413, 431], "neglig": 416, "neither": [231, 324], "neq": 30, "nest": [351, 419, 432], "neural": 431, "neurip": 431, "never": 383, "nevertheless": [311, 412], "new": [27, 43, 44, 106, 166, 168, 194, 227, 239, 284, 285, 286, 294, 328, 329, 375, 387, 388, 404, 411, 413, 414, 419, 420, 429, 431], "new_measur": 422, "new_rec": 419, "newli": [411, 414, 421, 431], "next": [27, 164, 166, 167, 168, 370, 386, 388, 393, 394, 404, 408, 409, 411, 417, 418, 419, 425, 427], "ngboost": [262, 376, 413], "ngboostmodel": 391, "ngboostsurrog": [376, 391, 429], "nice": [388, 412], "nicknam": 316, "nintern": 398, "no_duplicates_constraint": 393, "no_grad": 388, "no_tl": 408, "nois": [225, 323, 324, 409, 413, 432], "noise_level": 324, "noise_perc": [225, 229, 428], "noise_ratio": 323, "noise_std": [408, 409], "noise_typ": 324, "noisi": [12, 14, 408, 411, 413, 431], "non": [27, 57, 58, 81, 109, 114, 119, 170, 196, 225, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 305, 307, 311, 323, 358, 365, 366, 367, 393, 408, 411, 413, 416, 418, 422, 426, 427], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 104, 106, 114, 119, 123, 136, 137, 142, 145, 146, 147, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 199, 202, 205, 208, 209, 212, 213, 215, 217, 225, 227, 229, 231, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 270, 271, 276, 282, 290, 291, 307, 317, 322, 326, 327, 328, 332, 336, 337, 349, 360, 365, 366, 367, 368, 376, 381, 382, 383, 384, 386, 387, 388, 390, 391, 398, 404, 426, 430, 432], "nonetheless": 431, "nonlinear": [33, 194], "nonpredict": [183, 185, 186, 187, 188, 190, 191], "nonpredictiverecommend": [188, 190, 191, 413], "nonzero": [30, 202, 413], "noqa": [381, 414], "nor": 324, "norecommenderslefterror": [166, 167], "noreturn": 241, "normal": [155, 156, 157, 381, 383, 384, 398, 412, 416, 423, 426], "normaliz": 423, "normalprior": 413, "not_a_param": 391, "notabl": 413, "note": [27, 30, 53, 196, 225, 229, 231, 239, 240, 322, 323, 324, 371, 372, 373, 376, 382, 386, 390, 391, 393, 398, 401, 402, 404, 405, 406, 411, 419, 420, 421, 423, 425, 426, 427, 428, 429, 431], "notebook": 390, "noteworthi": 419, "noth": [13, 27, 30, 38, 40, 41, 47, 72, 114, 127, 140, 168, 170, 176, 178, 185, 186, 187, 188, 194, 196, 202, 234, 244, 258, 262, 264, 282, 416, 424], "notic": [386, 414, 416, 427], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 209, 212, 213, 231, 234, 236, 237, 239, 240, 244, 258, 260, 262, 264], "notwithstand": 416, "now": [370, 371, 372, 373, 375, 376, 381, 383, 386, 387, 388, 393, 394, 396, 398, 400, 404, 405, 408, 409, 411, 413, 431, 433], "np": [115, 378, 379, 381, 382, 383, 384, 388, 390, 391, 393, 394, 396, 400, 401, 402, 404, 408, 409, 420, 424, 428, 433], "nrecommend": [375, 376, 398, 401, 402], "nu": 94, "num": [329, 340], "num_disc_1": [398, 419], "num_disc_2": 398, "num_experi": [225, 370, 371, 372, 373, 387, 408, 409], "num_fantasi": 10, "num_parameter_1": 384, "num_parameter_2": 384, "num_parameter_3": 384, "num_parameter_4": 384, "num_parameter_5": 384, "num_parameter_6": 384, "num_sampl": 99, "num_valu": [381, 382, 383, 384, 398, 404, 426], "number": [10, 13, 17, 27, 40, 99, 140, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 225, 229, 231, 234, 332, 336, 340, 352, 357, 358, 371, 372, 373, 378, 379, 381, 382, 383, 384, 388, 393, 396, 401, 408, 409, 411, 412, 413, 417, 419, 420, 421, 423, 424, 426, 427, 428, 433], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 73, 122, 123, 124, 126, 127, 129, 136, 137, 140, 194, 202, 227, 282, 290, 323, 324, 330, 358, 370, 375, 378, 393, 394, 413, 420, 421, 422, 423, 424, 426, 428, 430], "numerical_measurements_must_be_within_toler": [27, 290, 330, 413, 419], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 194, 370, 378, 379, 394, 400, 402, 409, 426, 428, 432], "numericaldiscreteparamet": [202, 371, 372, 373, 375, 376, 378, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 398, 401, 402, 404, 405, 406, 408, 409, 411, 426, 427, 428, 432, 433], "numericaltarget": [227, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 387, 388, 390, 391, 398, 401, 402, 404, 405, 406, 408, 409, 411, 413, 423, 427, 428, 432], "numericcontinu": 402, "numparam1": 384, "numparam2": 384, "numparam3": 384, "numparam4": 384, "numparam5": 384, "numparam6": 384, "numpi": [325, 333, 336, 342, 344, 378, 379, 381, 382, 383, 384, 388, 390, 391, 393, 394, 396, 400, 401, 402, 404, 408, 409, 413, 420, 428, 433], "nuniqu": 393, "nyou": [401, 402], "o": [370, 371, 372, 373, 375, 376, 379, 381, 382, 383, 384, 387, 388, 391, 393, 396, 408, 409, 411, 420, 421, 424], "o2": [371, 372, 373], "obj": [145, 146, 147, 213], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 114, 117, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 203, 204, 213, 214, 217, 219, 234, 236, 237, 238, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 297, 298, 305, 307, 324, 330, 331, 336, 349, 360, 370, 375, 386, 387, 388, 390, 391, 396, 400, 402, 405, 406, 412, 413, 414, 416, 419, 420, 422, 425, 426, 428, 429, 430, 432, 433], "objective_json": 427, "oblig": 416, "observ": [223, 396, 428, 430], "obtain": [225, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 372, 388, 396, 409, 411, 413, 419, 422, 427, 431], "oc": [371, 372, 373, 375, 376], "oc1": [371, 372, 373], "occur": [52, 414], "occurr": 420, "octanol": [420, 424], "off": [8, 18, 231, 312, 382, 411, 413, 420, 421, 430], "offer": [307, 388, 393, 396, 401, 411, 412, 416, 417, 424, 425, 427, 428, 429, 431, 433], "offset": [41, 97], "offset_initial_valu": 97, "offset_prior": 97, "often": [394, 396, 412, 417, 420, 421, 422, 424, 427, 433], "oftentim": [427, 428], "oh": [126, 131, 372, 382, 391, 396, 398, 404, 405, 406, 411, 426, 427], "ok": 398, "old": 431, "omit": [229, 307, 386, 411, 426, 427], "onc": [229, 387, 424, 428], "one": [17, 27, 58, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 152, 161, 162, 166, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 209, 227, 244, 268, 294, 295, 351, 371, 372, 373, 376, 378, 393, 396, 398, 406, 408, 409, 411, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431], "onehot": 372, "ones": [196, 290, 330, 372, 402, 413, 418, 431], "ongo": [387, 431], "onli": [8, 10, 18, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 82, 94, 109, 114, 119, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 202, 227, 231, 268, 290, 291, 307, 308, 311, 322, 330, 336, 351, 357, 358, 371, 376, 381, 382, 387, 388, 390, 391, 393, 401, 402, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433], "onlin": 396, "onnx": [239, 240, 343, 389, 411, 413, 429], "onnx_input_nam": [240, 390], "onnx_str": [240, 390], "onto": 414, "open": [411, 414], "opentelemetri": [411, 413, 421], "oper": [38, 41, 50, 215, 268, 325, 341, 378, 379, 383, 384, 393, 394, 412, 413, 418, 420, 422, 425, 427], "operator_convert": 390, "opposit": 420, "opt": [411, 421], "optim": [17, 27, 41, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 223, 225, 229, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 322, 372, 374, 375, 378, 379, 387, 388, 393, 396, 398, 402, 413, 415, 417, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431], "optimize_acqf": [41, 178], "optimize_acqf_": 41, "optimize_acqf_discret": 178, "optimize_acqf_mix": 178, "option": [27, 74, 78, 82, 93, 94, 95, 96, 97, 98, 99, 100, 104, 114, 119, 123, 126, 127, 129, 137, 140, 142, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 215, 217, 225, 229, 231, 258, 262, 264, 270, 276, 282, 307, 317, 322, 326, 327, 328, 349, 373, 376, 390, 391, 396, 412, 413, 414, 417, 419, 420, 422, 423, 426, 427, 428, 429, 430, 433], "oracl": 428, "orchestr": [414, 419], "order": [196, 202, 387, 396, 411, 413, 414, 419, 420, 424, 427, 431], "ordin": 430, "org": [41, 256, 298, 328, 390, 411, 416], "organ": 414, "origin": [22, 27, 294, 295, 302, 325, 404, 413, 414, 416, 425, 427, 429], "orthogon": 414, "oserror": 412, "other": [49, 101, 194, 295, 371, 373, 375, 378, 379, 387, 394, 396, 402, 408, 409, 411, 412, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433], "otherwis": [41, 122, 123, 124, 126, 127, 129, 136, 137, 140, 416, 417, 423, 431], "our": [370, 381, 383, 386, 387, 388, 391, 393, 394, 396, 400, 401, 402, 405, 406, 408, 409, 411, 414, 417, 419, 420, 427, 428], "out": [202, 398, 409, 411, 416, 421, 428, 431], "outcom": [161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 372, 411, 424, 430], "output": [27, 104, 324, 325, 349, 370, 408, 409, 412, 413, 415, 428, 429], "output_label": 325, "outputscal": 104, "outputscale_initial_valu": 104, "outputscale_prior": 104, "outsid": [27, 268, 285, 286, 322, 330, 398, 413, 427], "outstand": 416, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 393, 413, 417, 431], "overal": [196, 390, 391, 393, 394, 396, 413, 414, 419, 423, 431], "overlap": [57, 58, 378, 379, 420], "overrid": [215, 217, 386, 413], "overridden": [386, 414], "overview": [411, 427], "overwritten": 402, "own": [170, 370, 394, 411, 412, 413, 414, 416, 420, 424], "owner": 416, "ownership": 416, "p": [370, 371, 372, 373, 375, 376, 378, 379, 386, 388, 401, 408, 409, 414, 422, 429, 433], "p1": [426, 427, 428], "p1_json": 427, "p1_via_json": 427, "p2": [426, 427, 428], "p2_json": 427, "p2_via_json": 427, "p3c4": [371, 372, 373], "p_cont": 426, "p_disc": 426, "p_g1_amount": 394, "p_g2_amount": 394, "p_g3_amount": 394, "p_i": 30, "pack": 427, "packag": [82, 134, 288, 381, 383, 384, 412, 413, 414, 424, 428, 429, 433], "page": [390, 411, 413, 414], "pair": [294, 411, 424], "pam": 187, "pamclusteringrecommend": 425, "panda": [48, 203, 221, 222, 227, 316, 333, 370, 371, 372, 373, 378, 379, 381, 387, 388, 393, 394, 398, 401, 402, 408, 409, 413, 420, 424, 426, 427, 428], "paper": 431, "paper_fil": 431, "parallel": 414, "param": [389, 391, 410], "param1": [426, 428], "param2": [426, 428], "param_bounds_comp": 413, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 71, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 115, 119, 122, 123, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 198, 201, 202, 203, 204, 207, 208, 209, 215, 217, 219, 223, 225, 227, 229, 231, 234, 236, 237, 240, 244, 247, 254, 256, 258, 260, 262, 264, 266, 268, 270, 271, 274, 276, 282, 284, 285, 286, 290, 291, 294, 295, 300, 301, 302, 305, 307, 310, 311, 312, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 345, 346, 347, 349, 351, 353, 354, 357, 358, 360, 370, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 413, 414, 420, 421, 423, 427, 428, 429, 431, 432], "parameter": [152, 153, 154, 155, 156, 157, 158], "parameter_json": 427, "parameter_nam": [194, 196, 202, 402], "parameterencod": [123, 131, 132, 134, 137], "parametr": 420, "parent": 414, "pars": [338, 413], "parser": 413, "part": [13, 22, 36, 65, 170, 171, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 322, 391, 402, 405, 406, 408, 409, 413, 414, 416, 417, 418, 419, 420, 422, 425, 426, 427, 433], "parti": [416, 428], "partial": [22, 387, 432], "particl": 431, "particular": [27, 202, 223, 386, 402, 411, 412, 414, 416, 419, 424, 426, 427, 428], "particularli": [307, 419], "partit": [187, 229, 231, 413, 425, 428], "partitionexplain": [80, 83], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 140, 185, 186, 187, 188, 196, 202, 213, 244, 258, 262, 264, 331, 393, 404, 409, 413, 414, 422, 423, 424, 427], "passthrough": [24, 110, 198, 248], "patch": 387, "patent": 416, "path": [349, 372, 393, 413, 414, 421, 433], "pattern": [134, 414, 431], "patternfingerprint": 134, "pd": [27, 227, 294, 295, 329, 370, 371, 372, 373, 378, 379, 381, 387, 388, 393, 394, 398, 401, 402, 408, 409, 413, 420, 424, 426, 427, 428], "pdf": 431, "peek": 427, "pend": [22, 27, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 411, 413, 432], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 413, 418, 425], "per": [225, 371, 372, 373, 376, 393, 398, 401, 408, 409, 413, 424, 426, 428], "percent": [225, 416], "percentag": [178, 290, 324, 376, 381, 382, 383, 384, 393, 398, 404, 409, 425], "perf_count": 386, "perfectli": 427, "perform": [178, 225, 290, 372, 381, 382, 383, 384, 388, 393, 405, 408, 409, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 428, 429, 431], "period": 95, "period_length_initial_valu": 95, "period_length_prior": 95, "periodickernel": 413, "perm_inv_constraint": 393, "permiss": [411, 416], "permut": [49, 52, 53, 295, 413, 420], "permutation_invari": 49, "permutationexplain": [80, 83], "perpetu": 416, "persist": [413, 415, 419, 421, 427, 429], "perspect": 427, "pertain": 416, "pharmacophor": 134, "pharmacophorefingerprint": 134, "phase": [168, 394], "phaseagent1": 394, "phaseagent2": 394, "phcpho": [371, 372, 373, 375, 376], "phenomenon": 419, "philosophi": 427, "physic": 428, "physiochemicalproperti": 134, "physiochemicalpropertiesfingerprint": 134, "pi": [7, 376, 387, 388], "pi_max": 388, "pi_per_iter": 388, "pi_required_fract": 387, "pi_threshold": 387, "pickl": 413, "pictur": 411, "piec": [396, 411, 419, 420], "piecewis": 96, "piecewisepolynomialkernel": 413, "pin": [22, 413], "pin_discret": 22, "pinned_part": 22, "pip": [411, 413, 414, 422, 433], "pipelin": [408, 409, 413, 414], "pival": [371, 372, 373, 375, 376], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 227, 322, 323, 324, 390, 391, 393, 396, 412, 413, 414, 416, 419, 424, 427, 431], "placehold": 297, "plai": [419, 422, 430], "plain": 248, "plainkernelfactori": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 244], "plan": [239, 424], "platt": 431, "pleas": [390, 391, 411, 417, 422, 425], "plenti": 422, "plot": [82, 84, 225, 371, 372, 373, 408, 409, 413, 429, 431, 432], "plot_abegin_convert_pipelin": 343, "plot_ebegin_float_doubl": 343, "plot_typ": 82, "plotting_them": 349, "plt": [371, 373, 388], "plu": [227, 411], "plugin": 413, "pm": [5, 376], "png": [371, 373], "po16": 424, "poetri": 413, "point": [6, 13, 17, 22, 26, 27, 82, 137, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 202, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 342, 343, 355, 356, 357, 358, 362, 371, 375, 376, 387, 394, 401, 402, 408, 409, 411, 413, 415, 417, 418, 419, 422, 425, 426, 432, 433], "points_per_dim": [388, 401, 402, 408, 409], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 204, 411, 413, 415, 432, 433], "poli": 388, "polici": 396, "polycollect": 388, "polym": 424, "polynomi": [96, 97], "polynomialkernel": 413, "polytop": 413, "popul": 393, "popular": [422, 424, 429], "posit": [82, 307, 357, 413, 423], "posixpath": 349, "possibl": [142, 202, 203, 204, 223, 307, 322, 373, 387, 388, 393, 398, 411, 413, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 433], "possibli": 167, "post": 424, "post_hook": [307, 386, 387, 388], "posterior": [5, 6, 8, 13, 17, 18, 27, 234, 236, 237, 240, 244, 258, 260, 262, 264, 267, 376, 413, 417, 429], "posterior_mean": [234, 396], "posterior_mod": 234, "posteriorstandarddevi": [396, 417], "postprocess": 316, "potassium": [371, 372, 373, 375, 376], "potenti": [196, 330, 411, 412, 413, 414, 419, 422, 423, 426, 433], "power": [97, 416, 420, 425], "pph3": [371, 372, 373], "pr": [413, 414], "practic": [417, 422, 425], "pre": [142, 166, 247, 389, 412, 413, 414], "pre_hook": [307, 386], "precis": [53, 166, 194, 290, 332, 343, 344, 363, 413, 432], "precomput": 129, "predefin": [349, 419, 425], "predict": [8, 18, 27, 68, 188, 234, 236, 237, 240, 244, 258, 260, 262, 264, 411, 413, 417, 418, 419, 428, 429, 431], "predictor": 266, "prefer": [27, 416, 427], "prefix": 317, "preliminari": 431, "prepar": [388, 414, 416, 433], "preprocess": 413, "presenc": 412, "present": [64, 109, 114, 119, 196, 294, 295, 307, 330, 375, 396, 413, 420, 428, 433], "preset": [244, 251, 254, 256, 413], "pressur": [383, 390, 391, 404, 405, 406, 411, 420], "pretrain": [240, 389, 410], "pretti": 332, "pretty_print_df": [393, 413], "prevent": [212, 213, 307, 412, 413, 414], "previou": [166, 387, 388, 413, 419, 421, 425, 431], "previous": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 290, 371, 372, 373, 375, 376, 383, 418], "price": 424, "primari": 419, "primarili": 417, "principl": [393, 396, 429], "print": [227, 332, 351, 371, 372, 373, 375, 376, 378, 379, 383, 386, 390, 391, 393, 394, 396, 400, 401, 402, 404, 405, 406, 411, 413, 426, 433], "print_parameter_names_hook": 386, "printer_inst": 386, "prior": [93, 94, 95, 96, 97, 98, 99, 100, 104, 152, 153, 154, 155, 156, 157, 158, 234, 254, 384, 411, 412, 413], "priori": [420, 427, 431], "privat": [413, 415], "probabilist": 417, "probability_of_improv": 388, "probabilityofimprov": [387, 388], "probabl": [7, 15, 17, 376, 385, 387, 410, 413], "problem": [393, 394, 396, 408, 409, 413, 414, 419, 423, 427], "problemat": [311, 412, 424], "proce": [225, 375, 421], "procedur": [417, 431], "proceed": 431, "process": [27, 87, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 329, 357, 376, 386, 393, 396, 408, 409, 413, 414, 417, 418, 419, 420, 421, 424, 427, 431], "prod": 384, "prod_constraint": 384, "prod_i": 423, "produc": [115, 227, 411, 414, 428], "product": [54, 103, 196, 202, 203, 204, 303, 380, 410, 411, 413, 416, 420, 432, 433], "product_paramet": [202, 393, 426], "productkernel": 413, "programmat": 393, "progress": [27, 165, 388, 413], "prohibit": 417, "project": [388, 411, 413, 421], "promin": 416, "promis": [387, 418], "proper": 413, "properli": [22, 398, 412, 426], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 201, 202, 234, 236, 237, 240, 244, 247, 251, 254, 256, 258, 260, 262, 264, 274, 276, 279, 280, 282, 298, 336, 356, 360, 413, 414, 420], "proport": 409, "propos": 419, "protobuf": 413, "protocol": [160, 161, 238, 246, 311, 413], "prototyp": 415, "provid": [13, 27, 41, 82, 86, 115, 129, 140, 142, 161, 166, 167, 170, 171, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 215, 219, 223, 225, 227, 229, 231, 234, 236, 237, 240, 244, 254, 256, 258, 260, 262, 264, 294, 303, 307, 319, 323, 324, 328, 331, 333, 357, 358, 370, 371, 372, 373, 386, 393, 400, 401, 402, 405, 408, 409, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 413, 417], "pubchem": 134, "pubchemfingerprint": 134, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 201, 202, 219, 234, 236, 237, 238, 240, 244, 246, 247, 251, 254, 256, 258, 260, 262, 264, 274, 276, 279, 280, 282, 297, 298, 336, 356, 360, 413, 414], "publicli": 416, "publish": 413, "pull": [396, 413], "pure": [8, 10, 13, 18, 162, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 231, 239, 358, 401, 413, 432], "purerecommend": [164, 166, 167, 168, 170, 176, 183, 413], "purpos": [13, 386, 387, 390, 396, 411, 412, 414, 416, 427, 433], "push": 414, "put": [393, 396, 421, 424], "puzzl": 411, "py": [256, 381, 383, 384, 413, 421], "py310": [381, 383, 384], "py312": 414, "pyarrow": 413, "pydant": 413, "pydoclint": [413, 414], "pydocstyl": 414, "pylint": 413, "pymatgen": 412, "pypi": [411, 413], "pyplot": [371, 373, 388], "pyproject": 413, "pytest": [413, 414], "python": [26, 298, 308, 372, 391, 405, 406, 411, 412, 413, 414, 419, 421, 427], "python3": [381, 383, 384], "python310": 412, "pytorch": 413, "pyupgrad": 413, "q": [96, 266, 267, 376, 418], "qei": [9, 376, 405, 406, 413], "qkg": [10, 413], "qlogei": [11, 376, 413], "qlogexpectedimprov": [376, 381, 382, 383, 384, 398, 404], "qlognei": [12, 413], "qnegintegratedposteriorvari": 417, "qnei": [14, 413], "qnipv": [13, 413, 417], "qpi": [15, 376], "qsimpleregret": 17, "qsr": [16, 413], "qt": 17, "qthompsonsampl": [396, 413], "quadrat": [100, 370], "qualiti": 414, "quantif": 431, "quantifi": [396, 417, 431], "quantiti": [27, 51, 421, 423, 429, 433], "quantum": 129, "qucb": [18, 376, 417], "queri": [162, 171, 223, 225, 227, 411, 419, 421, 428], "question": [414, 419, 431], "qupperconfidencebound": 417, "qvarucb": 413, "r": [371, 372, 373, 375, 376], "radial": 98, "radiu": [134, 413, 424], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 82, 86, 115, 142, 146, 147, 166, 167, 176, 178, 194, 196, 202, 208, 209, 212, 213, 225, 227, 231, 234, 236, 237, 239, 240, 241, 244, 258, 260, 262, 264, 271, 295, 305, 307, 310, 312, 315, 319, 320, 322, 323, 324, 330, 331, 351, 357, 358, 386, 387, 388, 402, 412, 413, 414, 425], "rand": 390, "random": [13, 99, 194, 196, 225, 227, 229, 263, 264, 322, 356, 357, 358, 370, 371, 372, 373, 376, 387, 388, 390, 394, 396, 409, 411, 413, 417, 424, 425, 428, 433], "random_campaign": 370, "random_forest": [264, 376], "random_se": [225, 229, 387, 428], "randomforestmodel": 391, "randomforestsurrog": [376, 413, 429], "randomli": [191, 370, 372, 417, 422, 425], "randomrecommend": [370, 371, 372, 373, 376, 381, 382, 383, 384, 386, 387, 388, 394, 396, 398, 413, 418, 425], "rang": [122, 123, 124, 126, 127, 129, 136, 137, 140, 274, 322, 323, 370, 378, 379, 381, 382, 383, 384, 388, 393, 396, 398, 400, 401, 402, 409, 411, 420, 426, 427, 428, 430, 433], "rank": 430, "rare": 413, "rastrigin": [378, 379, 401, 402], "rate": [153, 234, 396], "rather": [404, 412, 417, 427], "ration": 100, "ravel": [408, 409], "raw": [178, 427], "rbf": 98, "rbfkernel": 413, "rdf": 134, "rdffingerprint": 134, "rdkit": [134, 381, 383, 384, 413, 420, 424], "rdkit2ddescriptor": [134, 372, 381, 383, 384, 413], "rdkit2ddescriptorsfingerprint": 134, "rdkitfingerprint": 134, "re": [387, 401, 402, 414, 425], "reach": [284, 286, 398], "reachabl": 421, "reactant": [422, 424], "reaction": [372, 375, 411, 420, 422, 424, 431], "reactor": [418, 431], "reactora": 431, "reactorb": 431, "reactorc": 431, "read": [129, 196, 349, 372, 375, 411, 413, 414], "read_excel": [371, 372, 373, 387], "readabl": [201, 332, 340, 404, 413, 415, 416, 427], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 225, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 414, 418], "readm": [413, 414], "reagent": [420, 424], "real": [336, 411, 419, 430], "realist": 428, "realiz": [223, 428], "reason": [38, 185, 186, 187, 188, 202, 372, 401, 413, 416, 417, 418, 420, 421, 424, 428], "reassembl": 427, "rebas": 414, "rec": [381, 382, 383, 384, 398, 418, 419], "rec_finish": 418, "rec_next": 418, "rec_pend": 418, "receiv": [416, 421, 427], "recip": 414, "recipi": 416, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 65, 70, 71, 82, 127, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 223, 225, 238, 239, 290, 322, 324, 370, 371, 372, 373, 374, 378, 379, 381, 382, 383, 384, 386, 387, 388, 394, 396, 398, 405, 406, 408, 409, 410, 411, 413, 414, 417, 421, 422, 424, 428, 429, 431, 432, 433], "recommendation_orig": 404, "recommendation_recr": 404, "recommended_arm_idx": 396, "recommender_with_hook": 387, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 82, 164, 166, 167, 168, 173, 238, 386, 388, 413, 418], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 336, 411, 419, 421, 427], "record": [27, 290, 291, 411, 421, 431], "recreat": [251, 404, 427], "recreate_model": 391, "recurs": [300, 301], "redesign": 413, "redistribut": 416, "reduc": [140, 388, 396, 408, 409, 424], "reduct": 432, "ref": 411, "refactor": 413, "refer": [223, 256, 290, 306, 322, 330, 343, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 386, 388, 390, 391, 393, 398, 401, 402, 404, 412, 413, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431], "referenc": 414, "refin": [387, 411, 413, 419], "reflect": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 388, 413, 414, 417, 420, 424], "regard": [30, 36, 378, 379, 414, 416], "regim": [413, 422], "regist": [307, 385, 387], "register_custom_architectur": 413, "register_hook": [385, 386, 387, 388, 413], "registr": 413, "regress": 258, "regressor": 390, "regret": [16, 17], "regroup": 413, "regular": [17, 268, 400, 412, 413, 418, 431], "reinstal": 411, "rel": [225, 323, 420, 423], "relat": [51, 109, 114, 116, 119, 130, 196, 214, 278, 293, 402, 408, 409, 411, 413, 419, 420, 421, 431], "relationship": [408, 409, 411, 414, 423, 431], "relative_perc": 324, "releas": [411, 413], "relev": [49, 82, 202, 227, 331, 382, 393, 413, 414, 419, 420, 422, 431, 433], "reli": [412, 413], "reliabl": 424, "remain": [52, 231, 285, 370, 393, 396, 398, 402, 408, 409, 416, 424, 427, 428], "remaind": 358, "remind": 413, "remot": 414, "remov": [48, 51, 52, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 202, 393, 414, 420, 426], "renam": [372, 408, 409, 413, 414], "render": [82, 390], "reoccur": 431, "reorder": 413, "reorgan": 413, "repeat": [396, 413, 414, 418, 419], "repetit": [229, 376, 387], "rephras": 420, "replac": [401, 402, 413, 414], "replic": 427, "repo": 413, "report": [161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 396, 412], "repositori": [372, 411, 414], "repr": 390, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 102, 103, 129, 196, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 319, 333, 336, 340, 357, 370, 393, 394, 396, 405, 406, 411, 413, 416, 419, 424, 426, 428, 433], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 219, 234, 236, 237, 238, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 312, 314, 319, 322, 332, 336, 351, 381, 382, 383, 384, 390, 392, 398, 404, 413, 418, 419, 424, 427, 428, 432, 433], "reproduc": [387, 396, 413, 416, 432], "reproduct": 416, "request": [27, 70, 71, 115, 166, 167, 168, 209, 247, 288, 357, 358, 413, 418, 419], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 40, 41, 47, 69, 168, 202, 271, 307, 375, 386, 387, 390, 394, 396, 398, 401, 405, 411, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 433], "rerun": 390, "reserv": [411, 414], "reset_index": 408, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 382, 384, 393, 427], "resolv": 316, "resort": [268, 414, 427, 433], "resource_track": 412, "resp": [197, 373, 402], "respect": [27, 178, 197, 225, 229, 289, 294, 322, 393, 394, 414, 419, 420, 422, 423, 427, 428, 429, 430, 433], "respons": [416, 419, 425], "restart": [166, 178], "restor": 427, "restr": 17, "restrain": 424, "restrict": [196, 202, 223, 229, 231, 381, 394, 413, 428, 431, 432], "result": [8, 10, 18, 27, 140, 202, 225, 322, 329, 371, 372, 373, 375, 390, 391, 393, 394, 396, 398, 400, 408, 409, 411, 413, 415, 416, 417, 419, 420, 421, 422, 424, 425, 427, 428, 431, 432, 433], "result_baselin": [408, 409], "result_fract": 409, "results_interrupt": 387, "results_uninterrupt": 387, "retain": [416, 420], "retrain": [239, 240, 429], "retriev": [196, 223, 299, 300, 301, 315, 414, 428], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 82, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 109, 110, 112, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 180, 183, 185, 186, 187, 188, 190, 191, 194, 196, 198, 199, 202, 203, 204, 205, 207, 208, 209, 212, 213, 215, 216, 217, 219, 221, 222, 225, 227, 229, 231, 234, 236, 237, 238, 240, 241, 244, 247, 248, 252, 258, 260, 262, 264, 266, 267, 268, 270, 271, 274, 276, 282, 284, 285, 286, 288, 289, 290, 291, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 345, 346, 347, 349, 350, 351, 357, 358, 360, 365, 366, 367, 368, 370, 381, 387, 388, 390, 393, 396, 408, 413, 419, 420, 428, 429, 433], "return_std": 390, "reus": [168, 413], "reuse_last": 166, "reveal": [388, 394, 409], "review": 414, "revis": [413, 416], "reward": 396, "rework": 413, "rewrit": 413, "rff": 99, "rffkernel": 413, "rh": [41, 43, 44, 378, 379, 394, 420], "right": [41, 158, 330, 336, 371, 373, 382, 396, 411, 412, 414, 416, 420, 423, 424, 430], "right_df": 330, "rihana": 415, "rim": 415, "risk": [412, 416, 419], "roam": 412, "robust": [411, 431], "robustli": 268, "role": [413, 414, 419, 422, 423, 428, 430, 432], "room": [388, 419], "root": [372, 411, 414, 420], "round": [332, 378, 390, 391, 420], "roundtrip": [413, 427], "rout": 427, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 227, 290, 294, 295, 323, 329, 330, 332, 347, 371, 373, 381, 382, 383, 384, 393, 394, 398, 404, 413, 419, 426, 428], "rowei": 431, "roya": 415, "royalti": 416, "rq": 100, "rqkernel": 413, "ruff": [413, 414], "rule": [386, 413], "run": [225, 229, 371, 372, 373, 387, 388, 408, 409, 411, 412, 413, 414, 419, 427, 428, 433], "run_full_initial_data": 371, "run_impute_mod": 373, "runner": [381, 383, 384], "runtim": [343, 412], "runtimeerror": [27, 166, 386], "rv": 396, "s3": 413, "s41586": [256, 328], "safe": [413, 414, 419], "safeti": 307, "sai": 420, "said": 414, "sake": 393, "same": [51, 164, 166, 167, 168, 202, 208, 227, 234, 236, 237, 240, 244, 258, 260, 262, 264, 302, 376, 387, 390, 391, 393, 396, 404, 412, 418, 420, 421, 422, 427, 428, 431], "sampl": [10, 13, 17, 40, 178, 190, 191, 194, 291, 355, 356, 357, 358, 371, 376, 381, 382, 383, 384, 396, 398, 400, 404, 409, 411, 413, 415, 422, 432], "sample_from_full_factori": [194, 413], "sample_inactive_paramet": 40, "sample_uniform": [194, 400, 413, 428], "sampler": [376, 381, 382, 383, 384, 398, 404], "samples_full_factori": [194, 413], "samples_random": [194, 413], "sampling_algorithm": [356, 417], "sampling_fract": [13, 417], "sampling_method": [13, 417], "sampling_n_point": [13, 417], "sampling_percentag": [178, 425], "satisfi": [36, 37, 38, 202, 378, 379, 393], "save": [349, 371, 373, 390, 413, 428], "savefig": [371, 373], "scalar": [114, 398, 413, 423, 427], "scale": [104, 154, 155, 156, 157, 158, 360, 398, 408, 413, 417, 423], "scalekernel": 413, "scaler": 413, "scatter": [82, 84], "scenario": [231, 370, 371, 372, 373, 387, 393, 408, 409, 418, 420, 423, 431, 432, 433], "scene": [423, 428], "schema": 419, "schembl15068049": [371, 372, 373], "scheme": 413, "scienc": [411, 415], "scientif": [413, 431], "scikit": [134, 411, 413, 415, 424], "scipi": [347, 388, 396, 413], "scope": 370, "screen": [302, 431], "script": [316, 412, 413, 421, 433], "seaborn": [370, 371, 372, 373, 387, 408, 409], "seamlessli": 427, "search": [13, 22, 27, 34, 48, 51, 61, 65, 71, 122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 206, 225, 229, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 290, 330, 331, 370, 373, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 396, 398, 399, 404, 409, 413, 415, 418, 419, 420, 421, 422, 427, 428, 432], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 82, 122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 197, 201, 202, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 370, 372, 375, 386, 387, 388, 390, 391, 393, 394, 396, 400, 404, 405, 406, 408, 410, 411, 413, 419, 420, 421, 422, 424, 426, 427, 428, 433], "searchspace1": 400, "searchspace2": 400, "searchspace3": 400, "searchspace_json": 427, "searchspacetyp": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 376, 381, 382, 383, 384, 387, 388, 398, 404, 426], "secfp": 134, "secfpfingerprint": 134, "second": [329, 345, 347, 376, 390, 391, 398, 406, 408, 420, 421, 422], "secondari": [411, 421], "section": [411, 413, 414, 416, 427], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 148, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 201, 202, 225, 229, 231, 234, 236, 237, 238, 240, 244, 247, 254, 256, 258, 260, 262, 264, 274, 276, 282, 287, 305, 311, 324, 329, 336, 360, 371, 372, 373, 378, 379, 386, 387, 391, 394, 402, 411, 414, 419, 421, 422, 423, 424, 425, 427, 428, 432], "seed": [225, 229, 353, 354, 387, 388, 396, 411, 413, 433], "seek": 398, "seem": [343, 406, 412], "seen": 417, "select": [6, 36, 37, 38, 63, 69, 164, 166, 167, 168, 171, 188, 190, 234, 236, 237, 240, 244, 258, 260, 262, 264, 285, 329, 357, 376, 382, 383, 393, 394, 396, 402, 411, 413, 417, 419, 420, 422, 424, 425, 427, 429], "select_recommend": [164, 166, 167, 168], "self": [307, 320, 365, 366, 367, 368, 386, 387, 388, 396, 414], "sell": 416, "semant": [413, 427], "sens": [53, 307, 311, 329, 420, 424], "sent": 416, "separ": [229, 231, 268, 305, 360, 361, 388, 413, 414, 416, 427], "sequenc": [27, 41, 114, 146, 166, 194, 196, 202, 203, 204, 207, 290, 294, 295, 307, 308, 317, 320, 325, 330, 331, 347, 423, 425], "sequenti": [166, 167, 168, 178, 376, 381, 382, 383, 384, 398, 404, 413, 425], "sequential_continu": [178, 425], "sequential_greedy_x": 413, "sequentialgreedyrecommend": 413, "sequentialmetarecommend": [167, 425], "sequentialstrategi": 413, "seri": [27, 36, 37, 38, 48, 123, 126, 127, 129, 137, 140, 274, 276, 282, 381, 393, 413, 420], "serial": [167, 202, 219, 291, 390, 410, 412, 413, 414, 420, 425, 432], "serializ": [411, 420, 425], "serialize_datafram": 427, "serialized_df": 221, "serializetostr": 390, "serialmixin": [20, 27, 31, 36, 91, 109, 124, 150, 164, 194, 196, 202, 237, 247, 274, 276, 282, 336, 413], "serv": [231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 330, 408, 409, 419, 420, 424], "servic": 416, "session": [240, 421, 427], "set": [27, 30, 38, 40, 51, 53, 57, 58, 82, 86, 140, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 225, 229, 251, 289, 322, 328, 329, 349, 353, 354, 371, 372, 373, 374, 376, 381, 383, 386, 391, 392, 393, 394, 396, 398, 402, 411, 413, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 431, 433], "set_box_aspect": 388, "set_dash": 387, "set_random_se": [388, 396, 433], "set_size_inch": [371, 373], "set_x_pend": 22, "set_xlabel": 388, "set_xtick": 388, "set_xticklabel": 388, "set_ylabel": 388, "set_ylim": 388, "set_zlabel": 388, "setpoint": 137, "setup": [225, 387, 420, 428, 433], "sever": [142, 162, 370, 372, 376, 387, 390, 396, 398, 400, 409, 411, 413, 414, 418, 420, 421, 422, 423, 424, 426, 427, 428, 431, 433], "sh": 422, "shall": [166, 324, 416, 423], "shap": [82, 411, 413, 415, 429, 432], "shap_valu": 429, "shape": [17, 194, 201, 280, 284, 286, 357, 426, 433], "shapinsight": [80, 81, 83, 84, 413, 422], "shaplei": 82, "share": [413, 416, 431], "shield": [256, 328, 372, 411, 424], "shift": [8, 18, 408], "shifted_hartmann": 408, "ship": [361, 421, 427], "shm": 412, "short": 414, "shortcut": [202, 426, 427], "shorten": [413, 414], "shot": 431, "should": [27, 49, 82, 127, 140, 202, 217, 229, 279, 294, 295, 322, 324, 327, 328, 330, 332, 335, 336, 337, 345, 349, 381, 383, 387, 390, 393, 394, 402, 406, 411, 413, 414, 418, 419, 420, 426, 428, 429, 431, 433], "show": [82, 371, 372, 373, 375, 376, 381, 382, 383, 390, 391, 393, 396, 402, 404, 405, 406, 408, 409, 420, 422], "showcas": 425, "shown": [387, 396, 409, 413], "shrink": 388, "shutdown": 412, "side": [41, 285, 413], "sigma": [155, 156, 157, 158, 284, 398, 415], "signal": [60, 423], "signatur": [76, 271, 305, 307, 388, 413, 414, 420, 427], "significantli": [202, 396, 408, 409], "silenc": 414, "silent": [413, 420], "similar": [167, 412, 420, 421, 422, 424, 425, 426, 427, 431, 433], "similarli": 424, "simpl": [16, 17, 298, 372, 386, 387, 394, 411, 413, 425, 428, 430, 431], "simpler": [414, 427], "simplest": 426, "simplex": [202, 432], "simplex_paramet": [202, 393, 426], "simpli": [311, 386, 387, 414, 420, 424, 425, 426, 427, 430, 431], "simplic": 307, "simplifi": 414, "simul": [72, 324, 383, 388, 411, 413, 431, 432], "simulate_experi": [229, 231, 428], "simulate_scenario": [231, 370, 371, 372, 373, 387, 408, 409, 428], "simulate_transfer_learn": [408, 428], "simulationresult": 396, "simultan": 423, "sinc": [53, 196, 239, 307, 371, 378, 379, 391, 401, 404, 405, 406, 408, 414, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 431], "singer": 431, "singl": [17, 27, 36, 49, 82, 106, 119, 194, 196, 202, 225, 274, 276, 282, 336, 344, 351, 357, 363, 371, 372, 373, 382, 387, 393, 398, 408, 409, 411, 413, 420, 421, 422, 423, 424, 426, 431, 432], "single_lin": 351, "singledispatch": 338, "singletargetobject": [27, 274, 276, 282, 371, 372, 373, 375, 376, 381, 382, 383, 384, 387, 390, 391, 404, 405, 406, 411, 413, 429, 432], "site": [381, 383, 384, 412], "situat": [381, 383, 393, 412, 414, 418, 420, 423, 424, 427, 428, 431], "six": [393, 394], "size": [17, 89, 90, 91, 94, 96, 98, 99, 100, 166, 168, 196, 201, 202, 291, 340, 388, 390, 396, 401, 402, 408, 409, 419, 427, 428, 431, 433], "sk": 390, "skeleton": 413, "skfp": 134, "skicit": 413, "skin": 428, "skip": [199, 205, 413, 419], "skl2onnx": 390, "sklearn": [188, 343, 390, 412], "sklearnclusteringrecommend": [185, 186, 187, 413, 418], "slightli": [223, 372, 393, 428], "slot": [392, 396, 410, 413, 420], "slot1_amount": 393, "slot1_label": 393, "slot2_amount": 393, "slot2_label": 393, "slot3_amount": 393, "slot3_label": 393, "slow": [381, 383, 384, 426], "slowest": 413, "small": [292, 296, 378, 393, 408, 409, 413, 417, 424], "smaller": [27, 396, 419, 431], "smallest": [194, 426], "smart": 411, "smartli": 393, "smile": [140, 314, 316, 317, 411, 424], "smoke": 413, "smoke_test": [349, 370, 371, 372, 373, 379, 381, 382, 384, 387, 388, 396, 408, 409], "smooth": [94, 96, 158], "smoothedboxprior": 413, "smoother": 94, "sn": [370, 371, 372, 373, 387, 408, 409], "snippet": 421, "so": [27, 225, 239, 329, 373, 387, 393, 396, 401, 402, 411, 412, 420, 421, 423, 424, 425, 427, 430], "softwar": [411, 416], "sola": 415, "sole": 416, "solut": [419, 426, 427, 431], "solv": [239, 382, 383, 393, 396], "solv_rdkit2ddesc": 383, "solvent": [371, 372, 373, 375, 376, 381, 382, 383, 384, 387, 391, 393, 394, 405, 406, 411, 420, 424], "solvent1": [393, 394], "solvent2": [393, 394], "solvent3": 393, "solvent4": 393, "solvent5": 393, "solvent8": 393, "solvent9": 393, "solvent_1": 420, "solvent_2": 420, "solvent_3": 420, "solvent_data": 387, "solvent_encoding1": 420, "solvent_encoding2": 420, "solvent_mordred_enc": 420, "solvent_rdkit2dd": [381, 384], "solvent_rdkit_enc": 420, "solvent_smil": 387, "solver": 428, "some": [49, 330, 343, 371, 372, 373, 376, 381, 382, 383, 384, 387, 388, 390, 391, 393, 394, 400, 401, 402, 404, 409, 418, 420, 421, 424, 425, 427, 428, 429, 433], "someth": 406, "sometim": [420, 428], "somewhat": 421, "somewher": 419, "soon": [411, 419, 425], "sophist": [413, 427], "sort": 143, "sourabh": 415, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 109, 110, 112, 114, 115, 117, 119, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 180, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 215, 216, 217, 219, 221, 222, 225, 227, 229, 231, 234, 236, 237, 238, 240, 241, 244, 246, 247, 248, 251, 252, 254, 256, 258, 260, 262, 264, 266, 267, 268, 270, 271, 274, 276, 279, 280, 282, 284, 285, 286, 288, 289, 290, 291, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 345, 346, 347, 349, 350, 351, 353, 354, 356, 357, 358, 360, 368, 411, 412, 413, 414, 416], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 65, 67, 71, 122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 169, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 205, 206, 225, 229, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 290, 330, 357, 370, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 396, 398, 399, 401, 404, 409, 410, 413, 415, 418, 419, 420, 421, 422, 424, 427, 428, 432], "span": [122, 123, 124, 126, 127, 129, 136, 137, 140, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 290, 386, 396, 400], "speak": 431, "spec": [199, 205, 216], "special": [168, 411, 412, 416, 417, 431, 433], "specif": [87, 142, 148, 188, 196, 199, 212, 229, 268, 299, 386, 387, 401, 411, 414, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 75, 86, 129, 140, 142, 161, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 215, 216, 225, 227, 229, 238, 284, 285, 286, 294, 306, 315, 322, 325, 331, 357, 358, 372, 376, 378, 390, 391, 396, 398, 408, 411, 412, 413, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "speed": [202, 381, 383, 384, 408, 409, 421, 426], "speed_fast": 426, "speed_norm": 426, "speed_slow": 426, "speedup": 431, "spell": 414, "spellcheck": 413, "sphinx": [413, 414], "split": [170, 418], "sporad": 413, "spread": 430, "sqrt": 420, "squar": [396, 420], "squash": 414, "stabil": [413, 421], "stabl": [87, 148, 287], "stage": [419, 420, 427], "stand": 413, "standard": [6, 268, 390, 413, 424], "star": 393, "start": [225, 370, 386, 387, 388, 394, 396, 412, 413, 418, 424, 425, 427, 428, 431], "startup": 413, "stat": [288, 388, 394, 396], "state": [168, 387, 393, 413, 416, 419], "stateless": [396, 413], "statement": [332, 401, 411, 416], "static": [196, 202, 244, 411, 414, 431], "statist": [291, 409, 411, 421], "statu": 419, "std_threshold": 268, "stem": [412, 431], "step": [199, 205, 225, 393, 396, 411, 414, 419, 423, 427, 429], "sterl": 415, "steven": 372, "still": [142, 202, 322, 387, 396, 418, 420, 421, 422, 424, 431, 433], "stop": [385, 410, 413, 414], "stop_on_pi": 387, "stoppag": 416, "storag": [419, 421, 427], "store": [22, 124, 268, 274, 388, 393, 396, 411, 413, 419, 433], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 176, 178, 185, 186, 187, 188, 194, 196, 201, 202, 215, 219, 229, 231, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 277, 282, 284, 285, 286, 288, 291, 294, 295, 299, 305, 306, 312, 314, 316, 317, 319, 322, 325, 327, 328, 332, 336, 340, 346, 349, 350, 351, 391, 396, 405, 406, 408, 409], "straightforward": [430, 431], "strategi": [13, 178, 196, 223, 370, 396, 413], "stream": [303, 421], "streamingsequentialmetarecommend": [166, 425], "streamingsequentialstrategi": 413, "streamlin": 414, "streamlit": [411, 413], "streibel": 415, "strict": 305, "strictli": [391, 405, 406], "stride": 378, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 139, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 312, 316, 317, 319, 320, 327, 336, 351, 390, 404, 413, 419, 420, 424, 430, 432], "strip": [225, 373, 418], "strong": 413, "strongli": 419, "strtobool": [413, 421], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 112, 215, 411, 412, 413, 414, 415, 419, 424, 427], "studi": [162, 411, 422, 425, 432], "style": [106, 408, 413, 414], "sub": [188, 413, 422, 427], "subclass": [75, 215, 299, 301, 311, 376, 413, 414, 425, 427], "subfold": 421, "subgraph": 424, "subgroup": 394, "subject": 416, "sublicens": 416, "submiss": [413, 416], "submit": [22, 288, 290, 411, 414, 416], "subpackag": [413, 414, 428], "subselectioncondit": [382, 383, 413, 432], "subsequ": [196, 202, 229, 316, 416, 419, 427, 429], "subset": [27, 109, 114, 119, 140, 196, 302, 331, 357, 419, 420, 422], "subspac": [22, 170, 178, 193, 194, 196, 198, 200, 202, 378, 381, 382, 383, 384, 398, 400, 402, 404, 413, 425, 427, 432, 433], "subspace_json": 427, "subspacecontinu": [27, 122, 136, 196, 198, 400, 413, 426], "subspacediscret": [27, 123, 126, 127, 129, 137, 140, 196, 198, 201, 381, 382, 383, 384, 393, 398, 404, 413, 426, 427, 433], "substanc": [134, 140, 315, 372, 375, 381, 383, 384, 394, 413, 420, 422, 424, 431], "substance_12": 420, "substance_3": 420, "substance_43": 420, "substance_data": 413, "substance_encod": 372, "substanceencod": [140, 315, 317, 381, 382, 383, 384, 413, 424], "substanceparamet": [371, 372, 373, 375, 376, 381, 382, 383, 384, 387, 391, 393, 405, 406, 411, 413, 420, 421, 422, 426, 432], "substanti": [140, 433], "substrat": 431, "subtyp": 427, "success": [276, 357, 396, 427], "success_valu": 276, "suffic": 414, "suffici": [387, 426, 427], "suggest": [422, 428], "suit": 414, "suitabl": [188, 202, 225, 312, 414, 417, 419, 424, 428, 429, 431], "sum": [55, 102, 202, 370, 380, 381, 382, 383, 387, 393, 394, 396, 410, 420, 423, 426], "sum_": [420, 423], "sum_constraint": 393, "sum_constraint_1": 384, "sum_constraint_2": 384, "sum_toler": 393, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 274, 276, 282], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 274, 276, 282, 413, 414], "superior": 417, "supersed": 416, "suport": 422, "support": [10, 80, 81, 82, 83, 84, 167, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 343, 376, 381, 382, 383, 384, 387, 388, 390, 393, 398, 404, 413, 414, 415, 416, 420, 422, 424, 425, 426, 428, 429], "supports_transfer_learn": [234, 236, 237, 240, 244, 258, 260, 262, 264, 429], "suppos": [290, 420], "sure": [393, 400, 411, 414], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 66, 82, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 176, 178, 185, 186, 187, 188, 234, 236, 238, 240, 244, 246, 247, 251, 254, 256, 258, 260, 262, 264, 381, 382, 383, 384, 388, 396, 398, 404, 410, 411, 413, 415, 420, 422, 424, 425, 431, 432], "surrogate_model": [176, 178, 376, 388, 390, 391, 396, 405, 406, 413], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 82, 176, 178, 237, 413], "svg": 349, "sw": 382, "swiss": 415, "switch": [49, 165, 167, 168, 268, 376, 381, 382, 383, 384, 396, 398, 404, 411, 413, 420, 425], "switch1": 382, "switch2": 382, "switch2_left": 382, "switch2_right": 382, "switch_1": 420, "switch_2": 420, "switch_aft": [168, 405, 406, 425], "switzerland": 415, "sy": 412, "symmetri": 420, "syntax": [411, 413], "synthet": [378, 379, 388, 408, 409], "system": [372, 396, 411, 412, 416, 421, 428, 431], "t": [266, 267, 304, 312, 371, 372, 373, 375, 376, 383, 388, 408, 409, 427, 428], "t1": [427, 428], "t2": 427, "t3": 427, "t_1": 423, "t_2": 423, "t_3": 423, "t_i": 423, "tabl": [332, 413, 420, 422], "tabular": 428, "tag": [411, 413, 427], "tailor": 419, "take": [45, 94, 123, 137, 142, 234, 236, 237, 240, 244, 254, 258, 260, 262, 264, 277, 386, 393, 413, 418, 419, 420, 423, 424, 425, 431], "taken": [166, 387, 413, 419, 423], "tantamount": 417, "target": [27, 67, 106, 109, 110, 114, 118, 119, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 202, 223, 225, 226, 227, 234, 236, 237, 240, 244, 258, 260, 262, 264, 268, 276, 279, 280, 282, 307, 322, 325, 331, 345, 346, 352, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 387, 388, 390, 391, 396, 401, 402, 404, 405, 406, 408, 409, 410, 411, 413, 418, 419, 421, 427, 428, 429, 432], "target_1": [382, 383, 384, 398, 423, 430], "target_2": [398, 423, 430], "target_3": [398, 423], "target_3a": 430, "target_3b": 430, "target_cumbest": [370, 408, 409], "target_max": 419, "target_transform": 398, "targetmod": [282, 427, 430], "targetnam": 225, "targettransform": [282, 413, 430], "task": [127, 196, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 274, 276, 282, 396, 413, 419, 425, 427, 428, 431], "task_idx": [196, 413], "task_param": [408, 409, 428], "task_paramet": 427, "task_parameter_json": 427, "task_parameter_reconstruct": 427, "taskparamet": [209, 408, 409, 413, 427, 428, 432], "tb": 433, "technic": [202, 418, 428, 431], "techniqu": [188, 425], "technologi": 415, "telemetri": [413, 415, 432], "tell": 289, "temp": [381, 383, 415], "temp_c": [371, 372, 373, 387], "temperatur": [371, 373, 375, 376, 381, 383, 386, 390, 391, 404, 420, 424, 426, 431], "temperature_resolut": 381, "temperature_valu": 387, "temporari": [105, 111, 179, 196, 354, 387, 413, 421, 427], "temporarili": [413, 433], "temporary_se": 433, "tempt": 431, "tenac": 413, "tend": 388, "tensor": [22, 41, 234, 266, 267, 325, 333, 336, 360, 362, 408, 413], "term": [97, 223, 387, 396, 414, 416, 419, 426, 427, 428, 431], "termin": [387, 388, 412, 416], "terminologi": 432, "tert": [371, 372, 373, 375, 376], "test": [202, 225, 240, 322, 396, 408, 409, 411, 412, 413, 414, 419, 422, 428, 433], "test_funct": [378, 379, 388, 401, 402, 408, 409], "test_scenario": [371, 373], "testabl": [72, 225], "testfunct": [378, 379, 401, 402], "testfunctionclass": [378, 379, 401, 402], "text": [30, 350, 390, 416, 420, 421, 423], "th": [295, 420], "than": [27, 58, 71, 137, 166, 167, 168, 194, 196, 209, 295, 311, 351, 358, 372, 383, 387, 394, 417, 420, 421, 424, 427], "thei": [142, 162, 171, 285, 327, 331, 376, 384, 387, 393, 396, 400, 413, 414, 418, 419, 420, 422, 424, 425, 426, 427, 430, 431, 433], "them": [34, 254, 323, 349, 376, 411, 412, 414, 418, 420, 421, 422, 424, 425, 427, 431], "theme": [349, 413], "theori": 416, "therebi": 202, "therefor": [168, 234, 236, 237, 240, 244, 258, 260, 262, 264, 376, 412, 419, 427, 431], "therein": 413, "thereof": 416, "thf": 420, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 223, 227, 229, 231, 234, 236, 237, 238, 239, 240, 244, 254, 258, 260, 262, 264, 268, 291, 294, 307, 308, 311, 316, 322, 324, 326, 328, 330, 332, 349, 370, 386, 387, 388, 390, 391, 393, 394, 396, 400, 404, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433], "think": [396, 424], "third": [398, 416, 428], "thompson": [17, 415], "thomson": 17, "those": [142, 168, 170, 223, 357, 376, 412, 416, 420, 428], "though": 431, "three": [372, 393, 394, 398, 411, 419, 420, 423, 425, 426, 431], "threshold": [38, 129, 140, 268, 328, 378, 383, 384, 387, 393, 413, 420, 424], "thresholdcondit": [54, 55, 378, 383, 384, 393, 432], "through": [27, 196, 284, 294, 322, 331, 391, 393, 396, 398, 411, 413, 414, 416, 420, 427, 428, 432], "throughout": 168, "throw": [316, 420, 424], "thrown": [227, 373, 387, 405, 412, 423], "thu": [178, 307, 331, 371, 372, 378, 379, 381, 382, 383, 384, 390, 391, 393, 396, 398, 401, 402, 404, 412, 414, 419, 421, 424, 425, 427, 428, 431, 433], "tick": 388, "time": [10, 178, 291, 358, 379, 386, 393, 396, 411, 413, 418, 419, 420, 424, 427, 428, 433], "timeout": [413, 421], "timer": 386, "titl": 416, "tl": 408, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 387, 388, 413], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 336], "to_factori": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104], "to_fram": 370, "to_gpytorch": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 150, 152, 153, 154, 155, 156, 157, 158, 413], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 274, 276, 282, 336, 390, 391, 404, 419, 427], "to_keep": 329, "to_ndarrai": 336, "to_object": [274, 276, 282, 370, 378, 379, 388, 396, 401, 402, 408, 409, 423, 428], "to_polar": [36, 37, 38], "to_searchspac": [122, 123, 124, 126, 127, 129, 136, 137, 140, 194, 202, 396, 400, 413], "to_subspac": [122, 123, 126, 127, 129, 136, 137, 140, 413], "to_tensor": [336, 387, 388, 390, 413], "to_tupl": 336, "togeth": [34, 62, 295, 376, 396, 402, 411, 413], "toggl": 27, "toggle_discrete_candid": [27, 413], "toler": [27, 38, 137, 202, 290, 330, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 387, 390, 391, 393, 398, 401, 402, 404, 405, 406, 411, 413, 420, 424], "tolist": 378, "toluen": 424, "toml": 413, "too": [378, 428, 431], "tool": [313, 413, 427], "toolbox": 411, "top": [413, 414], "topic": 419, "topolog": 424, "topologicaltors": 134, "topologicaltorsionfingerprint": 134, "torch": [325, 336, 387, 388, 390, 408, 413], "toronto": 415, "tort": 416, "total": [168, 357, 393, 394, 396, 426], "total_bas": 394, "total_phase_ag": 394, "toward": [8, 18, 152, 322, 420], "tox": [381, 383, 384, 411, 413, 414], "tracebackexcept": 412, "track": [161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 202, 387, 416], "trade": [8, 18, 416], "trademark": 416, "tradit": [372, 392, 393, 410, 411, 413], "train": [68, 82, 161, 166, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 231, 234, 236, 237, 238, 239, 240, 244, 258, 260, 262, 264, 268, 389, 408, 409, 413, 428], "train_i": 390, "train_x": 390, "training_funct": 409, "trajectori": [223, 370, 387, 396, 428], "transfer": [230, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 376, 381, 382, 383, 384, 398, 404, 408, 410, 411, 413, 416, 424, 429, 432], "transform": [27, 68, 109, 114, 119, 123, 124, 126, 127, 129, 137, 140, 194, 196, 202, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 274, 276, 280, 282, 317, 325, 331, 336, 337, 360, 381, 382, 383, 384, 404, 413, 416, 421, 424, 429, 430], "transform_rep_exp2comp": 413, "transit": 413, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 413, 416, 424], "transmiss": 427, "transmit": 291, "travers": 413, "treasur": 432, "treat": [140, 372, 411, 420, 424, 430, 433], "tree": 413, "tremend": 372, "trend": 431, "tri": 426, "triangl": 286, "triangular": [280, 286, 398, 430], "tricki": 422, "tricyclohexylphosphin": [371, 372, 373], "trigger": [166, 294, 387, 391, 396, 413, 414, 418, 423, 427], "trivial": [247, 260, 423, 424], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 202, 244, 276, 285, 290, 300, 301, 305, 311, 312, 329, 330, 351, 372, 376, 378, 379, 381, 382, 383, 384, 388, 390, 391, 393, 396, 398, 401, 402, 404, 405, 406, 408, 409, 413, 419, 420, 421, 422, 424, 427], "truncat": [411, 421], "trust": [390, 421], "truth": 312, "truthi": 421, "try": [322, 371, 372, 373, 387, 390, 391, 406, 412, 413, 433], "tune": 411, "tupl": [27, 37, 41, 89, 90, 91, 94, 96, 98, 99, 100, 102, 103, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 143, 194, 196, 201, 202, 267, 294, 305, 308, 320, 322, 333, 336, 340, 360], "turn": [194, 202, 340, 400, 411, 412, 413, 420, 421], "turnaround": 428, "twice": 423, "two": [30, 51, 57, 58, 115, 168, 178, 223, 295, 298, 325, 345, 357, 370, 371, 373, 376, 386, 393, 396, 398, 402, 408, 409, 411, 413, 414, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430], "twofold": 396, "twophasemetarecommend": [371, 373, 376, 381, 382, 383, 384, 387, 388, 390, 391, 396, 398, 402, 404, 405, 406, 411, 425], "twophasestrategi": 413, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 110, 112, 114, 115, 119, 122, 123, 124, 126, 127, 129, 136, 137, 139, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 173, 176, 178, 180, 183, 185, 186, 187, 188, 190, 191, 194, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 212, 213, 215, 216, 217, 219, 221, 222, 225, 227, 229, 231, 234, 236, 237, 238, 240, 241, 244, 247, 248, 252, 258, 260, 262, 264, 266, 267, 268, 270, 271, 274, 276, 277, 282, 284, 285, 286, 288, 289, 290, 291, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 336, 337, 338, 340, 342, 343, 345, 346, 347, 349, 350, 351, 357, 358, 360, 362, 365, 366, 367, 368, 372, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 404, 405, 406, 411, 413, 414, 416, 417, 420, 422, 423, 424, 425, 426, 431, 432], "typealia": 277, "typeerror": [27, 82, 86, 225, 240, 307, 322, 323, 358, 387, 388], "typeguard": 304, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 114, 119, 122, 123, 124, 126, 127, 129, 136, 137, 140, 142, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 167, 168, 194, 196, 202, 207, 215, 216, 219, 234, 236, 237, 240, 244, 247, 258, 260, 262, 264, 267, 274, 276, 282, 301, 302, 303, 304, 320, 325, 331, 336], "typic": [13, 307, 351, 372, 411, 418, 419, 424, 427, 433], "typing_extens": 414, "typo": [413, 414], "u": [17, 370, 371, 372, 373, 386, 388, 393, 394, 396, 400, 409, 411, 417, 420, 423], "ucb": [8, 376, 413, 417, 427], "ultim": 414, "ultra": [405, 406], "un": 413, "unabl": 390, "unavail": 413, "unawar": 418, "unbound": [336, 386], "uncaught": 413, "uncertainti": [13, 376, 432], "uncharacter": 431, "unclear": 422, "uncorrel": [328, 431], "undefin": 234, "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 291, 331, 384, 388, 396, 411, 412, 416, 418, 424], "underflow": 73, "underli": [27, 51, 387, 396, 411, 419, 422, 425, 427], "underscor": 413, "understand": [411, 431], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 420, 424, 433], "undo": 412, "unequ": 384, "unevenli": 424, "unfeas": 422, "unfinish": 418, "unfortun": 431, "unhandl": 413, "uniform": [194, 234, 323, 324, 413], "uniformli": 357, "uniniti": 311, "uninstal": [74, 411], "unintend": [77, 307, 413, 414], "unintention": 433, "union": [115, 225, 229, 284, 285, 286, 346, 402, 416, 426], "uniqu": [52, 142, 393, 413, 424], "unit": [201, 340], "unknown": [357, 370, 396, 413, 429, 431], "unlabel": 325, "unless": [411, 414, 416, 421, 424, 427], "unlik": [12, 14, 393, 433], "unlock": 432, "unmaintain": 413, "unmatch": 305, "unmatchedattributeerror": 305, "unmeasur": [225, 373], "unnecessari": [413, 419], "unpromis": 387, "unreach": 413, "unrealist": 428, "unrecogn": 322, "unrestrict": 307, "unsaf": 413, "unspecifi": [413, 427], "unsqueez": [387, 388], "unstructur": [217, 427], "unstructure_bas": 215, "unsupport": [194, 227], "until": [164, 166, 167, 168, 225, 396, 411, 428], "untouch": 323, "untransform": [27, 429], "unusedobjectwarn": [387, 413], "unveil": 409, "unwant": 34, "up": [27, 202, 225, 227, 370, 371, 372, 373, 374, 381, 383, 386, 388, 392, 393, 394, 402, 408, 409, 411, 412, 413, 417, 420, 433], "updat": [27, 372, 375, 413, 414, 418], "upgrad": 413, "upon": [170, 247, 412, 413, 414, 420, 426, 429, 431], "upper": [8, 18, 158, 196, 202, 284, 285, 286, 336, 376, 388, 398, 408, 409, 413, 430, 433], "upper_bound": [381, 382, 383, 384, 404, 426], "upperconfidencebound": [417, 427], "upstream": 414, "urg": 422, "url": [421, 431], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 65, 82, 94, 114, 115, 129, 134, 137, 140, 142, 161, 164, 166, 167, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 194, 196, 202, 203, 204, 216, 225, 227, 229, 234, 236, 237, 240, 241, 244, 258, 260, 262, 264, 280, 290, 291, 297, 307, 308, 316, 317, 322, 324, 325, 330, 338, 342, 343, 349, 357, 362, 370, 378, 379, 385, 386, 387, 388, 389, 392, 393, 394, 400, 404, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 432, 433], "usa": 415, "usabl": [311, 412, 413, 424, 427], "usag": [339, 411, 413, 420, 421, 425, 432], "use_comp_rep": [82, 86, 422], "use_torch": [325, 378, 379, 388, 401, 402, 408, 409], "user": [48, 49, 60, 69, 77, 129, 132, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 271, 288, 324, 330, 375, 376, 381, 398, 406, 411, 412, 413, 414, 419, 420, 421, 422, 423, 424, 426, 427, 428, 431], "userguid": 287, "usernam": [288, 413, 421], "userwarn": 412, "uses_shap_explain": 82, "usort": 413, "usr": 134, "usrcat": 134, "usrcatfingerprint": 134, "usrfingerprint": 134, "usual": [225, 371, 372, 373, 405, 412, 424], "util": [178, 194, 202, 290, 297, 298, 336, 356, 360, 370, 372, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 396, 398, 401, 402, 408, 409, 411, 413, 417, 418, 422, 423, 424, 425, 427, 428, 429, 431, 432], "uv": 413, "v": 431, "val": [45, 112, 312, 408], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 142, 196, 199, 202, 205, 240, 330, 381, 403, 405, 410, 412, 413, 414, 419, 420, 428], "validate_compat": 240, "validate_config": [27, 406, 413, 419], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 67, 82, 93, 94, 95, 96, 97, 98, 99, 100, 104, 109, 114, 115, 119, 123, 126, 127, 129, 131, 132, 134, 137, 140, 142, 145, 146, 147, 185, 186, 187, 188, 194, 196, 202, 203, 204, 223, 225, 227, 229, 234, 236, 237, 240, 244, 258, 260, 262, 264, 276, 277, 279, 284, 285, 286, 291, 294, 302, 305, 312, 319, 322, 323, 324, 327, 330, 331, 332, 336, 338, 345, 346, 347, 365, 366, 367, 368, 371, 372, 373, 375, 376, 378, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 396, 398, 401, 402, 404, 405, 406, 408, 409, 411, 413, 414, 417, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433], "valuabl": [425, 428], "valueerror": [13, 27, 57, 58, 82, 86, 115, 142, 146, 147, 194, 196, 202, 208, 225, 227, 234, 236, 237, 240, 244, 258, 260, 262, 264, 271, 295, 305, 310, 312, 315, 319, 322, 324, 330, 331, 351, 357, 358, 391, 402, 412], "var": [396, 432], "vari": [27, 202, 372, 423], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 122, 123, 124, 126, 127, 129, 136, 137, 140, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 234, 236, 237, 240, 244, 258, 260, 262, 264, 274, 289, 291, 344, 349, 363, 401, 411, 413, 414, 420, 424, 425, 427], "varianc": [8, 13, 18, 93, 260, 326, 413, 417], "variance_initial_valu": 93, "variance_prior": 93, "variant": [376, 408, 422, 431], "varieti": [401, 414, 427, 428], "variou": [336, 393, 399, 413, 418, 422, 425, 428], "varucb": 413, "vector": [30, 390, 415], "vendor": 424, "verbal": 416, "verbos": [391, 413], "veri": [381, 383, 398, 418, 421, 422, 424, 433], "verifi": [311, 378, 381, 382, 383, 384, 393, 394, 400, 402, 404, 411, 414], "versa": [408, 431], "versatil": 425, "version": [196, 288, 343, 381, 383, 384, 393, 396, 400, 408, 409, 411, 412, 413, 414, 416, 427], "vert": 388, "via": [13, 17, 26, 27, 82, 168, 178, 190, 234, 236, 237, 238, 240, 244, 258, 260, 262, 264, 290, 299, 307, 322, 329, 330, 373, 379, 386, 387, 390, 400, 411, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 430, 431, 432], "via_init": 427, "via_json": 427, "viabl": [71, 398], "vice": [408, 431], "view": [194, 202, 388, 426], "view_init": 388, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 388, "virtual": 414, "visibl": 413, "visual": [372, 408, 409, 422, 430], "volum": 431, "vpn": [411, 421], "vsa": 134, "vsafingerprint": 134, "vulner": [413, 414], "w_i": 423, "wa": [13, 63, 66, 67, 74, 77, 142, 168, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 319, 322, 358, 372, 412, 413, 414, 416, 421, 424, 427, 431], "wai": [196, 386, 393, 394, 399, 400, 408, 411, 418, 421, 422, 424, 426, 427, 428, 430, 431, 433], "wall": 10, "want": [48, 376, 381, 393, 396, 402, 409, 411, 414, 420, 421, 422, 424, 425, 427, 430], "warn": [59, 308, 381, 383, 384, 387, 401, 402, 413, 414], "warranti": [411, 416], "watch": 386, "water": [381, 382, 383, 384, 393, 420, 424], "we": [22, 223, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 433], "web": 414, "weber": 415, "weight": [106, 114, 115, 347, 398, 423, 427], "weight_kdalton": 424, "welcom": 414, "well": [288, 349, 376, 387, 392, 414, 419, 420, 422, 424, 428], "were": [170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 322, 373, 376, 409, 412, 413, 418, 420, 421, 424, 426], "what": [142, 166, 196, 223, 322, 360, 370, 390, 398, 406, 414, 417, 419, 422, 424, 431, 432], "whatsnew": 298, "when": [27, 49, 137, 166, 168, 176, 178, 196, 202, 234, 236, 237, 240, 241, 244, 258, 260, 262, 264, 271, 305, 307, 311, 322, 325, 351, 358, 376, 381, 382, 384, 386, 391, 393, 394, 396, 398, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 433], "whenev": [22, 166, 322, 427], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 161, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 223, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 294, 322, 357, 371, 372, 373, 376, 381, 383, 393, 396, 411, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431], "wherea": 427, "wherev": [416, 418], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 86, 122, 123, 124, 126, 127, 129, 136, 137, 140, 178, 194, 202, 234, 236, 237, 240, 244, 258, 260, 262, 264, 289, 324, 330, 336, 393, 413, 416, 419, 421, 425, 430], "which": [13, 27, 36, 37, 38, 77, 82, 109, 114, 119, 127, 142, 161, 162, 168, 170, 173, 176, 178, 183, 185, 186, 187, 188, 190, 191, 196, 202, 229, 231, 234, 236, 237, 240, 244, 258, 260, 262, 264, 268, 290, 291, 307, 311, 322, 324, 328, 330, 332, 345, 346, 349, 360, 370, 372, 376, 379, 386, 387, 393, 394, 396, 400, 401, 402, 406, 408, 409, 411, 412, 413, 414, 416, 417, 419, 420, 422, 424, 426, 427, 428, 429, 430, 431, 433], "while": [196, 199, 205, 387, 396, 398, 409, 412, 416, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431], "whilst": 322, "whim": 134, "whimfingerprint": 134, "whole": 416, "whom": 416, "whose": [115, 142, 196, 227, 302, 305, 325, 370, 386, 393, 418, 428], "wide": 428, "wider": 430, "width": 332, "wieczorek": 415, "william": 431, "willing": 419, "win": [234, 396], "win_rat": 396, "window": [413, 421], "winerror": 412, "wise": 347, "wish": 427, "within": [27, 122, 123, 124, 126, 127, 129, 136, 137, 140, 290, 330, 400, 416, 420, 421, 424, 429, 431, 432, 433], "without": [167, 408, 409, 411, 413, 416, 418, 419, 420, 421, 424, 428, 431, 433], "work": [22, 265, 294, 325, 381, 383, 384, 387, 398, 404, 406, 411, 413, 414, 415, 416, 420, 421, 423, 425, 427, 428], "workaround": [412, 413], "workflow": [390, 411, 419, 425, 427, 432], "world": [411, 419], "worldwid": 416, "worst": [225, 227, 229, 373], "would": [52, 73, 142, 223, 225, 231, 239, 386, 393, 396, 411, 414, 418, 420, 421, 424, 425, 426, 427, 428, 431, 433], "wrap": [89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 244, 248, 266, 267, 307, 411, 413, 423], "wrapper": [1, 21, 229, 231, 240, 308, 408, 409, 411, 425], "write": [411, 412, 416, 427], "written": [401, 402, 414, 416], "wrong": [406, 413], "wrongli": 412, "www": [411, 416], "x": [22, 110, 198, 225, 227, 248, 304, 308, 320, 333, 345, 360, 370, 371, 372, 373, 381, 382, 383, 384, 387, 388, 393, 398, 404, 408, 409, 411, 413, 426, 429], "x0": 426, "x1": 426, "x2": 426, "x_": [370, 378, 379, 400, 401, 402], "x_1": [378, 379, 400, 401, 402, 420], "x_2": [378, 379, 400, 401, 402, 420], "x_3": [378, 379, 400, 401, 402, 420], "x_4": [378, 379, 400, 401, 402], "x_5": 402, "x_6": 402, "x_i": 420, "x_pend": 22, "xlsx": [371, 372, 373, 387], "xpho": [371, 372, 373], "xxxx": 412, "xylen": [371, 372, 373, 375, 376], "y": [256, 312, 328, 345, 370, 371, 372, 373, 387, 388, 390, 393, 408, 409, 411, 431], "ye": 312, "year": 431, "yet": [22, 164, 166, 167, 168, 413, 418, 425], "yield": [6, 94, 371, 372, 373, 375, 376, 381, 387, 390, 391, 393, 402, 404, 405, 406, 411, 413, 417, 422, 423, 427], "yield_cumbest": [371, 372, 373, 387], "yml": 413, "you": [27, 48, 372, 376, 378, 386, 391, 393, 396, 401, 402, 405, 411, 412, 414, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433], "your": [372, 386, 393, 396, 402, 411, 412, 413, 414, 416, 419, 421, 422, 424, 427, 428, 429, 430, 431, 433], "your_branch_nam": 414, "yourself": 396, "z": [388, 411], "zdir": 388, "zero": [8, 18, 152, 326, 393, 396, 431], "zip": [387, 388], "\u00b5fmt": 413, "\u0161o\u0161i\u0107": [411, 415]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 414, "0": 413, "01": 413, "02": 413, "03": 413, "04": 413, "05": 413, "06": 413, "07": 413, "08": 413, "09": 413, "1": 413, "10": 413, "11": 413, "12": 413, "13": 413, "14": 413, "15": 413, "16": 413, "17": 413, "19": 413, "2": 413, "2022": 413, "2023": 413, "2024": 413, "21": 413, "23": 413, "24": 413, "27": 413, "28": 413, "29": 413, "3": 413, "4": 413, "5": 413, "6": 413, "7": 413, "8": 413, "9": 413, "A": 411, "On": 422, "The": [396, 405, 411, 427, 428, 431], "abbrevi": 427, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 376, 418], "acquisitionfunct": 20, "action": 431, "activ": 417, "ad": [375, 413, 418, 419, 431, 433], "add_fake_measur": 322, "add_noise_to_perturb_degenerate_row": 323, "add_parameter_nois": 324, "addendum": 398, "addit": [393, 425], "additivekernel": 102, "advanc": [411, 429], "altern": 427, "amount": 393, "an": 396, "arm": [395, 396], "arm64": 412, "arrai": 428, "arrays_to_datafram": 325, "assembli": 427, "asynchron": 418, "attr": 414, "augment": [293, 294, 295], "automat": 427, "avail": [376, 429], "avx": 412, "back": 411, "backtest": [369, 408], "bandit": [233, 395, 396], "base": [19, 29, 88, 108, 110, 121, 149, 160, 163, 172, 175, 182, 235, 273, 371, 372, 373, 378, 379, 393, 394, 402, 428], "basic": [92, 151, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 374, 375, 419, 421, 422, 427], "basickernel": 89, "batch": 419, "batchify_ensemble_predictor": 266, "batchify_mean_var_predict": 267, "batteri": 411, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 101, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 118, 120, 121, 125, 128, 130, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 159, 160, 162, 163, 165, 169, 171, 172, 174, 175, 177, 179, 180, 181, 182, 184, 189, 192, 193, 195, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 245, 248, 249, 250, 252, 253, 255, 257, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 375, 411, 414], "bayesian": [174, 175, 177, 179, 180, 411, 425], "bayesianlinearsurrog": 258, "bayesianrecommend": 176, "bell_transform": 284, "bernoulli": 396, "betabernoullimultiarmedbanditsurrog": 234, "betaprior": 152, "binari": [275, 277], "binarytarget": 276, "black": [370, 396], "block_deserialization_hook": 212, "block_serialization_hook": 213, "bo": 422, "boolean": [309, 310, 311, 312], "both": 404, "botorch": [177, 401], "botorchrecommend": 178, "bound": [386, 423, 426], "box": [370, 396], "break": 413, "build": [396, 426], "bytes_to_human_read": 340, "cach": [419, 421], "callabl": [378, 379, 402, 428], "campaign": [26, 27, 370, 371, 372, 373, 376, 378, 379, 381, 382, 384, 387, 390, 391, 398, 401, 402, 404, 405, 419], "cardinalityconstraint": 30, "case": 396, "catch_constant_target": 268, "categor": 125, "categoricalencod": 131, "categoricalparamet": [126, 424], "chang": 413, "changelog": 413, "check_if_in": 310, "chemic": 411, "chemistri": [313, 314, 315, 316, 317], "choicevalu": 277, "class": 414, "classproperti": 298, "clone": 411, "closer_el": 345, "closest_el": 346, "cluster": [184, 425], "code": 414, "columntransform": 360, "compar": 404, "compon": 386, "composit": 101, "compositekernel": 90, "comput": 422, "condit": [35, 36, 420], "config": [405, 406, 419], "configur": [390, 391, 405, 427], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 377, 378, 379, 380, 381, 382, 383, 384, 393, 394, 420, 426, 433], "construct": [371, 372, 373, 378, 379, 393, 401, 402, 423, 426], "constructor": [426, 427], "continu": [39, 193, 377, 379, 393, 400, 417, 420, 424, 426, 431, 433], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 420], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 122, "contribut": 414, "contributor": 415, "conveni": 423, "convent": 414, "convers": [318, 319, 320, 423, 427], "convert": [214, 390], "convert_acqf": 24, "convert_bound": 337, "copi": 427, "core": [195, 198, 199, 211, 212, 213, 214, 215, 216, 217, 224, 225, 243, 250, 252], "cpu": 412, "creat": [370, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 390, 391, 398, 400, 401, 404, 405, 408, 409, 419, 426], "create_example_plot": 349, "creation": [371, 372, 373, 393, 394, 419, 433], "current": 429, "custom": [128, 239, 241, 370, 381, 385, 386, 389, 390, 391, 429], "customdiscreteparamet": [129, 424], "customencod": 132, "customonnxsurrog": 240, "data": [371, 372, 373, 426, 431], "datafram": [321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 378, 379, 402, 426, 427, 428], "de": [404, 427], "default": [253, 426, 427], "defaultkernelfactori": 254, "defin": [370, 378, 379, 386, 387, 388, 398, 401, 402, 406, 408, 409, 411], "definit": 387, "depend": [382, 411, 424], "deprec": [42, 43, 44, 45, 111, 112, 413], "deprecationerror": 60, "descript": 398, "deseri": 427, "deserialize_datafram": 221, "design": [411, 414], "desir": [113, 115], "desirabilityobject": [114, 423], "develop": 414, "df_apply_dependency_augment": 294, "df_apply_permutation_augment": 295, "df_drop_single_value_column": 326, "df_drop_string_column": 327, "df_uncorrelated_featur": 328, "dictionari": [405, 406], "differ": 376, "dimens": 402, "discret": [46, 200, 203, 204, 205, 380, 381, 382, 383, 393, 401, 420, 424, 425, 426], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 420], "discretedependenciesconstraint": [49, 420], "discreteexcludeconstraint": [50, 420], "discretelinkedparametersconstraint": [51, 420], "discretenolabelduplicatesconstraint": [52, 420], "discreteparamet": 123, "discretepermutationinvarianceconstraint": [53, 420], "discreteproductconstraint": [54, 420], "discretesamplingmethod": 356, "discretesumconstraint": [55, 420], "discuss": 396, "disk": 421, "do": 428, "docstr": 414, "document": 391, "dtypefloatnumpi": 342, "dtypefloatonnx": 343, "dtypefloattorch": 362, "dummi": 297, "duplic": 393, "dure": 433, "edbo": 255, "edbokernelfactori": 256, "effici": 433, "emptysearchspaceerror": 61, "encod": 424, "end": 411, "enum": [116, 130, 278], "environ": 421, "equival": 427, "estim": 433, "exampl": [371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 390, 391, 398, 401, 402, 404, 405, 406, 410, 411, 422], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "exceptiongroup": 412, "exclus": [383, 384], "expect": 431, "expectedimprov": 3, "experi": [381, 382, 383, 384, 390, 391, 398, 404, 411, 418, 428], "experiment": [419, 421, 422], "expir": 413, "explain": [80, 422], "explicit": 426, "extend": 414, "extract": 429, "fake": 433, "farthest_point_sampl": 357, "featur": 421, "field": 427, "file": [405, 406], "filter_df": 329, "find_subclass": 299, "finite_float": 365, "fix": [412, 413], "float": 421, "fpsrecommend": 190, "fraction_to_float": 319, "from": [405, 411, 413, 419, 426, 427], "full": [371, 372, 373, 426], "function": [370, 371, 372, 373, 376, 378, 379, 387, 398, 401, 402, 414, 418], "further": 419, "fuzzy_row_match": 330, "gammaprior": 153, "gaussian_process": [242, 243, 245, 248, 249, 250, 252, 253, 255], "gaussianmixtureclusteringrecommend": 185, "gaussianprocesspreset": 251, "gaussianprocesssurrog": 244, "gener": [408, 409, 414, 425], "geom_mean": 347, "get": [375, 419], "get_base_structure_hook": 215, "get_baseclass": 300, "get_canonical_smil": 314, "get_fingerprint_class": 315, "get_model_params_valid": 270, "get_parameters_from_datafram": 142, "get_subclass": 301, "get_transform_object": 331, "get_transform_paramet": 207, "get_user_detail": 288, "github": 411, "global": 417, "group_duplicate_valu": 302, "guid": 432, "halfcauchyprior": 154, "halfnormalprior": 155, "hilberts_factori": 303, "hook": [385, 386, 387, 388], "hybrid": [378, 402, 420], "imaginari": 396, "implicit": 423, "import": [370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 388, 390, 391, 393, 394, 396, 398, 400, 401, 402, 404, 405, 406, 408, 409, 422], "improv": 388, "includ": 411, "inclus": 371, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatibleexplainererror": 64, "incompatiblesearchspaceerror": 65, "incomplet": 373, "incorpor": 384, "indent": 350, "independentgaussiansurrog": 236, "index": 411, "indic": 411, "infiniteintervalerror": 335, "influenc": 433, "inform": [419, 425], "initi": [371, 376], "insight": [78, 79, 80, 81, 83, 84, 85, 86, 422], "instal": [411, 412], "instanc": 386, "instead": [390, 391], "instruct": 421, "internet": 421, "interpret": 422, "interrupt": 387, "interv": [334, 335, 336, 337, 338], "invalidsurrogatemodelerror": 66, "invalidtargetvalueerror": 67, "invari": 393, "invok": 427, "irrelev": 431, "is_abstract": 311, "is_all_inst": 304, "is_en": 289, "is_shap_explain": 85, "issu": [411, 412], "iter": [378, 379, 390, 391, 398], "json": [419, 427], "kernel": [87, 88, 91, 92, 101], "kernel_factori": [245, 248], "kernelfactori": 246, "kmeansclusteringrecommend": 186, "known": [411, 412], "leak": 412, "learn": [407, 409, 417, 428, 431], "licens": [411, 416], "limit": [422, 429, 430], "linear": [257, 379], "linear_transform": 285, "linearkernel": 93, "link": 391, "local": [411, 417], "logexpectedimprov": 4, "lognormalprior": 156, "look_up_target": 227, "lookup": [226, 227, 371, 372, 373, 378, 379, 387, 402, 408, 409, 428], "loop": [370, 371, 372, 373, 408, 409, 411], "maco": 412, "maintain": [411, 415], "make_explainer_for_surrog": 86, "make_gp_from_preset": 252, "mandatori": 423, "manual": [381, 382, 383, 384], "mark": 418, "match": 430, "match_attribut": 305, "maternkernel": 94, "max": 430, "mean": 428, "meanpredictionsurrog": 260, "measur": [375, 390, 391, 419, 433], "mechan": [371, 372, 373, 428], "memori": [339, 340, 433], "memorys": 201, "meta": [162, 163, 165, 425], "metarecommend": 164, "method": [386, 414, 417], "min": 430, "miss": 428, "mixin": 218, "mixtur": [392, 393, 394], "mode": [398, 430], "model": [376, 390, 391, 393, 394, 396, 422, 429], "modelnottrainederror": 68, "monitor": 388, "monkeypatch": [386, 387, 388], "multi": [395, 396, 397, 398], "multipl": 428, "naiv": [169, 259], "naivehybridspacerecommend": 170, "name": 424, "name_to_smil": 316, "necessari": [371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 390, 391, 398, 401, 402, 404, 405, 406], "nest": 427, "ngboost": 261, "ngboostsurrog": 262, "nois": 433, "nomcacquisitionfunctionerror": 69, "non_inf_float": 366, "non_nan_float": 367, "non_shap_explain": 81, "none": 428, "nonpredict": [181, 182, 184, 189], "nonpredictiverecommend": 183, "nonstring_to_tupl": 320, "norecommenderslefterror": 70, "normalprior": 157, "notenoughpointslefterror": 71, "nothingtosimulateerror": 72, "numer": [135, 281, 341, 342, 343, 344, 345, 346, 347], "numericalcontinuousparamet": [136, 424], "numericaldiscreteparamet": [137, 424], "numericaltarget": [282, 430], "numericalunderflowerror": 73, "object": [105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 371, 372, 373, 376, 378, 379, 381, 382, 383, 384, 398, 401, 404, 408, 409, 411, 423, 427], "onli": 421, "onnx": 390, "optim": [370, 408, 409, 411, 419, 433], "option": [411, 424, 425], "optionalimporterror": 74, "order": 393, "other": 376, "output": [390, 391], "overrid": 414, "packag": [411, 421], "page": 422, "pamclusteringrecommend": 187, "parallel": 419, "paramet": [120, 121, 124, 125, 128, 130, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 371, 372, 373, 376, 391, 393, 394, 419, 422, 424, 426, 433], "parameter_cartesian_prod_panda": 203, "parameter_cartesian_prod_polar": 204, "parameterencod": 133, "partial": [21, 418], "partialacquisitionfunct": 22, "pass": 391, "pend": 418, "perform": [371, 398, 401, 402], "periodickernel": 95, "permut": 393, "piecewisepolynomialkernel": 96, "plainkernelfactori": 247, "plot": [348, 349, 350, 351, 370, 387, 388, 422], "point": 421, "polar": [412, 421], "polynomialkernel": 97, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 390, "precis": 421, "preset": [249, 250, 252, 253, 255], "pretrain": 390, "pretty_print_df": 332, "print": [381, 382, 384, 398], "prior": [148, 149, 150, 151], "probabilityofimprov": 7, "probabl": 388, "problem": [370, 387, 412], "product": [384, 426], "productkernel": 103, "pull": 414, "pure": [171, 172, 174, 175, 177, 179, 180, 181, 182, 184, 189, 417, 425], "purerecommend": 173, "pycharm": 412, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 411, "qupperconfidencebound": 18, "random": [352, 353, 354], "random_forest": 263, "randomforestsurrog": 264, "randomrecommend": 191, "rbfkernel": 98, "recommend": [159, 160, 162, 163, 165, 169, 171, 172, 174, 175, 177, 179, 180, 181, 182, 184, 189, 375, 376, 390, 391, 401, 402, 404, 418, 419, 425], "recommenderprotocol": 161, "reduct": 417, "refers_to": 306, "regist": 386, "register_custom_architectur": 241, "register_hook": 307, "relat": 412, "remov": 413, "represent": [393, 394, 422, 426], "reproduc": 433, "request": 414, "restrict": 426, "result": [370, 387, 388, 418], "rffkernel": 99, "role": 431, "rqkernel": 100, "run": [370, 378, 379, 396], "sampl": [189, 417, 425], "sample_numerical_df": 358, "sampling_algorithm": [355, 357, 358], "scalar": [115, 117, 429], "scale": 359, "scalekernel": 104, "scenario": [228, 229, 428], "scope": 421, "search": [393, 394, 400, 408, 411, 417, 425, 426, 433], "searchspac": [192, 193, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 371, 373, 376, 378, 379, 381, 382, 383, 384, 398, 399, 401, 402, 409], "searchspacetyp": 197, "see": 431, "select_constructor_hook": 216, "semaphor": 412, "sequenti": [165, 419], "sequential_greedi": [179, 180], "sequentialgreedyrecommend": 180, "sequentialmetarecommend": 166, "serial": [210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 403, 404, 419, 427], "serialize_datafram": 222, "serialmixin": 219, "set": [370, 387, 388, 400, 408, 409], "set_random_se": 353, "setup": [375, 381, 382, 383, 384, 390, 391, 393, 394, 396, 398, 404], "shap": [79, 80, 81, 83, 84, 85, 86, 422], "shap_explain": 83, "shap_plot": 84, "shapinsight": 82, "signatur": 386, "simplex": [393, 426], "simul": [223, 224, 225, 226, 227, 228, 229, 230, 231, 370, 371, 372, 373, 387, 396, 408, 409, 428], "simulate_experi": 225, "simulate_scenario": 229, "simulate_transfer_learn": 231, "singl": [118, 428], "singletargetobject": [119, 423], "sklearnclusteringrecommend": 188, "slot": [393, 394], "smile": 139, "smiles_to_fingerprint_featur": 317, "smoothedboxprior": 158, "some": [378, 379, 398], "sort_paramet": 143, "space": [393, 394, 400, 402, 408, 411, 417, 425, 426, 433], "span": 393, "stage": 390, "start": 411, "stop": 387, "str_to_acqf": 25, "strategi": [376, 411], "streamingsequentialmetarecommend": 167, "string": [405, 427], "strtobool": 312, "structure_constraint": 45, "structure_object": 112, "studi": 429, "sub": 417, "subselectioncondit": [37, 420], "subspac": 426, "subspacecontinu": 194, "subspacediscret": 202, "substanc": [138, 139, 393, 411], "substanceencod": 134, "substanceparamet": [140, 424], "suggest": 412, "suitabl": 376, "sum": 384, "support": [412, 418], "surrog": [232, 233, 235, 237, 239, 241, 242, 243, 245, 248, 249, 250, 252, 253, 255, 257, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 376, 389, 390, 391, 429], "surrogateprotocol": 238, "synchron": 414, "synthet": [401, 402], "tabl": [371, 372, 373, 408, 409, 411], "target": [272, 273, 274, 275, 277, 278, 281, 283, 284, 285, 286, 386, 397, 398, 423, 430, 433], "targetmod": 279, "targettransform": 280, "task": [408, 409], "taskparamet": [127, 424, 431], "technologi": 431, "telemetri": [287, 288, 289, 290, 291, 411, 421], "telemetry_record_recommended_measurement_percentag": 290, "telemetry_record_valu": 291, "temporary_se": 354, "terminologi": [393, 427, 428, 431], "test": [378, 379, 401, 402], "theoret": 393, "thi": [371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 398, 401, 402, 422], "thresholdcondit": [38, 420], "through": 431, "to_kernel_factori": 248, "to_object": 110, "to_searchspac": 198, "to_str": 351, "to_tensor": 333, "to_tupl": 308, "toler": 419, "tool": 414, "torch": [361, 362, 363, 412], "tradit": 394, "train": 390, "transfer": [407, 409, 428, 431], "transfer_learn": [230, 231], "transform": [283, 284, 285, 286, 398], "treasur": 431, "triangular_transform": 286, "trigger": [386, 388], "two": 406, "twophasemetarecommend": 168, "type": 427, "uncertainti": 417, "unidentifiedsubclasserror": 75, "uninstal": 421, "uninterrupt": 387, "unlock": 431, "unmatchedattributeerror": 76, "unreleas": 413, "unstructure_bas": 217, "unusedobjectwarn": 77, "upperconfidencebound": 8, "us": [371, 372, 373, 375, 376, 381, 382, 383, 384, 390, 391, 396, 398, 401, 402, 426, 427, 428, 429], "usag": 422, "use_fallback_constructor_hook": 338, "user": 432, "util": [23, 24, 25, 141, 142, 143, 220, 221, 222, 265, 266, 267, 268, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 433], "v": [386, 393, 412, 419], "valid": [56, 57, 58, 144, 145, 146, 147, 206, 207, 208, 209, 269, 270, 271, 364, 365, 366, 367, 368, 391, 406], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 271, "validate_decorrel": 145, "validate_is_finit": 146, "validate_not_nan": 368, "validate_paramet": 209, "validate_parameter_nam": 208, "validate_searchspace_from_config": 199, "validate_simplex_subspace_from_config": 205, "validate_unique_valu": 147, "valu": [426, 427, 428], "variabl": 421, "varname_numpy_use_single_precis": 344, "varname_torch_use_single_precis": 363, "verif": [381, 382, 383, 384, 393, 394, 406], "verifi": 379, "via": 422, "we": 428, "what": 428, "window": 412, "within": 426, "without": 412, "workflow": [414, 418], "wrap": [378, 379, 402], "write": 414}})